<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KubeClient</name>
    </assembly>
    <members>
        <member name="T:KubeClient.ApiMetadata.KubeApiMetadata">
            <summary>
                Metadata for a Kubernetes resource API.
            </summary>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadata.#ctor(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String},System.Boolean,System.Collections.Generic.IReadOnlyList{KubeClient.ApiMetadata.KubeApiPathMetadata})">
            <summary>
                Create new Kubernetes resource API metadata.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="singularName">
                The singular name (if any) for the resource.
            </param>
            <param name="shortNames">
                Short names (if any) for the resource.
            </param>
            <param name="isPreferredVersion">
                Is this the currently-preferred version of the API?
            </param>
            <param name="paths">
                The metadata for the API's paths.
            
                At least 1 path must be supplied.
            </param>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.Kind">
            <summary>
                The resource kind.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.ApiVersion">
            <summary>
                The resource API version.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.SingularName">
            <summary>
                The singular name (if any) for the resource.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.ShortNames">
            <summary>
                Short names (if any) for the resource.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.IsPreferredVersion">
            <summary>
                Is this the currently-preferred version of the API?
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.PrimaryPath">
            <summary>
                The metadata for the API's primary (non-namespaced) path.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.PrimaryNamespacedPath">
            <summary>
                The metadata for the API's primary namespaced path.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.PrimaryPathMetadata">
            <summary>
                The metadata for the API's primary (non-namespaced) path.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.PrimaryNamespacedPathMetadata">
            <summary>
                The metadata for the API's primary namespaced path.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadata.PathMetadata">
            <summary>
                The metadata for the API's path(s).
            </summary>
        </member>
        <member name="T:KubeClient.ApiMetadata.KubeApiMetadataCache">
            <summary>
                A cache for Kubernetes resource API metadata.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiMetadataCache.ApiGroupPrefixes">
            <summary>
                Well-known group prefixes.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiMetadataCache._stateLock">
            <summary>
                An object used to synchronise access to cache state.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiMetadataCache._metadata">
            <summary>
                Model metadata, keyed by apiVersion/Kind, singular name, and short names.
            </summary>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.#ctor">
            <summary>
                Create a new Kubernetes resource metadata cache.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiMetadataCache.IsEmpty">
            <summary>
                Is the cache currently empty?
            </summary>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Get``1">
            <summary>
                Retrieve metadata for a Kubernetes resource API.
            </summary>
            <typeparam name="TModel">
                The type of model that represents the resource.
            </typeparam>
            <returns>
                The API metadata, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Get(System.Type)">
            <summary>
                Retrieve metadata for a Kubernetes resource API.
            </summary>
            <param name="modelType">
                The CLR <see cref="T:System.Type"/> of the model that represents the resource.
            </param>
            <returns>
                The API metadata, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Get(System.String)">
            <summary>
                Retrieve metadata for a Kubernetes resource API.
            </summary>
            <param name="name">
                The resource singular-name or short-name.
            </param>
            <returns>
                The API metadata, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Get(System.String,System.String)">
            <summary>
                Retrieve metadata for a Kubernetes resource API.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <returns>
                The API metadata, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetPrimaryPath``1">
            <summary>
                Retrieve the primary path of a Kubernetes resource API.
            </summary>
            <typeparam name="TModel">
                The type of model that represents the resource.
            </typeparam>
            <returns>
                The API's primary (i.e. first) path, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetPrimaryPath(System.Type)">
            <summary>
                Retrieve the primary path of a Kubernetes resource API.
            </summary>
            <param name="modelType">
                The CLR <see cref="T:System.Type"/> of the model that represents the resource.
            </param>
            <returns>
                The API's primary (i.e. first) path, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetPrimaryPath(System.String)">
            <summary>
                Retrieve the primary path of a Kubernetes resource API.
            </summary>
            <param name="name">
                The resource singular-name or short-name.
            </param>
            <returns>
                The API metadata, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetPrimaryPath(System.String,System.String)">
            <summary>
                Retrieve the primary path of a Kubernetes resource API.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <returns>
                The API's primary (i.e. first) path, or <c>null</c> if no metadata was found for the API.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Clear">
            <summary>
                Clear the cache.
            </summary>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.LoadFromMetadata(System.Reflection.Assembly,System.Boolean)">
            <summary>
                Populate the cache from model metadata.
            </summary>
            <param name="assembly">
                The assembly containing model types to process.
            </param>
            <param name="clearExisting">
                Remove existing metadata from the cache?
            </param>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Load(KubeClient.IKubeApiClient,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Populate the cache from the Kubernetes API.
            </summary>
            <param name="kubeClient">
                The <see cref="N:KubeClient"/> used to retrieve API metadata.
            </param>
            <param name="clearExisting">
                Remove existing metadata from the cache?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.LoadGroupApis(KubeClient.IKubeApiClient,System.String,KubeClient.Models.APIGroupV1,KubeClient.Models.GroupVersionForDiscoveryV1,System.Threading.CancellationToken)">
            <summary>
                Load metadata for the specified group of resource APIs.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client used to load API metadata.
            </param>
            <param name="apiGroupPrefix">
                The API group prefix (usually "api" or "apis").
            </param>
            <param name="apiGroup">
                The API group.
            </param>
            <param name="groupVersion">
                The current API group version to examine.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                A list of <see cref="T:KubeClient.ApiMetadata.KubeApiMetadata"/> representing the group's APIs.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetCacheKeys">
            <summary>
                Retrieve all keys for which the cache contains metadata.
            </summary>
            <returns>
                An array of strings representing the cache keys.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.GetKnownResourceKinds">
            <summary>
                Retrieve all resource kinds for which the cache contains metadata.
            </summary>
            <returns>
                An array of (kind, apiVersion) tuples.
            </returns>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.Cache(System.Collections.Generic.IEnumerable{KubeClient.ApiMetadata.KubeApiMetadata},System.Boolean)">
            <summary>
                Populate the cache using the specified metadata.
            </summary>
            <param name="loadedMetadata">
                API metadata to be added to the cache.
            </param>
            <param name="clearExisting">
                Remove existing metadata from the cache?
            </param>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiMetadataCache.CreateCacheKey(System.String,System.String)">
            <summary>
                Create a cache key based on the specified resource kind and API version.
            </summary>
            <param name="kind">
                The Kubernetes resource kind (e.g. "Pod").
            </param>
            <param name="apiVersion">
                The Kubernetes resource API version (e.g. "v1").
            </param>
            <returns>
                The cache key.
            </returns>
        </member>
        <member name="T:KubeClient.ApiMetadata.KubeApiPathMetadata">
            <summary>
                Metadata for a specific path in a Kubernetes resource API.
            </summary>
        </member>
        <member name="M:KubeClient.ApiMetadata.KubeApiPathMetadata.#ctor(System.String,System.Boolean,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
                Create new Kubernetes resource API path metadata.
            </summary>
            <param name="path">
                The API path.
            </param>
            <param name="isNamespaced">
                Is the path namespaced?
            </param>
            <param name="verbs">
                The verbs supported on the path.
            </param>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiPathMetadata.Path">
            <summary>
                The API path.
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiPathMetadata.IsNamespaced">
            <summary>
                Is the path namespaced?
            </summary>
        </member>
        <member name="P:KubeClient.ApiMetadata.KubeApiPathMetadata.Verbs">
            <summary>
                The verbs supported on the path.
            </summary>
        </member>
        <member name="T:KubeClient.ApiMetadata.KubeApiVerb">
            <summary>
                Well-known verbs supported by Kubernetes resource APIs.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Create">
            <summary>
                Create a resource.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Delete">
            <summary>
                Delete a resource.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.DeleteCollection">
            <summary>
                Delete a collection of resources.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Get">
            <summary>
                Retrieve a single resource.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.List">
            <summary>
                List resources.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Patch">
            <summary>
                Patch (selectively update) a resource.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Update">
            <summary>
                Update (replace) a resource.
            </summary>
        </member>
        <member name="F:KubeClient.ApiMetadata.KubeApiVerb.Watch">
            <summary>
                Watch a resource or resource collection for changes.
            </summary>
        </member>
        <member name="T:KubeClient.ClientFactoryExtensions">
            <summary>
                Extension methods for creating Kubernetes resource clients for a <see cref="T:KubeClient.KubeApiClient"/>.
            </summary>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.NamespacesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Namespaces (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.ConfigMapsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes ConfigMaps (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.DaemonSetsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes DaemonSets (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.DeploymentsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Deployments (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.DeploymentsV1Beta1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Deployments (v1beta1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.JobsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Jobs (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.NodesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Nodes (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.EventsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Events (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.IngressesV1Beta1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Ingresses (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.PersistentVolumesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes PersistentVolumes (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.PersistentVolumeClaimsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes PersistentVolumeClaims (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.PodsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Pods (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.RolesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Roles (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.RoleBindingsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Role Bindings (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.SecretsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Secrets (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.ServiceAccountsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Service Accounts (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.ServicesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes Services (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.ReplicationControllersV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes ReplicationControllers (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.ReplicaSetsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes ReplicaSets (v1beta1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.APIGroupsV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes APIGroups (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.APIResourcesV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes APIResources (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.NetworkPolicyV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes NetworkPolicy (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.StatefulSetV1(KubeClient.IKubeApiClient)">
            <summary>
                Get the Kubernetes StatefulSets (v1) resource client.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.ClientFactoryExtensions.Dynamic(KubeClient.IKubeApiClient)">
            <summary>
                Get a client for dynamic access to Kubernetes resource APIs.
            </summary>
            <param name="kubeClient">
                The Kubernetes API client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="T:KubeClient.IKubeApiClient">
            <summary>
                Represents a client for the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.IKubeApiClient.ApiEndPoint">
            <summary>
                The base address of the Kubernetes API end-point targeted by the client.
            </summary>
        </member>
        <member name="P:KubeClient.IKubeApiClient.DefaultNamespace">
            <summary>
                The default Kubernetes namespace.
            </summary>
        </member>
        <member name="P:KubeClient.IKubeApiClient.Http">
            <summary>
                The underlying HTTP client.
            </summary>
        </member>
        <member name="P:KubeClient.IKubeApiClient.LoggerFactory">
            <summary>
                The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </summary>
        </member>
        <member name="M:KubeClient.IKubeApiClient.GetClientOptions">
            <summary>
                Get a copy of the <see cref="T:KubeClient.KubeClientOptions"/> used to configure the client.
            </summary>
            <returns>
                The <see cref="T:KubeClient.KubeClientOptions"/>.
            </returns>
        </member>
        <member name="M:KubeClient.IKubeApiClient.ResourceClient``1(System.Func{KubeClient.IKubeApiClient,``0})">
            <summary>
                Get or create a Kubernetes resource client of the specified type.
            </summary>
            <typeparam name="TClient">
                The type of Kubernetes resource client to get or create.
            </typeparam>
            <param name="clientFactory">
                A delegate that creates the resource client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="T:KubeClient.K8sAnnotations">
            <summary>
                Well-known annotation keys used by Kubernetes.
            </summary>
        </member>
        <member name="T:KubeClient.K8sAnnotations.Deployment">
            <summary>
                Well-known (deployment-specific) annotation keys used by Kubernetes.
            </summary>
        </member>
        <member name="F:KubeClient.K8sAnnotations.Deployment.Revision">
            <summary>
                The annotation key representing a specific revision of a Deployment.
            </summary>
        </member>
        <member name="T:KubeClient.KubeApiClient">
            <summary>
                Client for the Kubernetes API.
            </summary>
        </member>
        <member name="F:KubeClient.KubeApiClient._clients">
            <summary>
                Kubernetes resource clients.
            </summary>
        </member>
        <member name="M:KubeClient.KubeApiClient.#ctor(System.Net.Http.HttpClient,KubeClient.KubeClientOptions)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/>.
            </summary>
            <param name="httpClient">
                The underlying HTTP client.
            </param>
            <param name="options">
                The <see cref="T:KubeClient.KubeClientOptions"/> used to configure the <see cref="T:KubeClient.KubeApiClient"/>.
            </param>
        </member>
        <member name="M:KubeClient.KubeApiClient.Dispose">
            <summary>
                Dispose of resources being used by the <see cref="T:KubeClient.KubeApiClient" />.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiClient.ApiEndPoint">
            <summary>
                The base address of the Kubernetes API end-point targeted by the client.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiClient.DefaultNamespace">
            <summary>
                The default Kubernetes namespace.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiClient.Http">
            <summary>
                The underlying HTTP client.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiClient.LoggerFactory">
            <summary>
                The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiClient.Options">
            <summary>
                The <see cref="T:KubeClient.KubeClientOptions"/> used to configure the <see cref="T:KubeClient.KubeApiClient"/>.
            </summary>
        </member>
        <member name="M:KubeClient.KubeApiClient.GetClientOptions">
            <summary>
                Get a copy of the <see cref="T:KubeClient.KubeClientOptions"/> used to configure the client.
            </summary>
            <returns>
                The <see cref="T:KubeClient.KubeClientOptions"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.ResourceClient``1(System.Func{KubeClient.IKubeApiClient,``0})">
            <summary>
                Get or create a Kubernetes resource client of the specified type.
            </summary>
            <typeparam name="TClient">
                The type of Kubernetes resource client to get or create.
            </typeparam>
            <param name="clientFactory">
                A delegate that creates the resource client.
            </param>
            <returns>
                The resource client.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(KubeClient.KubeClientOptions)">
            <summary>
                Create and configure a <see cref="T:KubeClient.KubeApiClient"/> using the specified options.
            </summary>
            <param name="options">
                The <see cref="T:KubeClient.KubeClientOptions"/> used to configure the client.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(System.String,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> without authentication.
            </summary>
            <param name="apiEndPoint">
                The base address for the Kubernetes API end-point.
            </param>
            <param name="loggerFactory">
                An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(System.Uri,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> without authentication.
            </summary>
            <param name="apiEndPoint">
                The base address for the Kubernetes API end-point.
            </param>
            <param name="loggerFactory">
                An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> using a bearer token for authentication.
            </summary>
            <param name="apiEndPoint">
                The base address for the Kubernetes API end-point.
            </param>
            <param name="accessToken">
                The access token to use for authentication to the API.
            </param>
            <param name="expectServerCertificate">
                An optional server certificate to expect.
            </param>
            <param name="loggerFactory">
                An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> using an X.509 certificate for client authentication.
            </summary>
            <param name="apiEndPoint">
                The base address for the Kubernetes API end-point.
            </param>
            <param name="clientCertificate">
                The X.509 certificate to use for client authentication.
            </param>
            <param name="expectServerCertificate">
                An optional server certificate to expect.
            </param>
            <param name="loggerFactory">
                An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="M:KubeClient.KubeApiClient.CreateFromPodServiceAccount(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> using pod-level configuration.
            </summary>
            <param name="loggerFactory">
                An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
            <remarks>
                Only works from within a container running in a Kubernetes Pod.
            </remarks>
        </member>
        <member name="M:KubeClient.KubeApiClient.Create(System.Net.Http.HttpClient,KubeClient.KubeClientOptions)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiClient"/> (for testing purposes only).
            </summary>
            <param name="httpClient">
                The <see cref="T:System.Net.Http.HttpClient"/> used to communicate with the Kubernetes API.
            </param>
            <param name="options">
                The <see cref="T:KubeClient.KubeClientOptions"/> used to configure the <see cref="T:KubeClient.KubeApiClient"/>.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeApiClient"/>.
            </returns>
        </member>
        <member name="T:KubeClient.KubeApiClientLoggingExtensions">
            <summary>
                Logging-related extension methods for <see cref="T:KubeClient.KubeApiClient"/>.
            </summary>
        </member>
        <member name="M:KubeClient.KubeApiClientLoggingExtensions.LoggerFactory(KubeClient.KubeApiClient)">
            <summary>
                Get the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </summary>
            <param name="kubeApiClient">
                The <see cref="T:KubeClient.KubeApiClient"/>.
            </param>
            <returns>
                The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.
            </returns>
        </member>
        <member name="T:KubeClient.KubeApiException">
            <summary>
                Exception raised when an error result is returned by the Kubernetes API.
            </summary>
        </member>
        <member name="M:KubeClient.KubeApiException.#ctor(KubeClient.Models.StatusV1)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiException"/> using the information contained in a Kubernetes status model.
            </summary>
            <param name="status">
                The Kubernetes <see ref="StatusV1"/> model.
            </param>
        </member>
        <member name="M:KubeClient.KubeApiException.#ctor(System.String,KubeClient.Models.StatusV1)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiException"/> using the information contained in a Kubernetes status model.
            </summary>
            <param name="message">
                The exception message.
            </param>
            <param name="status">
                The Kubernetes <see ref="StatusV1"/> model.
            </param>
        </member>
        <member name="M:KubeClient.KubeApiException.#ctor(KubeClient.Models.StatusV1,System.Exception)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiException"/> using the information contained in a Kubernetes status model.
            </summary>
            <param name="status">
                The Kubernetes <see ref="StatusV1"/> model.
            </param>
            <param name="innerException">
                The exception that caused the current exception to be raised.
            </param>
        </member>
        <member name="M:KubeClient.KubeApiException.#ctor(System.String,HTTPlease.HttpRequestException{KubeClient.Models.StatusV1})">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiException"/> with the specified message.
            </summary>
            <param name="message">
                The exception message.
            </param>
            <param name="innerException">
                The exception that caused the current exception to be raised.
            </param>
        </member>
        <member name="M:KubeClient.KubeApiException.#ctor(HTTPlease.HttpRequestException{KubeClient.Models.StatusV1})">
            <summary>
                Create a new <see cref="T:KubeClient.KubeApiException"/> from an <see cref="T:HTTPlease.HttpRequestException`1"/>.
            </summary>
            <param name="requestException">
                The exception that caused the current exception to be raised.
            </param>
        </member>
        <member name="P:KubeClient.KubeApiException.Status">
            <summary>
                A Kubernetes <see cref="T:KubeClient.Models.StatusV1"/> model that (if present) contains more information about the error.
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiException.HasStatus">
            <summary>
                Does the exception have a <see cref="P:KubeClient.KubeApiException.Status"/> model available?
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiException.StatusReason">
            <summary>
                The Kubernetes reason code (if available from <see cref="P:KubeClient.KubeApiException.Status"/>).
            </summary>
        </member>
        <member name="P:KubeClient.KubeApiException.StatusMessage">
            <summary>
                The Kubernetes error message (if available from <see cref="P:KubeClient.KubeApiException.Status"/>).
            </summary>
        </member>
        <member name="M:KubeClient.KubeApiException.GetExceptionMessage(KubeClient.Models.StatusV1)">
            <summary>
                Generate an exception message from a Kubernetes status model.
            </summary>
            <param name="status">
                The Kubernetes <see cref="T:KubeClient.Models.StatusV1"/> model.
            </param>
            <returns>
                The exception message.
            </returns>
        </member>
        <member name="T:KubeClient.KubeClientConstants">
            <summary>
                Constants for the Kubernetes API client.
            </summary>
        </member>
        <member name="F:KubeClient.KubeClientConstants.KubernetesServiceHost">
            <summary>
                Environment Variable set in a Kubernetes Pod containing the host name of the API Service
            </summary>
        </member>
        <member name="F:KubeClient.KubeClientConstants.KubernetesServicePort">
            <summary>
                Environment Variable set in a Kubernetes Pod containing the port of the API Service
            </summary>
        </member>
        <member name="F:KubeClient.KubeClientConstants.DefaultServiceAccountPath">
            <summary>
                Default path of mounted volume containing Kubernetes service account token, CA certificate, and default namespace.
            </summary>
        </member>
        <member name="T:KubeClient.KubeClientException">
            <summary>
                Exception raised when an error is encountered by the Kubernetes API client.
            </summary>
        </member>
        <member name="F:KubeClient.KubeClientException.DefaultMessage">
            <summary>
                The default exception message used when no message was available.
            </summary>
        </member>
        <member name="M:KubeClient.KubeClientException.#ctor(System.String)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeClientException"/>.
            </summary>
            <param name="message">
                The exception message.
            </param>
        </member>
        <member name="M:KubeClient.KubeClientException.#ctor(System.String,System.Exception)">
            <summary>
                Create a new <see cref="T:KubeClient.KubeClientException"/>, as caused by a previous exception.
            </summary>
            <param name="message">
                The exception message.
            </param>
            <param name="innerException">
                The exception that caused the <see cref="T:KubeClient.KubeClientException"/> to be raised.
            </param>
        </member>
        <member name="T:KubeClient.KubeClientOptions">
            <summary>
                Options for the Kubernetes API client.
            </summary>
        </member>
        <member name="M:KubeClient.KubeClientOptions.#ctor">
            <summary>
                Create new <see cref="T:KubeClient.KubeClientOptions"/>.
            </summary>
        </member>
        <member name="M:KubeClient.KubeClientOptions.#ctor(System.String)">
            <summary>
                Create new <see cref="T:KubeClient.KubeClientOptions"/>.
            </summary>
            <param name="apiEndPoint">
                The base address of the Kubernetes API end-point.
            </param>
        </member>
        <member name="P:KubeClient.KubeClientOptions.KubeNamespace">
            <summary>
                The default Kubernetes namespace to use when no specific namespace is specified.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.ApiEndPoint">
            <summary>
                The base address of the Kubernetes API end-point.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AccessToken">
            <summary>
                The access token used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.Username">
            <summary>
                The username used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.Password">
            <summary>
                The password used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AccessTokenCommand">
            <summary>
                The command used to generate an access token for authenticating to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AccessTokenCommandArguments">
            <summary>
                The command arguments used to generate an access token for authenticating to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AccessTokenSelector">
            <summary>
                The Go-style selector used to retrieve the access token from the command output.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AccessTokenExpirySelector">
            <summary>
                The Go-style selector used to retrieve the access token's expiry date/time from the command output.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.InitialAccessToken">
            <summary>
                The initial access token used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.InitialTokenExpiryUtc">
            <summary>
                The initial token expiry used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AuthStrategy">
            <summary>
                The strategy used for authenticating to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.ClientCertificate">
            <summary>
                The client certificate used to authenticate to the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.CertificationAuthorityCertificate">
            <summary>
                The expected CA certificate used by the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.AllowInsecure">
            <summary>
                Skip verification of the server's SSL certificate?
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.LogHeaders">
            <summary>
                Log request / response headers?
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.LogPayloads">
            <summary>
                Load request / response payloads (bodies)?
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.ModelTypeAssemblies">
            <summary>
                Additional assemblies (if any) that contain model types used by the client.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.LoggerFactory">
            <summary>
            An optional <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </summary>
        </member>
        <member name="P:KubeClient.KubeClientOptions.EnvironmentVariables">
            <summary>
                Environment variables passed to external commands
            </summary>
        </member>
        <member name="M:KubeClient.KubeClientOptions.Clone">
            <summary>
            Create a copy of the <see cref="T:KubeClient.KubeClientOptions"/>.
            </summary>
            <returns>The new <see cref="T:KubeClient.KubeClientOptions"/>.</returns>
        </member>
        <member name="M:KubeClient.KubeClientOptions.EnsureValid">
            <summary>
                Ensure that the <see cref="T:KubeClient.KubeClientOptions"/> are valid.
            </summary>
            <returns>
                The <see cref="T:KubeClient.KubeClientOptions"/> (enables inline use).
            </returns>
        </member>
        <member name="M:KubeClient.KubeClientOptions.FromPodServiceAccount(System.String)">
            <summary>
                Create new <see cref="T:KubeClient.KubeClientOptions"/> using pod-level configuration. 
            </summary>
            <param name="serviceAccountPath">
                The location of the volume containing service account token, CA certificate, and default namespace.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.KubeClientOptions"/>.
            </returns>
            <remarks>
                Only works from within a container running in a Kubernetes Pod.
            </remarks>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:KubeClient.KubeAuthStrategy">
            <summary>
                Represents a strategy for authenticating to the Kubernetes API.
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.None">
            <summary>
                No authentication (e.g. via "kubectl proxy").
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.ClientCertificate">
            <summary>
                Client certificate (i.e. mutual SSL) authentication.
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.Basic">
            <summary>
                Username/Password authentication.
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.BearerToken">
            <summary>
                A pre-defined (static) bearer token.
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.BearerTokenProvider">
            <summary>
                A bearer token obtained by an authentication provider (i.e. running an external command).
            </summary>
        </member>
        <member name="F:KubeClient.KubeAuthStrategy.CredentialPlugin">
            <summary>
                Client credentials obtained by a client-go credential plugin (i.e. running an external command).
            </summary>
        </member>
        <member name="T:KubeClient.KubeResourceUpdateExtensions">
            <summary>
                Extension methods for updating Kubernetes resources.
            </summary>
        </member>
        <member name="M:KubeClient.KubeResourceUpdateExtensions.Update(KubeClient.ResourceClients.ConfigMapClientV1,KubeClient.Models.ConfigMapV1,System.Threading.CancellationToken)">
            <summary>
                Update the specified ConfigMap.
            </summary>
            <param name="client">
                The <see cref="T:KubeClient.Models.ConfigMapV1"/> resource client.
            </param>
            <param name="configMap">
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the new state for the ConfigMap.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the updated ConfigMap.
            </returns>
            <remarks>
                Updates all mutable fields (if specified on <paramref name="configMap"/>).
            </remarks>
        </member>
        <member name="M:KubeClient.KubeResourceUpdateExtensions.Update(KubeClient.ResourceClients.SecretClientV1,KubeClient.Models.SecretV1,System.Threading.CancellationToken)">
            <summary>
                Update the specified Secret.
            </summary>
            <param name="client">
                The <see cref="T:KubeClient.Models.SecretV1"/> resource client.
            </param>
            <param name="secret">
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the new state for the Secret.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the updated Secret.
            </returns>
            <remarks>
                Updates all mutable fields (if specified on <paramref name="secret"/>).
            </remarks>
        </member>
        <member name="T:KubeClient.MessageHandlers.BasicAuthenticationHandler">
            <summary>
            Basic Authentication Handler for username/password authentication.
            </summary>
        </member>
        <member name="M:KubeClient.MessageHandlers.BasicAuthenticationHandler.#ctor(System.String,System.String)">
            <summary>
            Create a new <see cref="T:KubeClient.MessageHandlers.BasicAuthenticationHandler"/>.
            </summary>
            <param name="username">The username to use</param>
            <param name="password">The password to use</param>
        </member>
        <member name="M:KubeClient.MessageHandlers.BasicAuthenticationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:KubeClient.MessageHandlers.BearerTokenHandler">
            <summary>
                The base class for HTTP message handlers that add a bearer token to outgoing requests.
            </summary>
        </member>
        <member name="M:KubeClient.MessageHandlers.BearerTokenHandler.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.MessageHandlers.BearerTokenHandler"/>.
            </summary>
        </member>
        <member name="M:KubeClient.MessageHandlers.BearerTokenHandler.GetTokenAsync(System.Threading.CancellationToken)">
            <summary>
                Obtain a bearer token to use for authentication.
            </summary>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                The access token.
            </returns>
        </member>
        <member name="M:KubeClient.MessageHandlers.BearerTokenHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
                Asynchronously process an HTTP request.
            </summary>
            <param name="request">
                The outgoing request message.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                The incoming response message.
            </returns>
        </member>
        <member name="T:KubeClient.MessageHandlers.CommandBearerTokenHandler">
            <summary>
                HTTP message handler that runs a command to obtain a bearer token and adds it to outgoing requests.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._stateLock">
            <summary>
                An object used to synchronise access to handler state.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessTokenCommand">
            <summary>
                The command to execute in order to obtain the access token for outgoing requests.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessTokenCommandArguments">
            <summary>
                The arguments (if any) for the access-token command.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessTokenSelector">
            <summary>
                The JPath-style selector used to retrieve the access token from the command output.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessTokenExpirySelector">
            <summary>
                The JPath-style selector used to retrieve the access token's expiry date/time from the command output.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessToken">
            <summary>
                The current access token (if any).
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._accessTokenExpiresUtc">
            <summary>
                The UTC date/time that the access token expires.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.CommandBearerTokenHandler._environmentVariables">
            <summary>
                Environment variables assigned to the executed command
            </summary>
        </member>
        <member name="M:KubeClient.MessageHandlers.CommandBearerTokenHandler.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Create a new <see cref="T:KubeClient.MessageHandlers.CommandBearerTokenHandler"/>.
            </summary>
            <param name="accessTokenCommand">
                The command to execute in order to obtain the access token for outgoing requests.
            </param>
            <param name="accessTokenCommandArguments">
                The arguments (if any) for the access-token command.
            </param>
            <param name="accessTokenSelector">
                The Go-style selector used to retrieve the access token from the command output.
            </param>
            <param name="accessTokenExpirySelector">
                The Go-style selector used to retrieve the access token's expiry date/time from the command output.
            </param>
            <param name="initialAccessToken">
                The initial access token (if any) to use for authentication.
            </param>
            <param name="initialTokenExpiryUtc">
                The UTC date / time the the initial access token (if any) expires.
            </param>
            <param name="environmentVariables">
                Environment variables assigned to the executed command
            </param>
        </member>
        <member name="M:KubeClient.MessageHandlers.CommandBearerTokenHandler.GetTokenAsync(System.Threading.CancellationToken)">
            <summary>
                Obtain a bearer token to use for authentication.
            </summary>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                The access token.
            </returns>
        </member>
        <member name="M:KubeClient.MessageHandlers.CommandBearerTokenHandler.JPathFromGoSelector(System.String)">
            <summary>
                Convert a Go-style selector to a JPath-style selector.
            </summary>
            <param name="goSelector">
                The Go-style selector (e.g. "{.foo.bar}").
            </param>
            <returns>
                The JPath-style selector (e.g. "$.foo.bar").
            </returns>
        </member>
        <member name="T:KubeClient.MessageHandlers.StaticBearerTokenHandler">
            <summary>
                HTTP message handler that adds a bearer token to outgoing requests.
            </summary>
        </member>
        <member name="F:KubeClient.MessageHandlers.StaticBearerTokenHandler._token">
            <summary>
                The bearer token added to outgoing requests.
            </summary>
        </member>
        <member name="M:KubeClient.MessageHandlers.StaticBearerTokenHandler.#ctor(System.String)">
            <summary>
                Create a new <see cref="T:KubeClient.MessageHandlers.StaticBearerTokenHandler"/>.
            </summary>
            <param name="token">
                The bearer token added to outgoing requests.
            </param>
        </member>
        <member name="M:KubeClient.MessageHandlers.StaticBearerTokenHandler.GetTokenAsync(System.Threading.CancellationToken)">
            <summary>
                Obtain a bearer token to use for authentication.
            </summary>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                The access token.
            </returns>
        </member>
        <member name="T:KubeClient.Models.ContractResolvers.KubeContractResolver">
            <summary>
                JSON contract resolver for K8s models.
            </summary>
            <remarks>
                Preserves casing of dictionary keys, but all other keys are converted to camelCase.
            </remarks>
        </member>
        <member name="M:KubeClient.Models.ContractResolvers.KubeContractResolver.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.ContractResolvers.KubeContractResolver"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContractResolvers.KubeContractResolver.ResolveDictionaryKey(System.String)">
            <summary>
            Get the JSON property name used to represent a dictionary key.
            </summary>
            <param name="dictionaryKey">The dictionary key.</param>
            <returns>The JSON property name.</returns>
        </member>
        <member name="T:KubeClient.Models.Converters.DynamicKubeObjectConverter">
            <summary>
                Dynamic JSON converter for types derived from <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.DynamicKubeObjectConverter.KubeObjectV1Type">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.DynamicKubeObjectConverter._modelTypesByKubeKind">
            <summary>
            Registered model types, keyed by K8s kind and apiVersion.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeObjectConverter.#ctor(System.Reflection.Assembly[])">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.DynamicKubeObjectConverter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeObjectConverter.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.DynamicKubeObjectConverter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeObjectConverter.CanConvert(System.Type)">
            <summary>
                Determine wither the converter can convert an object of the specified type to / from JSON.
            </summary>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <returns>
                <c>true</c>, if the converter can convert an object of the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KubeClient.Models.Converters.DynamicKubeObjectConverter.CanWrite">
            <summary>
            This converter only supports deserialisation (not serialisation).
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeObjectConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Read (deserialise) an object from JSON.
            </summary>
            <param name="reader">
                A <see cref="T:Newtonsoft.Json.JsonReader"/> representing the JSON to read from.
            </param>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <param name="existingValue">
                The existing value (unused).
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested deserialisation.
            </param>
            <returns>
                The deserialised object.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeObjectConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Write (serialise) an object to JSON.
            </summary>
            <param name="writer">
                A <see cref="T:Newtonsoft.Json.JsonWriter"/> used to write the JSON.
            </param>
            <param name="value">
                The value to serialise.
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested serialisation.
            </param>
        </member>
        <member name="T:KubeClient.Models.Converters.DynamicKubeResourceV1Converter">
            <summary>
                Dynamic JSON converter for types derived from <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.KubeResourceV1Type">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.DynamicKubeResourceV1Converter._modelTypesByKubeKind">
            <summary>
            Registered model types, keyed by K8s kind and apiVersion.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.#ctor(System.Reflection.Assembly[])">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.DynamicKubeResourceV1Converter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.DynamicKubeResourceV1Converter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.CanConvert(System.Type)">
            <summary>
                Determine wither the converter can convert an object of the specified type to / from JSON.
            </summary>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <returns>
                <c>true</c>, if the converter can convert an object of the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.CanWrite">
            <summary>
            This converter only supports deserialisation (not serialisation).
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Read (deserialise) an object from JSON.
            </summary>
            <param name="reader">
                A <see cref="T:Newtonsoft.Json.JsonReader"/> representing the JSON to read from.
            </param>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <param name="existingValue">
                The existing value (unused).
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested deserialisation.
            </param>
            <returns>
                The deserialised object.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.DynamicKubeResourceV1Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Write (serialise) an object to JSON.
            </summary>
            <param name="writer">
                A <see cref="T:Newtonsoft.Json.JsonWriter"/> used to write the JSON.
            </param>
            <param name="value">
                The value to serialise.
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested serialisation.
            </param>
        </member>
        <member name="T:KubeClient.Models.Converters.Int32OrStringV1Converter">
            <summary>
                JSON converter for <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.Int32OrStringV1Converter.Int32OrStringV1Type">
            <summary>
                The CLR <see cref="T:System.Type"/> corresponding to <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.Int32OrStringV1Converter.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.Int32OrStringV1Converter.CanConvert(System.Type)">
            <summary>
                Determine wither the converter can convert an object of the specified type to / from JSON.
            </summary>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <returns>
                <c>true</c>, if the converter can convert an object of the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.Int32OrStringV1Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Read (deserialise) an object from JSON.
            </summary>
            <param name="reader">
                A <see cref="T:Newtonsoft.Json.JsonReader"/> representing the JSON to read from.
            </param>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <param name="existingValue">
                The existing value (unused).
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested deserialisation.
            </param>
            <returns>
                The deserialised object.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.Int32OrStringV1Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Write (serialise) an object to JSON.
            </summary>
            <param name="writer">
                A <see cref="T:Newtonsoft.Json.JsonWriter"/> used to write the JSON.
            </param>
            <param name="value">
                The value to serialise.
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested serialisation.
            </param>
        </member>
        <member name="T:KubeClient.Models.Converters.MicroTimeV1Converter">
            <summary>
                JSON converter for <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.MicroTimeV1Converter.MicroTimeV1Type">
            <summary>
                The CLR <see cref="T:System.Type"/> corresponding to <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.MicroTimeV1Converter.NullableMicroTimeV1Type">
            <summary>
                The CLR <see cref="T:System.Type"/> corresponding to <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.MicroTimeV1Converter.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.MicroTimeV1Converter.CanConvert(System.Type)">
            <summary>
                Determine wither the converter can convert an object of the specified type to / from JSON.
            </summary>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <returns>
                <c>true</c>, if the converter can convert an object of the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.MicroTimeV1Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Read (deserialise) an object from JSON.
            </summary>
            <param name="reader">
                A <see cref="T:Newtonsoft.Json.JsonReader"/> representing the JSON to read from.
            </param>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <param name="existingValue">
                The existing value (unused).
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested deserialisation.
            </param>
            <returns>
                The deserialised object.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.MicroTimeV1Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Write (serialise) an object to JSON.
            </summary>
            <param name="writer">
                A <see cref="T:Newtonsoft.Json.JsonWriter"/> used to write the JSON.
            </param>
            <param name="value">
                The value to serialise.
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested serialisation.
            </param>
        </member>
        <member name="T:KubeClient.Models.Converters.ResourceEventV1Converter">
            <summary>
                Dynamic JSON converter for <see cref="T:KubeClient.Models.ResourceEventV1`1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.ResourceEventV1Converter.ResourceEventV1Type">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.ResourceEventV1`1"/>, specialised for <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.ResourceEventV1Converter.KubeResourceV1Type">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.ResourceEventV1Converter.DefaultModelAssemblies">
            <summary>
            Default assemblies always scanned for model types.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Converters.ResourceEventV1Converter._modelTypesByKubeKind">
            <summary>
            Registered model types, keyed by K8s kind and apiVersion.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.#ctor(System.Reflection.Assembly[])">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.ResourceEventV1Converter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Create a new <see cref="T:KubeClient.Models.Converters.ResourceEventV1Converter"/>.
            </summary>
            <param name="modelTypeAssemblies">Assemblies containing model types supported for deserialisation.</param>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.CanConvert(System.Type)">
            <summary>
                Determine wither the converter can convert an object of the specified type to / from JSON.
            </summary>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <returns>
                <c>true</c>, if the converter can convert an object of the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KubeClient.Models.Converters.ResourceEventV1Converter.CanWrite">
            <summary>
            This converter only supports deserialisation (not serialisation).
            </summary>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Read (deserialise) an object from JSON.
            </summary>
            <param name="reader">
                A <see cref="T:Newtonsoft.Json.JsonReader"/> representing the JSON to read from.
            </param>
            <param name="objectType">
                The target object <see cref="T:System.Type"/>.
            </param>
            <param name="existingValue">
                The existing value (unused).
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested deserialisation.
            </param>
            <returns>
                The deserialised object.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Write (serialise) an object to JSON.
            </summary>
            <param name="writer">
                A <see cref="T:Newtonsoft.Json.JsonWriter"/> used to write the JSON.
            </param>
            <param name="value">
                The value to serialise.
            </param>
            <param name="serializer">
                A <see cref="T:Newtonsoft.Json.JsonSerializer"/> that can be used for nested serialisation.
            </param>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.DeserializeEventType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserialise the event's type from JSON.
            </summary>
            <param name="eventJson">The serialised event JSON.</param>
            <returns>A <see cref="T:KubeClient.Models.ResourceEventType"/> value representing the event type.</returns>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.GetResourceJson(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Get the event's serialised resource from JSON.
            </summary>
            <param name="eventJson">The serialised event JSON.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JObject"/> containing the serialised resource JSON, the resource kind, and the resource API version.</returns>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.GetModelType(System.String,System.String)">
            <summary>
            Get the CLR type representing the model for the specified resource kind and API version.
            </summary>
            <param name="kind">The K8s resource kind.</param>
            <param name="apiVersion">The K8s API version.</param>
            <returns>The model <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="M:KubeClient.Models.Converters.ResourceEventV1Converter.DeserializeResource(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserialise the event's resource from JSON.
            </summary>
            <param name="eventJson">The serialised event JSON.</param>
            <param name="serializer">The JSON serialiser used to deserialise the resource.</param>
            <returns>The deserialised resource.</returns>
        </member>
        <member name="T:KubeClient.Models.DeleteOptionsV1">
            <summary>
                DeleteOptions may be provided when deleting an API object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeleteOptionsV1.GracePeriodSeconds">
            <summary>
                The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeleteOptionsV1.OrphanDependents">
            <summary>
                Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeleteOptionsV1.Preconditions">
            <summary>
                Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeleteOptionsV1.PropagationPolicy">
            <summary>
                Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeletePropagationPolicy">
            <summary>
                Well-known policies for propagating deletion of a resource to its children.
            </summary>
        </member>
        <member name="F:KubeClient.Models.DeletePropagationPolicy.Orphan">
            <summary>
                Do not delete child resources.
            </summary>
        </member>
        <member name="F:KubeClient.Models.DeletePropagationPolicy.Foreground">
            <summary>
                Delete child resources in the foreground; parent's deletion will not complete until child resources have been deleted.
            </summary>
        </member>
        <member name="F:KubeClient.Models.DeletePropagationPolicy.Background">
            <summary>
                Delete child resources in the foreground; child resources will be deleted asynchronously.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ExecCredentialV1Beta1">
            <summary>
                The model for the response returned by client-go credential plugins.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ExecCredentialV1Beta1.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.ExecCredentialV1Beta1"/>.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExecCredentialV1Beta1.Status">
            <summary>
                The credential plugin's status.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ExecCredentialV1Beta1.ShouldSerializeStatus">
            <summary>
                Determine whether the credential status should be serialised.
            </summary>
            <returns>
                <c>true</c>, if the credential status should be serialised; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ExecCredentialV1Beta1.GetToken">
            <summary>
                Get the value of the "status/token" field (if present).
            </summary>
            <returns>
                The token, or <c>null</c> if the field is not present.
            </returns>
        </member>
        <member name="T:KubeClient.Models.AffinityV1">
            <summary>
                Affinity is a group of affinity scheduling rules.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AffinityV1.NodeAffinity">
            <summary>
                Describes node affinity scheduling rules for the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AffinityV1.PodAffinity">
            <summary>
                Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
            </summary>
        </member>
        <member name="P:KubeClient.Models.AffinityV1.PodAntiAffinity">
            <summary>
                Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
            </summary>
        </member>
        <member name="T:KubeClient.Models.AggregationRuleV1">
            <summary>
                AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
            </summary>
        </member>
        <member name="P:KubeClient.Models.AggregationRuleV1.ClusterRoleSelectors">
            <summary>
                ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
            </summary>
        </member>
        <member name="M:KubeClient.Models.AggregationRuleV1.ShouldSerializeClusterRoleSelectors">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.AggregationRuleV1.ClusterRoleSelectors"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AggregationRuleV1Alpha1">
            <summary>
                AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
            </summary>
        </member>
        <member name="P:KubeClient.Models.AggregationRuleV1Alpha1.ClusterRoleSelectors">
            <summary>
                ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
            </summary>
        </member>
        <member name="M:KubeClient.Models.AggregationRuleV1Alpha1.ShouldSerializeClusterRoleSelectors">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.AggregationRuleV1Alpha1.ClusterRoleSelectors"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AggregationRuleV1Beta1">
            <summary>
                AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
            </summary>
        </member>
        <member name="P:KubeClient.Models.AggregationRuleV1Beta1.ClusterRoleSelectors">
            <summary>
                ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
            </summary>
        </member>
        <member name="M:KubeClient.Models.AggregationRuleV1Beta1.ShouldSerializeClusterRoleSelectors">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.AggregationRuleV1Beta1.ClusterRoleSelectors"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AllowedFlexVolumeV1Beta1">
            <summary>
                AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AllowedFlexVolumeV1Beta1.Driver">
            <summary>
                driver is the name of the Flexvolume driver.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AllowedHostPathV1Beta1">
            <summary>
                AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AllowedHostPathV1Beta1.PathPrefix">
            <summary>
                pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
                
                Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
            </summary>
        </member>
        <member name="P:KubeClient.Models.AllowedHostPathV1Beta1.ReadOnly">
            <summary>
                when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIGroupListV1">
            <summary>
                APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIGroupListV1.Groups">
            <summary>
                groups is a list of APIGroup.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIGroupV1">
            <summary>
                APIGroup contains the name, the supported versions, and the preferred version of a group.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIGroupV1.Name">
            <summary>
                name is the name of the group.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIGroupV1.PreferredVersion">
            <summary>
                preferredVersion is the version preferred by the API server, which probably is the storage version.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIGroupV1.ServerAddressByClientCIDRs">
            <summary>
                a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
            </summary>
        </member>
        <member name="M:KubeClient.Models.APIGroupV1.ShouldSerializeServerAddressByClientCIDRs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.APIGroupV1.ServerAddressByClientCIDRs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIGroupV1.Versions">
            <summary>
                versions are the versions supported in this group.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIResourceListV1">
            <summary>
                APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceListV1.GroupVersion">
            <summary>
                groupVersion is the group and version this APIResourceList is for.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceListV1.Resources">
            <summary>
                resources contains the name of the resources and if they are namespaced.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIResourceV1">
            <summary>
                APIResource specifies the name of a resource and whether it is namespaced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Kind">
            <summary>
                kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Namespaced">
            <summary>
                namespaced indicates if a resource is namespaced or not.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Name">
            <summary>
                name is the plural name of the resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.SingularName">
            <summary>
                singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Version">
            <summary>
                version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)".
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Group">
            <summary>
                group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale".
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Categories">
            <summary>
                categories is a list of the grouped resources this resource belongs to (e.g. 'all')
            </summary>
        </member>
        <member name="M:KubeClient.Models.APIResourceV1.ShouldSerializeCategories">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.APIResourceV1.Categories"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.ShortNames">
            <summary>
                shortNames is a list of suggested short names of the resource.
            </summary>
        </member>
        <member name="M:KubeClient.Models.APIResourceV1.ShouldSerializeShortNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.APIResourceV1.ShortNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIResourceV1.Verbs">
            <summary>
                verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceConditionV1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1.Message">
            <summary>
                Human-readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1.Type">
            <summary>
                Type is the type of the condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1.Reason">
            <summary>
                Unique, one-word, CamelCase reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1.Status">
            <summary>
                Status is the status of the condition. Can be True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceConditionV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1Beta1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1Beta1.Message">
            <summary>
                Human-readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1Beta1.Type">
            <summary>
                Type is the type of the condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1Beta1.Reason">
            <summary>
                Unique, one-word, CamelCase reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceConditionV1Beta1.Status">
            <summary>
                Status is the status of the condition. Can be True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceListV1">
            <summary>
                APIServiceList is a list of APIService objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceListV1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceListV1Beta1">
            <summary>
                APIServiceList is a list of APIService objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceListV1Beta1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceSpecV1">
            <summary>
                APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.CaBundle">
            <summary>
                CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.Service">
            <summary>
                Service is a reference to the service for this API server.  It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.GroupPriorityMinimum">
            <summary>
                GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.Version">
            <summary>
                Version is the API version this server hosts.  For example, "v1"
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.Group">
            <summary>
                Group is the API group name this server hosts
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.InsecureSkipTLSVerify">
            <summary>
                InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1.VersionPriority">
            <summary>
                VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA &gt; beta &gt; alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceSpecV1Beta1">
            <summary>
                APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.CaBundle">
            <summary>
                CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.Service">
            <summary>
                Service is a reference to the service for this API server.  It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.GroupPriorityMinimum">
            <summary>
                GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.Version">
            <summary>
                Version is the API version this server hosts.  For example, "v1"
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.Group">
            <summary>
                Group is the API group name this server hosts
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.InsecureSkipTLSVerify">
            <summary>
                InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceSpecV1Beta1.VersionPriority">
            <summary>
                VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA &gt; beta &gt; alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceStatusV1">
            <summary>
                APIServiceStatus contains derived information about an API server
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceStatusV1.Conditions">
            <summary>
                Current service state of apiService.
            </summary>
        </member>
        <member name="M:KubeClient.Models.APIServiceStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.APIServiceStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceStatusV1Beta1">
            <summary>
                APIServiceStatus contains derived information about an API server
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceStatusV1Beta1.Conditions">
            <summary>
                Current service state of apiService.
            </summary>
        </member>
        <member name="M:KubeClient.Models.APIServiceStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.APIServiceStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceV1">
            <summary>
                APIService represents a server for a particular GroupVersion. Name must be "version.group".
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceV1.Spec">
            <summary>
                Spec contains information for locating and communicating with a server
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceV1.Status">
            <summary>
                Status contains derived information about an API server
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIServiceV1Beta1">
            <summary>
                APIService represents a server for a particular GroupVersion. Name must be "version.group".
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceV1Beta1.Spec">
            <summary>
                Spec contains information for locating and communicating with a server
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIServiceV1Beta1.Status">
            <summary>
                Status contains derived information about an API server
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIVersionsV1">
            <summary>
                APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIVersionsV1.ServerAddressByClientCIDRs">
            <summary>
                a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIVersionsV1.Versions">
            <summary>
                versions are the api versions that are available.
            </summary>
        </member>
        <member name="T:KubeClient.Models.APIVersionV1Beta1">
            <summary>
                An APIVersion represents a single concrete version of an object model.
            </summary>
        </member>
        <member name="P:KubeClient.Models.APIVersionV1Beta1.Name">
            <summary>
                Name of this version (e.g. 'v1').
            </summary>
        </member>
        <member name="T:KubeClient.Models.AttachedVolumeV1">
            <summary>
                AttachedVolume describes a volume attached to a node
            </summary>
        </member>
        <member name="P:KubeClient.Models.AttachedVolumeV1.Name">
            <summary>
                Name of the attached volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.AttachedVolumeV1.DevicePath">
            <summary>
                DevicePath represents the device path where the volume should be available
            </summary>
        </member>
        <member name="T:KubeClient.Models.AWSElasticBlockStoreVolumeSourceV1">
            <summary>
                Represents a Persistent Disk resource in AWS.
                
                An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AWSElasticBlockStoreVolumeSourceV1.VolumeID">
            <summary>
                Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            </summary>
        </member>
        <member name="P:KubeClient.Models.AWSElasticBlockStoreVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            </summary>
        </member>
        <member name="P:KubeClient.Models.AWSElasticBlockStoreVolumeSourceV1.Partition">
            <summary>
                The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
            </summary>
        </member>
        <member name="P:KubeClient.Models.AWSElasticBlockStoreVolumeSourceV1.ReadOnly">
            <summary>
                Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            </summary>
        </member>
        <member name="T:KubeClient.Models.AzureDiskVolumeSourceV1">
            <summary>
                AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.DiskURI">
            <summary>
                The URI the data disk in the blob storage
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.Kind">
            <summary>
                Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.CachingMode">
            <summary>
                Host Caching mode: None, Read Only, Read Write.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.DiskName">
            <summary>
                The Name of the data disk in the blob storage
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureDiskVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AzureFilePersistentVolumeSourceV1">
            <summary>
                AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFilePersistentVolumeSourceV1.SecretName">
            <summary>
                the name of secret that contains Azure Storage Account Name and Key
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFilePersistentVolumeSourceV1.SecretNamespace">
            <summary>
                the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFilePersistentVolumeSourceV1.ShareName">
            <summary>
                Share Name
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFilePersistentVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.AzureFileVolumeSourceV1">
            <summary>
                AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFileVolumeSourceV1.SecretName">
            <summary>
                the name of secret that contains Azure Storage Account Name and Key
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFileVolumeSourceV1.ShareName">
            <summary>
                Share Name
            </summary>
        </member>
        <member name="P:KubeClient.Models.AzureFileVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.BindingV1">
            <summary>
                Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.BindingV1.Target">
            <summary>
                The target object that you want to bind to the standard object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CapabilitiesV1">
            <summary>
                Adds and removes POSIX capabilities from running containers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CapabilitiesV1.Add">
            <summary>
                Added capabilities
            </summary>
        </member>
        <member name="M:KubeClient.Models.CapabilitiesV1.ShouldSerializeAdd">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CapabilitiesV1.Add"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CapabilitiesV1.Drop">
            <summary>
                Removed capabilities
            </summary>
        </member>
        <member name="M:KubeClient.Models.CapabilitiesV1.ShouldSerializeDrop">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CapabilitiesV1.Drop"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CephFSPersistentVolumeSourceV1">
            <summary>
                Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.SecretFile">
            <summary>
                Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.SecretRef">
            <summary>
                Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.Path">
            <summary>
                Optional: Used as the mounted root, rather than the full Ceph tree, default is /
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.User">
            <summary>
                Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.Monitors">
            <summary>
                Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="T:KubeClient.Models.CephFSVolumeSourceV1">
            <summary>
                Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.SecretFile">
            <summary>
                Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.SecretRef">
            <summary>
                Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.Path">
            <summary>
                Optional: Used as the mounted root, rather than the full Ceph tree, default is /
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.User">
            <summary>
                Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.Monitors">
            <summary>
                Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.CephFSVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
            </summary>
        </member>
        <member name="T:KubeClient.Models.CertificateSigningRequestConditionV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestConditionV1Beta1.LastUpdateTime">
            <summary>
                timestamp for the last update to this condition
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestConditionV1Beta1.Message">
            <summary>
                human readable message with details about the request state
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestConditionV1Beta1.Type">
            <summary>
                request approval state, currently Approved or Denied.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestConditionV1Beta1.Reason">
            <summary>
                brief reason for the request state
            </summary>
        </member>
        <member name="T:KubeClient.Models.CertificateSigningRequestListV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestListV1Beta1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CertificateSigningRequestSpecV1Beta1">
            <summary>
                This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Extra">
            <summary>
                Extra information about the requesting user. See user.Info interface for details.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.ShouldSerializeExtra">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Extra"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Uid">
            <summary>
                UID information about the requesting user. See user.Info interface for details.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Username">
            <summary>
                Information about the requesting user. See user.Info interface for details.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Groups">
            <summary>
                Group information about the requesting user. See user.Info interface for details.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.ShouldSerializeGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Groups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Usages">
            <summary>
                allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
                     https://tools.ietf.org/html/rfc5280#section-4.2.1.12
            </summary>
        </member>
        <member name="M:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.ShouldSerializeUsages">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Usages"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestSpecV1Beta1.Request">
            <summary>
                Base64-encoded PKCS#10 CSR data
            </summary>
        </member>
        <member name="T:KubeClient.Models.CertificateSigningRequestStatusV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestStatusV1Beta1.Certificate">
            <summary>
                If request was approved, the controller will place the issued certificate here.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestStatusV1Beta1.Conditions">
            <summary>
                Conditions applied to the request, such as approval or denial.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CertificateSigningRequestStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CertificateSigningRequestStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CertificateSigningRequestV1Beta1">
            <summary>
                Describes a certificate signing request
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestV1Beta1.Spec">
            <summary>
                The certificate request itself and any additional information.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CertificateSigningRequestV1Beta1.Status">
            <summary>
                Derived information about the request.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CinderPersistentVolumeSourceV1">
            <summary>
                Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderPersistentVolumeSourceV1.VolumeID">
            <summary>
                volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderPersistentVolumeSourceV1.SecretRef">
            <summary>
                Optional: points to a secret object containing parameters used to connect to OpenStack.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="T:KubeClient.Models.CinderVolumeSourceV1">
            <summary>
                Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderVolumeSourceV1.VolumeID">
            <summary>
                volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderVolumeSourceV1.SecretRef">
            <summary>
                Optional: points to a secret object containing parameters used to connect to OpenStack.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CinderVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClientIPConfigV1">
            <summary>
                ClientIPConfig represents the configurations of Client IP based session affinity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClientIPConfigV1.TimeoutSeconds">
            <summary>
                timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be &gt;0 &amp;&amp; &lt;=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingListV1">
            <summary>
                ClusterRoleBindingList is a collection of ClusterRoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingListV1.Items">
            <summary>
                Items is a list of ClusterRoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingListV1Alpha1">
            <summary>
                ClusterRoleBindingList is a collection of ClusterRoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingListV1Alpha1.Items">
            <summary>
                Items is a list of ClusterRoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingListV1Beta1">
            <summary>
                ClusterRoleBindingList is a collection of ClusterRoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingListV1Beta1.Items">
            <summary>
                Items is a list of ClusterRoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingV1">
            <summary>
                ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1.RoleRef">
            <summary>
                RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ClusterRoleBindingV1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ClusterRoleBindingV1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingV1Alpha1">
            <summary>
                ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1Alpha1.RoleRef">
            <summary>
                RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1Alpha1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ClusterRoleBindingV1Alpha1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ClusterRoleBindingV1Alpha1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleBindingV1Beta1">
            <summary>
                ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1Beta1.RoleRef">
            <summary>
                RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleBindingV1Beta1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ClusterRoleBindingV1Beta1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ClusterRoleBindingV1Beta1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleListV1">
            <summary>
                ClusterRoleList is a collection of ClusterRoles
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleListV1.Items">
            <summary>
                Items is a list of ClusterRoles
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleListV1Alpha1">
            <summary>
                ClusterRoleList is a collection of ClusterRoles
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleListV1Alpha1.Items">
            <summary>
                Items is a list of ClusterRoles
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleListV1Beta1">
            <summary>
                ClusterRoleList is a collection of ClusterRoles
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleListV1Beta1.Items">
            <summary>
                Items is a list of ClusterRoles
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleV1">
            <summary>
                ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1.AggregationRule">
            <summary>
                AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1.Rules">
            <summary>
                Rules holds all the PolicyRules for this ClusterRole
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleV1Alpha1">
            <summary>
                ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1Alpha1.AggregationRule">
            <summary>
                AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1Alpha1.Rules">
            <summary>
                Rules holds all the PolicyRules for this ClusterRole
            </summary>
        </member>
        <member name="T:KubeClient.Models.ClusterRoleV1Beta1">
            <summary>
                ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1Beta1.AggregationRule">
            <summary>
                AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ClusterRoleV1Beta1.Rules">
            <summary>
                Rules holds all the PolicyRules for this ClusterRole
            </summary>
        </member>
        <member name="T:KubeClient.Models.ComponentConditionV1">
            <summary>
                Information about the condition of a component.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentConditionV1.Message">
            <summary>
                Message about the condition for a component. For example, information about a health check.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentConditionV1.Type">
            <summary>
                Type of condition for a component. Valid value: "Healthy"
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentConditionV1.Error">
            <summary>
                Condition error code for a component. For example, a health check error code.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentConditionV1.Status">
            <summary>
                Status of the condition for a component. Valid values for "Healthy": "True", "False", or "Unknown".
            </summary>
        </member>
        <member name="T:KubeClient.Models.ComponentStatusListV1">
            <summary>
                Status of all the conditions for the component as a list of ComponentStatus objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentStatusListV1.Items">
            <summary>
                List of ComponentStatus objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ComponentStatusV1">
            <summary>
                ComponentStatus (and ComponentStatusList) holds the cluster validation info.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ComponentStatusV1.Conditions">
            <summary>
                List of component conditions observed
            </summary>
        </member>
        <member name="M:KubeClient.Models.ComponentStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ComponentStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapEnvSourceV1">
            <summary>
                ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                
                The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapEnvSourceV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapEnvSourceV1.Optional">
            <summary>
                Specify whether the ConfigMap must be defined
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapKeySelectorV1">
            <summary>
                Selects a key from a ConfigMap.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapKeySelectorV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapKeySelectorV1.Optional">
            <summary>
                Specify whether the ConfigMap or it's key must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapKeySelectorV1.Key">
            <summary>
                The key to select.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapListV1">
            <summary>
                ConfigMapList is a resource containing a list of ConfigMap objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapListV1.Items">
            <summary>
                Items is the list of ConfigMaps.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapNodeConfigSourceV1">
            <summary>
                ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapNodeConfigSourceV1.Uid">
            <summary>
                UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapNodeConfigSourceV1.Name">
            <summary>
                Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapNodeConfigSourceV1.Namespace">
            <summary>
                Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapNodeConfigSourceV1.ResourceVersion">
            <summary>
                ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapNodeConfigSourceV1.KubeletConfigKey">
            <summary>
                KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapProjectionV1">
            <summary>
                Adapts a ConfigMap into a projected volume.
                
                The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapProjectionV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapProjectionV1.Optional">
            <summary>
                Specify whether the ConfigMap or it's keys must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapProjectionV1.Items">
            <summary>
                If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ConfigMapProjectionV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ConfigMapProjectionV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapV1">
            <summary>
                ConfigMap holds configuration data for pods to consume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapV1.BinaryData">
            <summary>
                BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ConfigMapV1.ShouldSerializeBinaryData">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ConfigMapV1.BinaryData"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapV1.Data">
            <summary>
                Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ConfigMapV1.ShouldSerializeData">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ConfigMapV1.Data"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ConfigMapVolumeSourceV1">
            <summary>
                Adapts a ConfigMap into a volume.
                
                The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapVolumeSourceV1.DefaultMode">
            <summary>
                Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapVolumeSourceV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapVolumeSourceV1.Optional">
            <summary>
                Specify whether the ConfigMap or it's keys must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.ConfigMapVolumeSourceV1.Items">
            <summary>
                If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ConfigMapVolumeSourceV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ConfigMapVolumeSourceV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerImageV1">
            <summary>
                Describe a container image
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerImageV1.Names">
            <summary>
                Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"]
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerImageV1.SizeBytes">
            <summary>
                The size of the image in bytes.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerPortV1">
            <summary>
                ContainerPort represents a network port in a single container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerPortV1.HostIP">
            <summary>
                What host IP to bind the external port to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerPortV1.Name">
            <summary>
                If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerPortV1.Protocol">
            <summary>
                Protocol for port. Must be UDP or TCP. Defaults to "TCP".
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerPortV1.ContainerPort">
            <summary>
                Number of port to expose on the pod's IP address. This must be a valid port number, 0 &lt; x &lt; 65536.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerPortV1.HostPort">
            <summary>
                Number of port to expose on the host. If specified, this must be a valid port number, 0 &lt; x &lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerStateRunningV1">
            <summary>
                ContainerStateRunning is a running state of a container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateRunningV1.StartedAt">
            <summary>
                Time at which the container was last (re-)started
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerStateTerminatedV1">
            <summary>
                ContainerStateTerminated is a terminated state of a container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.ContainerID">
            <summary>
                Container's ID in the format 'docker://&lt;container_id&gt;'
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.ExitCode">
            <summary>
                Exit status from the last termination of the container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.Message">
            <summary>
                Message regarding the last termination of the container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.Signal">
            <summary>
                Signal from the last termination of the container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.Reason">
            <summary>
                (brief) reason from the last termination of the container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.FinishedAt">
            <summary>
                Time at which the container last terminated
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateTerminatedV1.StartedAt">
            <summary>
                Time at which previous execution of the container started
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerStateV1">
            <summary>
                ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateV1.Terminated">
            <summary>
                Details about a terminated container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateV1.Running">
            <summary>
                Details about a running container
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateV1.Waiting">
            <summary>
                Details about a waiting container
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerStateWaitingV1">
            <summary>
                ContainerStateWaiting is a waiting state of a container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateWaitingV1.Message">
            <summary>
                Message regarding why the container is not yet running.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStateWaitingV1.Reason">
            <summary>
                (brief) reason the container is not yet running.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerStatusV1">
            <summary>
                ContainerStatus contains details for the current status of this container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.ContainerID">
            <summary>
                Container's ID in the format 'docker://&lt;container_id&gt;'.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.ImageID">
            <summary>
                ImageID of the container's image.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.Image">
            <summary>
                The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.LastState">
            <summary>
                Details about the container's last termination condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.Name">
            <summary>
                This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.State">
            <summary>
                Details about the container's current condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.RestartCount">
            <summary>
                The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerStatusV1.Ready">
            <summary>
                Specifies whether the container has passed its readiness probe.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ContainerV1">
            <summary>
                A single application container that you want to run within a pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Command">
            <summary>
                Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeCommand">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.Command"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Image">
            <summary>
                Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Lifecycle">
            <summary>
                Actions that the management system should take in response to container lifecycle events. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.LivenessProbe">
            <summary>
                Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Name">
            <summary>
                Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.ReadinessProbe">
            <summary>
                Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.StdinOnce">
            <summary>
                Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.TerminationMessagePath">
            <summary>
                Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.EnvFrom">
            <summary>
                List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeEnvFrom">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.EnvFrom"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Stdin">
            <summary>
                Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.WorkingDir">
            <summary>
                Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Args">
            <summary>
                Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeArgs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.Args"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Ports">
            <summary>
                List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Resources">
            <summary>
                Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.VolumeDevices">
            <summary>
                volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeVolumeDevices">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.VolumeDevices"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.VolumeMounts">
            <summary>
                Pod volumes to mount into the container's filesystem. Cannot be updated.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeVolumeMounts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.VolumeMounts"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.SecurityContext">
            <summary>
                Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Env">
            <summary>
                List of environment variables to set in the container. Cannot be updated.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ContainerV1.ShouldSerializeEnv">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ContainerV1.Env"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.ImagePullPolicy">
            <summary>
                Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.TerminationMessagePolicy">
            <summary>
                Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ContainerV1.Tty">
            <summary>
                Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionListV1">
            <summary>
                ControllerRevisionList is a resource containing a list of ControllerRevision objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionListV1.Items">
            <summary>
                Items is the list of ControllerRevisions
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionListV1Beta1">
            <summary>
                ControllerRevisionList is a resource containing a list of ControllerRevision objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionListV1Beta1.Items">
            <summary>
                Items is the list of ControllerRevisions
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionListV1Beta2">
            <summary>
                ControllerRevisionList is a resource containing a list of ControllerRevision objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionListV1Beta2.Items">
            <summary>
                Items is the list of ControllerRevisions
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionV1">
            <summary>
                ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1.Data">
            <summary>
                Data is the serialized representation of the state.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1.Revision">
            <summary>
                Revision indicates the revision of the state represented by Data.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionV1Beta1">
            <summary>
                DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1Beta1.Data">
            <summary>
                Data is the serialized representation of the state.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1Beta1.Revision">
            <summary>
                Revision indicates the revision of the state represented by Data.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ControllerRevisionV1Beta2">
            <summary>
                DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1Beta2.Data">
            <summary>
                Data is the serialized representation of the state.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ControllerRevisionV1Beta2.Revision">
            <summary>
                Revision indicates the revision of the state represented by Data.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobListV1Beta1">
            <summary>
                CronJobList is a collection of cron jobs.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobListV1Beta1.Items">
            <summary>
                items is the list of CronJobs.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobListV2Alpha1">
            <summary>
                CronJobList is a collection of cron jobs.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobListV2Alpha1.Items">
            <summary>
                items is the list of CronJobs.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobSpecV1Beta1">
            <summary>
                CronJobSpec describes how the job execution will look like and when it will actually run.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.Suspend">
            <summary>
                This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.JobTemplate">
            <summary>
                Specifies the job that will be created when executing a CronJob.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.Schedule">
            <summary>
                The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.StartingDeadlineSeconds">
            <summary>
                Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.FailedJobsHistoryLimit">
            <summary>
                The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.SuccessfulJobsHistoryLimit">
            <summary>
                The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV1Beta1.ConcurrencyPolicy">
            <summary>
                Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobSpecV2Alpha1">
            <summary>
                CronJobSpec describes how the job execution will look like and when it will actually run.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.Suspend">
            <summary>
                This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.JobTemplate">
            <summary>
                Specifies the job that will be created when executing a CronJob.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.Schedule">
            <summary>
                The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.StartingDeadlineSeconds">
            <summary>
                Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.FailedJobsHistoryLimit">
            <summary>
                The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.SuccessfulJobsHistoryLimit">
            <summary>
                The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobSpecV2Alpha1.ConcurrencyPolicy">
            <summary>
                Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobStatusV1Beta1">
            <summary>
                CronJobStatus represents the current state of a cron job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobStatusV1Beta1.Active">
            <summary>
                A list of pointers to currently running jobs.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CronJobStatusV1Beta1.ShouldSerializeActive">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CronJobStatusV1Beta1.Active"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobStatusV1Beta1.LastScheduleTime">
            <summary>
                Information when was the last time the job was successfully scheduled.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobStatusV2Alpha1">
            <summary>
                CronJobStatus represents the current state of a cron job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobStatusV2Alpha1.Active">
            <summary>
                A list of pointers to currently running jobs.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CronJobStatusV2Alpha1.ShouldSerializeActive">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CronJobStatusV2Alpha1.Active"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobStatusV2Alpha1.LastScheduleTime">
            <summary>
                Information when was the last time the job was successfully scheduled.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobV1Beta1">
            <summary>
                CronJob represents the configuration of a single cron job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobV1Beta1.Spec">
            <summary>
                Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobV1Beta1.Status">
            <summary>
                Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.CronJobV2Alpha1">
            <summary>
                CronJob represents the configuration of a single cron job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobV2Alpha1.Spec">
            <summary>
                Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.CronJobV2Alpha1.Status">
            <summary>
                Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.CrossVersionObjectReferenceV1">
            <summary>
                CrossVersionObjectReference contains enough information to let you identify the referred resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CrossVersionObjectReferenceV1.Name">
            <summary>
                Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
            </summary>
        </member>
        <member name="T:KubeClient.Models.CrossVersionObjectReferenceV2Beta1">
            <summary>
                CrossVersionObjectReference contains enough information to let you identify the referred resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CrossVersionObjectReferenceV2Beta1.Name">
            <summary>
                Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
            </summary>
        </member>
        <member name="T:KubeClient.Models.CSIPersistentVolumeSourceV1">
            <summary>
                Represents storage that is managed by an external CSI volume driver (Beta feature)
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.VolumeHandle">
            <summary>
                VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.ControllerPublishSecretRef">
            <summary>
                ControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.NodePublishSecretRef">
            <summary>
                NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.NodeStageSecretRef">
            <summary>
                NodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.Driver">
            <summary>
                Driver is the name of the driver to use for this volume. Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.VolumeAttributes">
            <summary>
                Attributes of the volume to publish.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CSIPersistentVolumeSourceV1.ShouldSerializeVolumeAttributes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CSIPersistentVolumeSourceV1.VolumeAttributes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CSIPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1">
            <summary>
                CustomResourceColumnDefinition specifies a column for server side printing.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.Name">
            <summary>
                name is a human readable name for the column.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.Type">
            <summary>
                type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.JSONPath">
            <summary>
                JSONPath is a simple JSON path, i.e. with array notation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.Description">
            <summary>
                description is a human readable description of this column.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.Format">
            <summary>
                format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceColumnDefinitionV1Beta1.Priority">
            <summary>
                priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1">
            <summary>
                CustomResourceDefinitionCondition contains details for the current condition of this pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1.Message">
            <summary>
                Human-readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1.Type">
            <summary>
                Type is the type of the condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1.Reason">
            <summary>
                Unique, one-word, CamelCase reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionConditionV1Beta1.Status">
            <summary>
                Status is the status of the condition. Can be True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionListV1Beta1">
            <summary>
                CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionListV1Beta1.Items">
            <summary>
                Items individual CustomResourceDefinitions
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1">
            <summary>
                CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.Kind">
            <summary>
                Kind is the serialized kind of the resource.  It is normally CamelCase and singular.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.ListKind">
            <summary>
                ListKind is the serialized kind of the list for this resource.  Defaults to &lt;kind&gt;List.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.Plural">
            <summary>
                Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.Singular">
            <summary>
                Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased &lt;kind&gt;
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.Categories">
            <summary>
                Categories is a list of grouped resources custom resources belong to (e.g. 'all')
            </summary>
        </member>
        <member name="M:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.ShouldSerializeCategories">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.Categories"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.ShortNames">
            <summary>
                ShortNames are short names for the resource.  It must be all lowercase.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.ShouldSerializeShortNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CustomResourceDefinitionNamesV1Beta1.ShortNames"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1">
            <summary>
                CustomResourceDefinitionSpec describes how a user wants their resource to appear
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Scope">
            <summary>
                Scope indicates whether this resource is cluster or namespace scoped.  Default is namespaced
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Validation">
            <summary>
                Validation describes the validation methods for CustomResources
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Version">
            <summary>
                Version is the version this resource belongs in Should be always first item in Versions field if provided. Optional, but at least one of Version or Versions must be set. Deprecated: Please use `Versions`.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Group">
            <summary>
                Group is the group this resource belongs in
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.AdditionalPrinterColumns">
            <summary>
                AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.ShouldSerializeAdditionalPrinterColumns">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.AdditionalPrinterColumns"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Names">
            <summary>
                Names are the names used to describe this custom resource
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Subresources">
            <summary>
                Subresources describes the subresources for CustomResources
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Versions">
            <summary>
                Versions is the list of all supported versions for this resource. If Version field is provided, this field is optional. Validation: All versions must use the same validation schema for now. i.e., top level Validation field is applied to all of these versions. Order: The version name will be used to compute the order. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA &gt; beta &gt; alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
            </summary>
        </member>
        <member name="M:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.ShouldSerializeVersions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.CustomResourceDefinitionSpecV1Beta1.Versions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionStatusV1Beta1">
            <summary>
                CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionStatusV1Beta1.AcceptedNames">
            <summary>
                AcceptedNames are the names that are actually being used to serve discovery They may be different than the names in spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionStatusV1Beta1.Conditions">
            <summary>
                Conditions indicate state for particular aspects of a CustomResourceDefinition
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionStatusV1Beta1.StoredVersions">
            <summary>
                StoredVersions are all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so the migration controller can first finish a migration to another version (i.e. that no old objects are left in the storage), and then remove the rest of the versions from this list. None of the versions in this list can be removed from the spec.Versions field.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionV1Beta1">
            <summary>
                CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format &lt;.spec.name&gt;.&lt;.spec.group&gt;.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionV1Beta1.Spec">
            <summary>
                Spec describes how the user wants the resources to appear
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionV1Beta1.Status">
            <summary>
                Status indicates the actual state of the CustomResourceDefinition
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceDefinitionVersionV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionVersionV1Beta1.Served">
            <summary>
                Served is a flag enabling/disabling this version from being served via REST APIs
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionVersionV1Beta1.Name">
            <summary>
                Name is the version name, e.g. “v1”, “v2beta1”, etc.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceDefinitionVersionV1Beta1.Storage">
            <summary>
                Storage flags the version as storage version. There must be exactly one flagged as storage version.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceSubresourceScaleV1Beta1">
            <summary>
                CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceSubresourceScaleV1Beta1.LabelSelectorPath">
            <summary>
                LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceSubresourceScaleV1Beta1.SpecReplicasPath">
            <summary>
                SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceSubresourceScaleV1Beta1.StatusReplicasPath">
            <summary>
                StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceSubresourceStatusV1Beta1">
            <summary>
                CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceSubresourcesV1Beta1">
            <summary>
                CustomResourceSubresources defines the status and scale subresources for CustomResources.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceSubresourcesV1Beta1.Scale">
            <summary>
                Scale denotes the scale subresource for CustomResources
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceSubresourcesV1Beta1.Status">
            <summary>
                Status denotes the status subresource for CustomResources
            </summary>
        </member>
        <member name="T:KubeClient.Models.CustomResourceValidationV1Beta1">
            <summary>
                CustomResourceValidation is a list of validation methods for CustomResources.
            </summary>
        </member>
        <member name="P:KubeClient.Models.CustomResourceValidationV1Beta1.OpenAPIV3Schema">
            <summary>
                OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonEndpointV1">
            <summary>
                DaemonEndpoint contains information about a single Daemon endpoint.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonEndpointV1.Port">
            <summary>
                Port number of the given endpoint.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetConditionV1">
            <summary>
                DaemonSetCondition describes the state of a DaemonSet at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1.Type">
            <summary>
                Type of DaemonSet condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetConditionV1Beta1">
            <summary>
                DaemonSetCondition describes the state of a DaemonSet at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta1.Type">
            <summary>
                Type of DaemonSet condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetConditionV1Beta2">
            <summary>
                DaemonSetCondition describes the state of a DaemonSet at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta2.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta2.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta2.Type">
            <summary>
                Type of DaemonSet condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta2.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetConditionV1Beta2.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetListV1">
            <summary>
                DaemonSetList is a collection of daemon sets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetListV1.Items">
            <summary>
                A list of daemon sets.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetListV1Beta1">
            <summary>
                DaemonSetList is a collection of daemon sets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetListV1Beta1.Items">
            <summary>
                A list of daemon sets.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetListV1Beta2">
            <summary>
                DaemonSetList is a collection of daemon sets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetListV1Beta2.Items">
            <summary>
                A list of daemon sets.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetSpecV1">
            <summary>
                DaemonSetSpec is the specification of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1.Template">
            <summary>
                An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1.Selector">
            <summary>
                A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1.MinReadySeconds">
            <summary>
                The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1.RevisionHistoryLimit">
            <summary>
                The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1.UpdateStrategy">
            <summary>
                An update strategy to replace existing DaemonSet pods with new pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetSpecV1Beta1">
            <summary>
                DaemonSetSpec is the specification of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.Template">
            <summary>
                An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.TemplateGeneration">
            <summary>
                DEPRECATED. A sequence number representing a specific generation of the template. Populated by the system. It can be set only during the creation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.Selector">
            <summary>
                A label query over pods that are managed by the daemon set. Must match in order to be controlled. If empty, defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.MinReadySeconds">
            <summary>
                The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.RevisionHistoryLimit">
            <summary>
                The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta1.UpdateStrategy">
            <summary>
                An update strategy to replace existing DaemonSet pods with new pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetSpecV1Beta2">
            <summary>
                DaemonSetSpec is the specification of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta2.Template">
            <summary>
                An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta2.Selector">
            <summary>
                A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta2.MinReadySeconds">
            <summary>
                The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta2.RevisionHistoryLimit">
            <summary>
                The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetSpecV1Beta2.UpdateStrategy">
            <summary>
                An update strategy to replace existing DaemonSet pods with new pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetStatusV1">
            <summary>
                DaemonSetStatus represents the current status of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.CurrentNumberScheduled">
            <summary>
                The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.DesiredNumberScheduled">
            <summary>
                The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.NumberMisscheduled">
            <summary>
                The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.UpdatedNumberScheduled">
            <summary>
                The total number of nodes that are running updated daemon pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.NumberAvailable">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.NumberUnavailable">
            <summary>
                The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.ObservedGeneration">
            <summary>
                The most recent generation observed by the daemon set controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.Conditions">
            <summary>
                Represents the latest available observations of a DaemonSet's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DaemonSetStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DaemonSetStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.CollisionCount">
            <summary>
                Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1.NumberReady">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetStatusV1Beta1">
            <summary>
                DaemonSetStatus represents the current status of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.CurrentNumberScheduled">
            <summary>
                The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.DesiredNumberScheduled">
            <summary>
                The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.NumberMisscheduled">
            <summary>
                The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.UpdatedNumberScheduled">
            <summary>
                The total number of nodes that are running updated daemon pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.NumberAvailable">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.NumberUnavailable">
            <summary>
                The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.ObservedGeneration">
            <summary>
                The most recent generation observed by the daemon set controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.Conditions">
            <summary>
                Represents the latest available observations of a DaemonSet's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DaemonSetStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DaemonSetStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.CollisionCount">
            <summary>
                Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta1.NumberReady">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetStatusV1Beta2">
            <summary>
                DaemonSetStatus represents the current status of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.CurrentNumberScheduled">
            <summary>
                The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.DesiredNumberScheduled">
            <summary>
                The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.NumberMisscheduled">
            <summary>
                The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.UpdatedNumberScheduled">
            <summary>
                The total number of nodes that are running updated daemon pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.NumberAvailable">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.NumberUnavailable">
            <summary>
                The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.ObservedGeneration">
            <summary>
                The most recent generation observed by the daemon set controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.Conditions">
            <summary>
                Represents the latest available observations of a DaemonSet's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DaemonSetStatusV1Beta2.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DaemonSetStatusV1Beta2.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.CollisionCount">
            <summary>
                Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetStatusV1Beta2.NumberReady">
            <summary>
                The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetUpdateStrategyV1">
            <summary>
                DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1.RollingUpdate">
            <summary>
                Rolling update config params. Present only if type = "RollingUpdate".
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1.Type">
            <summary>
                Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetUpdateStrategyV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1Beta1.RollingUpdate">
            <summary>
                Rolling update config params. Present only if type = "RollingUpdate".
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1Beta1.Type">
            <summary>
                Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is OnDelete.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetUpdateStrategyV1Beta2">
            <summary>
                DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1Beta2.RollingUpdate">
            <summary>
                Rolling update config params. Present only if type = "RollingUpdate".
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetUpdateStrategyV1Beta2.Type">
            <summary>
                Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetV1">
            <summary>
                DaemonSet represents the configuration of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1.Spec">
            <summary>
                The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1.Status">
            <summary>
                The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetV1Beta1">
            <summary>
                DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1Beta1.Spec">
            <summary>
                The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1Beta1.Status">
            <summary>
                The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.DaemonSetV1Beta2">
            <summary>
                DEPRECATED - This group version of DaemonSet is deprecated by apps/v1/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1Beta2.Spec">
            <summary>
                The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.DaemonSetV1Beta2.Status">
            <summary>
                The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentConditionV1">
            <summary>
                DeploymentCondition describes the state of a deployment at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.LastUpdateTime">
            <summary>
                The last time this condition was updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.Type">
            <summary>
                Type of deployment condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentConditionV1Beta1">
            <summary>
                DeploymentCondition describes the state of a deployment at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.LastUpdateTime">
            <summary>
                The last time this condition was updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.Type">
            <summary>
                Type of deployment condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentConditionV1Beta2">
            <summary>
                DeploymentCondition describes the state of a deployment at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.LastUpdateTime">
            <summary>
                The last time this condition was updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.Type">
            <summary>
                Type of deployment condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentConditionV1Beta2.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentListV1">
            <summary>
                DeploymentList is a list of Deployments.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentListV1.Items">
            <summary>
                Items is the list of Deployments.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentListV1Beta1">
            <summary>
                DeploymentList is a list of Deployments.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentListV1Beta1.Items">
            <summary>
                Items is the list of Deployments.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentListV1Beta2">
            <summary>
                DeploymentList is a list of Deployments.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentListV1Beta2.Items">
            <summary>
                Items is the list of Deployments.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentRollbackV1Beta1">
            <summary>
                DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentRollbackV1Beta1.Name">
            <summary>
                Required: This must match the Name of a deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentRollbackV1Beta1.RollbackTo">
            <summary>
                The config of this deployment rollback.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentRollbackV1Beta1.UpdatedAnnotations">
            <summary>
                The annotations to be updated to a deployment
            </summary>
        </member>
        <member name="M:KubeClient.Models.DeploymentRollbackV1Beta1.ShouldSerializeUpdatedAnnotations">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DeploymentRollbackV1Beta1.UpdatedAnnotations"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentSpecV1">
            <summary>
                DeploymentSpec is the specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.Paused">
            <summary>
                Indicates that the deployment is paused.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.Template">
            <summary>
                Template describes the pods that will be created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.Selector">
            <summary>
                Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.ProgressDeadlineSeconds">
            <summary>
                The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.Replicas">
            <summary>
                Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.RevisionHistoryLimit">
            <summary>
                The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1.Strategy">
            <summary>
                The deployment strategy to use to replace existing pods with new ones.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentSpecV1Beta1">
            <summary>
                DeploymentSpec is the specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.Paused">
            <summary>
                Indicates that the deployment is paused and will not be processed by the deployment controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.Template">
            <summary>
                Template describes the pods that will be created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.RollbackTo">
            <summary>
                DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.Selector">
            <summary>
                Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.ProgressDeadlineSeconds">
            <summary>
                The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.Replicas">
            <summary>
                Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.RevisionHistoryLimit">
            <summary>
                The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta1.Strategy">
            <summary>
                The deployment strategy to use to replace existing pods with new ones.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentSpecV1Beta2">
            <summary>
                DeploymentSpec is the specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.Paused">
            <summary>
                Indicates that the deployment is paused.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.Template">
            <summary>
                Template describes the pods that will be created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.Selector">
            <summary>
                Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.ProgressDeadlineSeconds">
            <summary>
                The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.Replicas">
            <summary>
                Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.RevisionHistoryLimit">
            <summary>
                The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentSpecV1Beta2.Strategy">
            <summary>
                The deployment strategy to use to replace existing pods with new ones.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStatusV1">
            <summary>
                DeploymentStatus is the most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.ObservedGeneration">
            <summary>
                The generation observed by the deployment controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.AvailableReplicas">
            <summary>
                Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.Conditions">
            <summary>
                Represents the latest available observations of a deployment's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DeploymentStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DeploymentStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.ReadyReplicas">
            <summary>
                Total number of ready pods targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.Replicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment (their labels match the selector).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.UnavailableReplicas">
            <summary>
                Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.UpdatedReplicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment that have the desired template spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1.CollisionCount">
            <summary>
                Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStatusV1Beta1">
            <summary>
                DeploymentStatus is the most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.ObservedGeneration">
            <summary>
                The generation observed by the deployment controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.AvailableReplicas">
            <summary>
                Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.Conditions">
            <summary>
                Represents the latest available observations of a deployment's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DeploymentStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DeploymentStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.ReadyReplicas">
            <summary>
                Total number of ready pods targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.Replicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment (their labels match the selector).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.UnavailableReplicas">
            <summary>
                Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.UpdatedReplicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment that have the desired template spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta1.CollisionCount">
            <summary>
                Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStatusV1Beta2">
            <summary>
                DeploymentStatus is the most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.ObservedGeneration">
            <summary>
                The generation observed by the deployment controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.AvailableReplicas">
            <summary>
                Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.Conditions">
            <summary>
                Represents the latest available observations of a deployment's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.DeploymentStatusV1Beta2.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DeploymentStatusV1Beta2.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.ReadyReplicas">
            <summary>
                Total number of ready pods targeted by this deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.Replicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment (their labels match the selector).
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.UnavailableReplicas">
            <summary>
                Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.UpdatedReplicas">
            <summary>
                Total number of non-terminated pods targeted by this deployment that have the desired template spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStatusV1Beta2.CollisionCount">
            <summary>
                Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStrategyV1">
            <summary>
                DeploymentStrategy describes how to replace existing pods with new ones.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1.RollingUpdate">
            <summary>
                Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1.Type">
            <summary>
                Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStrategyV1Beta1">
            <summary>
                DeploymentStrategy describes how to replace existing pods with new ones.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1Beta1.RollingUpdate">
            <summary>
                Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1Beta1.Type">
            <summary>
                Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentStrategyV1Beta2">
            <summary>
                DeploymentStrategy describes how to replace existing pods with new ones.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1Beta2.RollingUpdate">
            <summary>
                Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentStrategyV1Beta2.Type">
            <summary>
                Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentV1">
            <summary>
                Deployment enables declarative updates for Pods and ReplicaSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1.Spec">
            <summary>
                Specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1.Status">
            <summary>
                Most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentV1Beta1">
            <summary>
                DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1Beta1.Spec">
            <summary>
                Specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1Beta1.Status">
            <summary>
                Most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DeploymentV1Beta2">
            <summary>
                DEPRECATED - This group version of Deployment is deprecated by apps/v1/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1Beta2.Spec">
            <summary>
                Specification of the desired behavior of the Deployment.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DeploymentV1Beta2.Status">
            <summary>
                Most recently observed status of the Deployment.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DownwardAPIProjectionV1">
            <summary>
                Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIProjectionV1.Items">
            <summary>
                Items is a list of DownwardAPIVolume file
            </summary>
        </member>
        <member name="M:KubeClient.Models.DownwardAPIProjectionV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DownwardAPIProjectionV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.DownwardAPIVolumeFileV1">
            <summary>
                DownwardAPIVolumeFile represents information to create the file containing the pod field
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeFileV1.Mode">
            <summary>
                Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeFileV1.FieldRef">
            <summary>
                Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeFileV1.ResourceFieldRef">
            <summary>
                Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeFileV1.Path">
            <summary>
                Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
            </summary>
        </member>
        <member name="T:KubeClient.Models.DownwardAPIVolumeSourceV1">
            <summary>
                DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeSourceV1.DefaultMode">
            <summary>
                Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.DownwardAPIVolumeSourceV1.Items">
            <summary>
                Items is a list of downward API volume file
            </summary>
        </member>
        <member name="M:KubeClient.Models.DownwardAPIVolumeSourceV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.DownwardAPIVolumeSourceV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EmptyDirVolumeSourceV1">
            <summary>
                Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EmptyDirVolumeSourceV1.Medium">
            <summary>
                What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
            </summary>
        </member>
        <member name="P:KubeClient.Models.EmptyDirVolumeSourceV1.SizeLimit">
            <summary>
                Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
            </summary>
        </member>
        <member name="T:KubeClient.Models.EndpointAddressV1">
            <summary>
                EndpointAddress is a tuple that describes single IP address.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointAddressV1.Hostname">
            <summary>
                The Hostname of this endpoint
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointAddressV1.NodeName">
            <summary>
                Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointAddressV1.TargetRef">
            <summary>
                Reference to object providing the endpoint.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointAddressV1.Ip">
            <summary>
                The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EndpointPortV1">
            <summary>
                EndpointPort is a tuple that describes a single port.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointPortV1.Name">
            <summary>
                The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointPortV1.Protocol">
            <summary>
                The IP protocol for this port. Must be UDP or TCP. Default is TCP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointPortV1.Port">
            <summary>
                The port number of the endpoint.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EndpointsListV1">
            <summary>
                EndpointsList is a list of endpoints.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointsListV1.Items">
            <summary>
                List of endpoints.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EndpointSubsetV1">
            <summary>
                EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
                  {
                    Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
                    Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
                  }
                The resulting set of endpoints can be viewed as:
                    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
                    b: [ 10.10.1.1:309, 10.10.2.2:309 ]
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointSubsetV1.Addresses">
            <summary>
                IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
            </summary>
        </member>
        <member name="M:KubeClient.Models.EndpointSubsetV1.ShouldSerializeAddresses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.EndpointSubsetV1.Addresses"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointSubsetV1.NotReadyAddresses">
            <summary>
                IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
            </summary>
        </member>
        <member name="M:KubeClient.Models.EndpointSubsetV1.ShouldSerializeNotReadyAddresses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.EndpointSubsetV1.NotReadyAddresses"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointSubsetV1.Ports">
            <summary>
                Port numbers available on the related IP addresses.
            </summary>
        </member>
        <member name="M:KubeClient.Models.EndpointSubsetV1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.EndpointSubsetV1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EndpointsV1">
            <summary>
                Endpoints is a collection of endpoints that implement the actual service. Example:
                  Name: "mysvc",
                  Subsets: [
                    {
                      Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
                      Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
                    },
                    {
                      Addresses: [{"ip": "10.10.3.3"}],
                      Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
                    },
                 ]
            </summary>
        </member>
        <member name="P:KubeClient.Models.EndpointsV1.Subsets">
            <summary>
                The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.
            </summary>
        </member>
        <member name="M:KubeClient.Models.EndpointsV1.ShouldSerializeSubsets">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.EndpointsV1.Subsets"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EnvFromSourceV1">
            <summary>
                EnvFromSource represents the source of a set of ConfigMaps
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvFromSourceV1.ConfigMapRef">
            <summary>
                The ConfigMap to select from
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvFromSourceV1.SecretRef">
            <summary>
                The Secret to select from
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvFromSourceV1.Prefix">
            <summary>
                An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EnvVarSourceV1">
            <summary>
                EnvVarSource represents a source for the value of an EnvVar.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarSourceV1.ConfigMapKeyRef">
            <summary>
                Selects a key of a ConfigMap.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarSourceV1.FieldRef">
            <summary>
                Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarSourceV1.ResourceFieldRef">
            <summary>
                Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarSourceV1.SecretKeyRef">
            <summary>
                Selects a key of a secret in the pod's namespace
            </summary>
        </member>
        <member name="T:KubeClient.Models.EnvVarV1">
            <summary>
                EnvVar represents an environment variable present in a Container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarV1.Name">
            <summary>
                Name of the environment variable. Must be a C_IDENTIFIER.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarV1.Value">
            <summary>
                Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
            </summary>
        </member>
        <member name="P:KubeClient.Models.EnvVarV1.ValueFrom">
            <summary>
                Source for the environment variable's value. Cannot be used if value is not empty.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventListV1">
            <summary>
                EventList is a list of events.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventListV1.Items">
            <summary>
                List of events
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventListV1Beta1">
            <summary>
                EventList is a list of Event objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventListV1Beta1.Items">
            <summary>
                Items is a list of schema objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventSeriesV1">
            <summary>
                EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1.LastObservedTime">
            <summary>
                Time of the last occurrence observed
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1.State">
            <summary>
                State of this Series: Ongoing or Finished
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1.Count">
            <summary>
                Number of occurrences in this series up to the last heartbeat time
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventSeriesV1Beta1">
            <summary>
                EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1Beta1.LastObservedTime">
            <summary>
                Time when last Event from the series was seen before last heartbeat.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1Beta1.State">
            <summary>
                Information whether this series is ongoing or finished.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSeriesV1Beta1.Count">
            <summary>
                Number of occurrences in this series up to the last heartbeat time
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventSourceV1">
            <summary>
                EventSource contains information for an event.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSourceV1.Component">
            <summary>
                Component from which the event is generated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventSourceV1.Host">
            <summary>
                Node name on which the event is generated.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventV1">
            <summary>
                Event is a report of an event somewhere in the cluster.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Related">
            <summary>
                Optional secondary object for more complex actions.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.EventTime">
            <summary>
                Time when this Event was first observed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Message">
            <summary>
                A human-readable description of the status of this operation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.ReportingInstance">
            <summary>
                ID of the controller instance, e.g. `kubelet-xyzf`.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Source">
            <summary>
                The component reporting this event. Should be a short machine understandable string.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Type">
            <summary>
                Type of this event (Normal, Warning), new types could be added in the future
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Action">
            <summary>
                What action was taken/failed regarding to the Regarding object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Reason">
            <summary>
                This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.FirstTimestamp">
            <summary>
                The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.LastTimestamp">
            <summary>
                The time at which the most recent occurrence of this event was recorded.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Series">
            <summary>
                Data about the Event series this event represents or nil if it's a singleton Event.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.Count">
            <summary>
                The number of times this event has occurred.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.InvolvedObject">
            <summary>
                The object that this event is about.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1.ReportingComponent">
            <summary>
                Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
            </summary>
        </member>
        <member name="T:KubeClient.Models.EventV1Beta1">
            <summary>
                Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Related">
            <summary>
                Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.DeprecatedSource">
            <summary>
                Deprecated field assuring backward compatibility with core.v1 Event type
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.EventTime">
            <summary>
                Required. Time when this Event was first observed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Note">
            <summary>
                Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.ReportingInstance">
            <summary>
                ID of the controller instance, e.g. `kubelet-xyzf`.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Type">
            <summary>
                Type of this event (Normal, Warning), new types could be added in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Regarding">
            <summary>
                The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Action">
            <summary>
                What action was taken/failed regarding to the regarding object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Reason">
            <summary>
                Why the action was taken.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.DeprecatedFirstTimestamp">
            <summary>
                Deprecated field assuring backward compatibility with core.v1 Event type
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.DeprecatedLastTimestamp">
            <summary>
                Deprecated field assuring backward compatibility with core.v1 Event type
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.ReportingController">
            <summary>
                Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.Series">
            <summary>
                Data about the Event series this event represents or nil if it's a singleton Event.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EventV1Beta1.DeprecatedCount">
            <summary>
                Deprecated field assuring backward compatibility with core.v1 Event type
            </summary>
        </member>
        <member name="T:KubeClient.Models.EvictionV1Beta1">
            <summary>
                Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/&lt;pod name&gt;/evictions.
            </summary>
        </member>
        <member name="P:KubeClient.Models.EvictionV1Beta1.DeleteOptions">
            <summary>
                DeleteOptions may be provided
            </summary>
        </member>
        <member name="T:KubeClient.Models.ExecActionV1">
            <summary>
                ExecAction describes a "run in container" action.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExecActionV1.Command">
            <summary>
                Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ExecActionV1.ShouldSerializeCommand">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ExecActionV1.Command"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ExternalDocumentationV1Beta1">
            <summary>
                ExternalDocumentation allows referencing an external resource for extended documentation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalDocumentationV1Beta1.Url">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalDocumentationV1Beta1.Description">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ExternalMetricSourceV2Beta1">
            <summary>
                ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricSourceV2Beta1.MetricName">
            <summary>
                metricName is the name of the metric in question.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricSourceV2Beta1.TargetAverageValue">
            <summary>
                targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricSourceV2Beta1.TargetValue">
            <summary>
                targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricSourceV2Beta1.MetricSelector">
            <summary>
                metricSelector is used to identify a specific time series within a given metric.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ExternalMetricStatusV2Beta1">
            <summary>
                ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricStatusV2Beta1.CurrentAverageValue">
            <summary>
                currentAverageValue is the current value of metric averaged over autoscaled pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricStatusV2Beta1.CurrentValue">
            <summary>
                currentValue is the current value of the metric (as a quantity)
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricStatusV2Beta1.MetricName">
            <summary>
                metricName is the name of a metric used for autoscaling in metric system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ExternalMetricStatusV2Beta1.MetricSelector">
            <summary>
                metricSelector is used to identify a specific time series within a given metric.
            </summary>
        </member>
        <member name="T:KubeClient.Models.FCVolumeSourceV1">
            <summary>
                Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FCVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FCVolumeSourceV1.Lun">
            <summary>
                Optional: FC target lun number
            </summary>
        </member>
        <member name="P:KubeClient.Models.FCVolumeSourceV1.TargetWWNs">
            <summary>
                Optional: FC target worldwide names (WWNs)
            </summary>
        </member>
        <member name="M:KubeClient.Models.FCVolumeSourceV1.ShouldSerializeTargetWWNs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.FCVolumeSourceV1.TargetWWNs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FCVolumeSourceV1.Wwids">
            <summary>
                Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
            </summary>
        </member>
        <member name="M:KubeClient.Models.FCVolumeSourceV1.ShouldSerializeWwids">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.FCVolumeSourceV1.Wwids"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FCVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.FlexPersistentVolumeSourceV1">
            <summary>
                FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexPersistentVolumeSourceV1.SecretRef">
            <summary>
                Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexPersistentVolumeSourceV1.Driver">
            <summary>
                Driver is the name of the driver to use for this volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexPersistentVolumeSourceV1.Options">
            <summary>
                Optional: Extra command options if any.
            </summary>
        </member>
        <member name="M:KubeClient.Models.FlexPersistentVolumeSourceV1.ShouldSerializeOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.FlexPersistentVolumeSourceV1.Options"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.FlexVolumeSourceV1">
            <summary>
                FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexVolumeSourceV1.SecretRef">
            <summary>
                Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexVolumeSourceV1.Driver">
            <summary>
                Driver is the name of the driver to use for this volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexVolumeSourceV1.Options">
            <summary>
                Optional: Extra command options if any.
            </summary>
        </member>
        <member name="M:KubeClient.Models.FlexVolumeSourceV1.ShouldSerializeOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.FlexVolumeSourceV1.Options"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlexVolumeSourceV1.ReadOnly">
            <summary>
                Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.FlockerVolumeSourceV1">
            <summary>
                Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlockerVolumeSourceV1.DatasetUUID">
            <summary>
                UUID of the dataset. This is unique identifier of a Flocker dataset
            </summary>
        </member>
        <member name="P:KubeClient.Models.FlockerVolumeSourceV1.DatasetName">
            <summary>
                Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
            </summary>
        </member>
        <member name="T:KubeClient.Models.FSGroupStrategyOptionsV1Beta1">
            <summary>
                FSGroupStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use FSGroupStrategyOptions from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FSGroupStrategyOptionsV1Beta1.Rule">
            <summary>
                rule is the strategy that will dictate what FSGroup is used in the SecurityContext.
            </summary>
        </member>
        <member name="P:KubeClient.Models.FSGroupStrategyOptionsV1Beta1.Ranges">
            <summary>
                ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.
            </summary>
        </member>
        <member name="M:KubeClient.Models.FSGroupStrategyOptionsV1Beta1.ShouldSerializeRanges">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.FSGroupStrategyOptionsV1Beta1.Ranges"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.GCEPersistentDiskVolumeSourceV1">
            <summary>
                Represents a Persistent Disk resource in Google Compute Engine.
                
                A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GCEPersistentDiskVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="P:KubeClient.Models.GCEPersistentDiskVolumeSourceV1.PdName">
            <summary>
                Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="P:KubeClient.Models.GCEPersistentDiskVolumeSourceV1.Partition">
            <summary>
                The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="P:KubeClient.Models.GCEPersistentDiskVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="T:KubeClient.Models.GitRepoVolumeSourceV1">
            <summary>
                Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
                
                DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GitRepoVolumeSourceV1.Revision">
            <summary>
                Commit hash for the specified revision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GitRepoVolumeSourceV1.Directory">
            <summary>
                Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GitRepoVolumeSourceV1.Repository">
            <summary>
                Repository URL
            </summary>
        </member>
        <member name="T:KubeClient.Models.GlusterfsVolumeSourceV1">
            <summary>
                Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GlusterfsVolumeSourceV1.Path">
            <summary>
                Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.GlusterfsVolumeSourceV1.Endpoints">
            <summary>
                EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.GlusterfsVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
            </summary>
        </member>
        <member name="T:KubeClient.Models.GroupVersionForDiscoveryV1">
            <summary>
                GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.
            </summary>
        </member>
        <member name="P:KubeClient.Models.GroupVersionForDiscoveryV1.GroupVersion">
            <summary>
                groupVersion specifies the API group and version in the form "group/version"
            </summary>
        </member>
        <member name="P:KubeClient.Models.GroupVersionForDiscoveryV1.Version">
            <summary>
                version specifies the version in the form of "version". This is to save the clients the trouble of splitting the GroupVersion.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HandlerV1">
            <summary>
                Handler defines a specific action that should be taken
            </summary>
        </member>
        <member name="P:KubeClient.Models.HandlerV1.Exec">
            <summary>
                One and only one of the following should be specified. Exec specifies the action to take.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HandlerV1.HttpGet">
            <summary>
                HTTPGet specifies the http request to perform.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HandlerV1.TcpSocket">
            <summary>
                TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1">
            <summary>
                HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1.LastTransitionTime">
            <summary>
                lastTransitionTime is the last time the condition transitioned from one status to another
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1.Message">
            <summary>
                message is a human-readable explanation containing details about the transition
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1.Type">
            <summary>
                type describes the current condition
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1.Reason">
            <summary>
                reason is the reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerConditionV2Beta1.Status">
            <summary>
                status is the status of the condition (True, False, Unknown)
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerListV1">
            <summary>
                list of horizontal pod autoscaler objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerListV1.Items">
            <summary>
                list of horizontal pod autoscaler objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerListV2Beta1">
            <summary>
                HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerListV2Beta1.Items">
            <summary>
                items is the list of horizontal pod autoscaler objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerSpecV1">
            <summary>
                specification of a horizontal pod autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV1.TargetCPUUtilizationPercentage">
            <summary>
                target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV1.ScaleTargetRef">
            <summary>
                reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV1.MaxReplicas">
            <summary>
                upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV1.MinReplicas">
            <summary>
                lower limit for the number of pods that can be set by the autoscaler, default 1.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1">
            <summary>
                HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.ScaleTargetRef">
            <summary>
                scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.MaxReplicas">
            <summary>
                maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.Metrics">
            <summary>
                metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.
            </summary>
        </member>
        <member name="M:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.ShouldSerializeMetrics">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.Metrics"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerSpecV2Beta1.MinReplicas">
            <summary>
                minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerStatusV1">
            <summary>
                current status of a horizontal pod autoscaler
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV1.CurrentCPUUtilizationPercentage">
            <summary>
                current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV1.LastScaleTime">
            <summary>
                last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV1.ObservedGeneration">
            <summary>
                most recent generation observed by this autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV1.CurrentReplicas">
            <summary>
                current number of replicas of pods managed by this autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV1.DesiredReplicas">
            <summary>
                desired number of replicas of pods managed by this autoscaler.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1">
            <summary>
                HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.LastScaleTime">
            <summary>
                lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.ObservedGeneration">
            <summary>
                observedGeneration is the most recent generation observed by this autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.Conditions">
            <summary>
                conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.CurrentMetrics">
            <summary>
                currentMetrics is the last read state of the metrics used by this autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.CurrentReplicas">
            <summary>
                currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerStatusV2Beta1.DesiredReplicas">
            <summary>
                desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerV1">
            <summary>
                configuration of a horizontal pod autoscaler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerV1.Spec">
            <summary>
                behaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerV1.Status">
            <summary>
                current information about the autoscaler.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HorizontalPodAutoscalerV2Beta1">
            <summary>
                HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerV2Beta1.Spec">
            <summary>
                spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HorizontalPodAutoscalerV2Beta1.Status">
            <summary>
                status is the current information about the autoscaler.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HostAliasV1">
            <summary>
                HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostAliasV1.Ip">
            <summary>
                IP address of the host file entry.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostAliasV1.Hostnames">
            <summary>
                Hostnames for the above IP address.
            </summary>
        </member>
        <member name="M:KubeClient.Models.HostAliasV1.ShouldSerializeHostnames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.HostAliasV1.Hostnames"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HostPathVolumeSourceV1">
            <summary>
                Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostPathVolumeSourceV1.Type">
            <summary>
                Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostPathVolumeSourceV1.Path">
            <summary>
                Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            </summary>
        </member>
        <member name="T:KubeClient.Models.HostPortRangeV1Beta1">
            <summary>
                HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined. Deprecated: use HostPortRange from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostPortRangeV1Beta1.Min">
            <summary>
                min is the start of the range, inclusive.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HostPortRangeV1Beta1.Max">
            <summary>
                max is the end of the range, inclusive.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HTTPGetActionV1">
            <summary>
                HTTPGetAction describes an action based on HTTP Get requests.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPGetActionV1.Scheme">
            <summary>
                Scheme to use for connecting to the host. Defaults to HTTP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPGetActionV1.Path">
            <summary>
                Path to access on the HTTP server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPGetActionV1.HttpHeaders">
            <summary>
                Custom headers to set in the request. HTTP allows repeated headers.
            </summary>
        </member>
        <member name="M:KubeClient.Models.HTTPGetActionV1.ShouldSerializeHttpHeaders">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.HTTPGetActionV1.HttpHeaders"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPGetActionV1.Host">
            <summary>
                Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPGetActionV1.Port">
            <summary>
                Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HTTPHeaderV1">
            <summary>
                HTTPHeader describes a custom header to be used in HTTP probes
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPHeaderV1.Name">
            <summary>
                The header field name
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPHeaderV1.Value">
            <summary>
                The header field value
            </summary>
        </member>
        <member name="T:KubeClient.Models.HTTPIngressPathV1Beta1">
            <summary>
                HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPIngressPathV1Beta1.Backend">
            <summary>
                Backend defines the referenced service endpoint to which the traffic will be forwarded to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPIngressPathV1Beta1.Path">
            <summary>
                Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
            </summary>
        </member>
        <member name="T:KubeClient.Models.HTTPIngressRuleValueV1Beta1">
            <summary>
                HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://&lt;host&gt;/&lt;path&gt;?&lt;searchpart&gt; -&gt; backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
            </summary>
        </member>
        <member name="P:KubeClient.Models.HTTPIngressRuleValueV1Beta1.Paths">
            <summary>
                A collection of paths that map requests to backends.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IDRangeV1Beta1">
            <summary>
                IDRange provides a min/max of an allowed range of IDs. Deprecated: use IDRange from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IDRangeV1Beta1.Min">
            <summary>
                min is the start of the range, inclusive.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IDRangeV1Beta1.Max">
            <summary>
                max is the end of the range, inclusive.
            </summary>
        </member>
        <member name="T:KubeClient.Models.InfoVersion">
            <summary>
                Info contains versioning information. how we'll want to distribute that information.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.BuildDate">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.GitTreeState">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.Platform">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.GitVersion">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.GoVersion">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.Compiler">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.Major">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.Minor">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InfoVersion.GitCommit">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressBackendV1Beta1">
            <summary>
                IngressBackend describes all endpoints for a given service and port.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressBackendV1Beta1.ServiceName">
            <summary>
                Specifies the name of the referenced service.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressBackendV1Beta1.ServicePort">
            <summary>
                Specifies the port of the referenced service.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressListV1Beta1">
            <summary>
                IngressList is a collection of Ingress.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressListV1Beta1.Items">
            <summary>
                Items is the list of Ingress.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressRuleV1Beta1">
            <summary>
                IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressRuleV1Beta1.Http">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressRuleV1Beta1.Host">
            <summary>
                Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
                	  IP in the Spec of the parent Ingress.
                2. The `:` delimiter is not respected because ports are not allowed.
                	  Currently the port of an Ingress is implicitly :80 for http and
                	  :443 for https.
                Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressSpecV1Beta1">
            <summary>
                IngressSpec describes the Ingress the user wishes to exist.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressSpecV1Beta1.Backend">
            <summary>
                A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressSpecV1Beta1.Rules">
            <summary>
                A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
            </summary>
        </member>
        <member name="M:KubeClient.Models.IngressSpecV1Beta1.ShouldSerializeRules">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.IngressSpecV1Beta1.Rules"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressSpecV1Beta1.Tls">
            <summary>
                TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
            </summary>
        </member>
        <member name="M:KubeClient.Models.IngressSpecV1Beta1.ShouldSerializeTls">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.IngressSpecV1Beta1.Tls"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressStatusV1Beta1">
            <summary>
                IngressStatus describe the current state of the Ingress.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressStatusV1Beta1.LoadBalancer">
            <summary>
                LoadBalancer contains the current status of the load-balancer.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressTLSV1Beta1">
            <summary>
                IngressTLS describes the transport layer security associated with an Ingress.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressTLSV1Beta1.SecretName">
            <summary>
                SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressTLSV1Beta1.Hosts">
            <summary>
                Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
            </summary>
        </member>
        <member name="M:KubeClient.Models.IngressTLSV1Beta1.ShouldSerializeHosts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.IngressTLSV1Beta1.Hosts"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IngressV1Beta1">
            <summary>
                Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressV1Beta1.Spec">
            <summary>
                Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.IngressV1Beta1.Status">
            <summary>
                Status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.InitializerConfigurationListV1Alpha1">
            <summary>
                InitializerConfigurationList is a list of InitializerConfiguration.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializerConfigurationListV1Alpha1.Items">
            <summary>
                List of InitializerConfiguration.
            </summary>
        </member>
        <member name="T:KubeClient.Models.InitializerConfigurationV1Alpha1">
            <summary>
                InitializerConfiguration describes the configuration of initializers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializerConfigurationV1Alpha1.Initializers">
            <summary>
                Initializers is a list of resources and their default initializers Order-sensitive. When merging multiple InitializerConfigurations, we sort the initializers from different InitializerConfigurations by the name of the InitializerConfigurations; the order of the initializers from the same InitializerConfiguration is preserved.
            </summary>
        </member>
        <member name="M:KubeClient.Models.InitializerConfigurationV1Alpha1.ShouldSerializeInitializers">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.InitializerConfigurationV1Alpha1.Initializers"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.InitializersV1">
            <summary>
                Initializers tracks the progress of initialization.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializersV1.Pending">
            <summary>
                Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializersV1.Result">
            <summary>
                If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.
            </summary>
        </member>
        <member name="T:KubeClient.Models.InitializerV1">
            <summary>
                Initializer is information about an initializer that has not yet completed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializerV1.Name">
            <summary>
                name of the process that is responsible for initializing this object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.InitializerV1Alpha1">
            <summary>
                Initializer describes the name and the failure policy of an initializer, and what resources it applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializerV1Alpha1.Name">
            <summary>
                Name is the identifier of the initializer. It will be added to the object that needs to be initialized. Name should be fully qualified, e.g., alwayspullimages.kubernetes.io, where "alwayspullimages" is the name of the webhook, and kubernetes.io is the name of the organization. Required
            </summary>
        </member>
        <member name="P:KubeClient.Models.InitializerV1Alpha1.Rules">
            <summary>
                Rules describes what resources/subresources the initializer cares about. The initializer cares about an operation if it matches _any_ Rule. Rule.Resources must not include subresources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.InitializerV1Alpha1.ShouldSerializeRules">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.InitializerV1Alpha1.Rules"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IPBlockV1">
            <summary>
                IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IPBlockV1.Cidr">
            <summary>
                CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
            </summary>
        </member>
        <member name="P:KubeClient.Models.IPBlockV1.Except">
            <summary>
                Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
            </summary>
        </member>
        <member name="M:KubeClient.Models.IPBlockV1.ShouldSerializeExcept">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.IPBlockV1.Except"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.IPBlockV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of IPBlock is deprecated by networking/v1/IPBlock. IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IPBlockV1Beta1.Cidr">
            <summary>
                CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
            </summary>
        </member>
        <member name="P:KubeClient.Models.IPBlockV1Beta1.Except">
            <summary>
                Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
            </summary>
        </member>
        <member name="M:KubeClient.Models.IPBlockV1Beta1.ShouldSerializeExcept">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.IPBlockV1Beta1.Except"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ISCSIPersistentVolumeSourceV1">
            <summary>
                ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.InitiatorName">
            <summary>
                Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface &lt;target portal&gt;:&lt;volume name&gt; will be created for the connection.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.IscsiInterface">
            <summary>
                iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.SecretRef">
            <summary>
                CHAP Secret for iSCSI target and initiator authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.TargetPortal">
            <summary>
                iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.ChapAuthSession">
            <summary>
                whether support iSCSI Session CHAP authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.Iqn">
            <summary>
                Target iSCSI Qualified Name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.Lun">
            <summary>
                iSCSI Target Lun number.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.Portals">
            <summary>
                iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
            </summary>
        </member>
        <member name="M:KubeClient.Models.ISCSIPersistentVolumeSourceV1.ShouldSerializePortals">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.Portals"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.ChapAuthDiscovery">
            <summary>
                whether support iSCSI Discovery CHAP authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIPersistentVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ISCSIVolumeSourceV1">
            <summary>
                Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.InitiatorName">
            <summary>
                Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface &lt;target portal&gt;:&lt;volume name&gt; will be created for the connection.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.IscsiInterface">
            <summary>
                iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.SecretRef">
            <summary>
                CHAP Secret for iSCSI target and initiator authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.TargetPortal">
            <summary>
                iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.ChapAuthSession">
            <summary>
                whether support iSCSI Session CHAP authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.Iqn">
            <summary>
                Target iSCSI Qualified Name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.Lun">
            <summary>
                iSCSI Target Lun number.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.Portals">
            <summary>
                iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
            </summary>
        </member>
        <member name="M:KubeClient.Models.ISCSIVolumeSourceV1.ShouldSerializePortals">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ISCSIVolumeSourceV1.Portals"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.ChapAuthDiscovery">
            <summary>
                whether support iSCSI Discovery CHAP authentication
            </summary>
        </member>
        <member name="P:KubeClient.Models.ISCSIVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobConditionV1">
            <summary>
                JobCondition describes current state of a job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.LastProbeTime">
            <summary>
                Last time the condition was checked.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transit from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.Message">
            <summary>
                Human readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.Type">
            <summary>
                Type of job condition, Complete or Failed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.Reason">
            <summary>
                (brief) reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobListV1">
            <summary>
                JobList is a collection of jobs.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobListV1.Items">
            <summary>
                items is the list of Jobs.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobSpecV1">
            <summary>
                JobSpec describes how the job execution will look like.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.Template">
            <summary>
                Describes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.Parallelism">
            <summary>
                Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) &lt; .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.ManualSelector">
            <summary>
                manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.Selector">
            <summary>
                A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.ActiveDeadlineSeconds">
            <summary>
                Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.Completions">
            <summary>
                Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.BackoffLimit">
            <summary>
                Specifies the number of retries before marking this job failed. Defaults to 6
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobSpecV1.TtlSecondsAfterFinished">
            <summary>
                Limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobStatusV1">
            <summary>
                JobStatus represents the current state of a Job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.Failed">
            <summary>
                The number of pods which reached phase Failed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.Succeeded">
            <summary>
                The number of pods which reached phase Succeeded.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.Active">
            <summary>
                The number of actively running pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.CompletionTime">
            <summary>
                Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.StartTime">
            <summary>
                Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobStatusV1.Conditions">
            <summary>
                The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
            </summary>
        </member>
        <member name="M:KubeClient.Models.JobStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JobStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobTemplateSpecV1Beta1">
            <summary>
                JobTemplateSpec describes the data a Job should have when created from a template
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobTemplateSpecV1Beta1.Metadata">
            <summary>
                Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobTemplateSpecV1Beta1.Spec">
            <summary>
                Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobTemplateSpecV2Alpha1">
            <summary>
                JobTemplateSpec describes the data a Job should have when created from a template
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobTemplateSpecV2Alpha1.Metadata">
            <summary>
                Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobTemplateSpecV2Alpha1.Spec">
            <summary>
                Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.JobV1">
            <summary>
                Job represents the configuration of a single job.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobV1.Spec">
            <summary>
                Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.JobV1.Status">
            <summary>
                Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.JSONSchemaPropsOrBoolV1Beta1">
            <summary>
                JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsOrBoolV1Beta1.Schema">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsOrBoolV1Beta1.Allows">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JSONSchemaPropsOrStringArrayV1Beta1">
            <summary>
                JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsOrStringArrayV1Beta1.Schema">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsOrStringArrayV1Beta1.Property">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JSONSchemaPropsV1Beta1">
            <summary>
                JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Schema">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Id">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Required">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeRequired">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Required"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Example">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Title">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Type">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Ref">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AllOf">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeAllOf">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AllOf"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AnyOf">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeAnyOf">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AnyOf"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MultipleOf">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.OneOf">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeOneOf">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.OneOf"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MaxLength">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MinLength">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Enum">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeEnum">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Enum"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.ExclusiveMaximum">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.ExclusiveMinimum">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Maximum">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Minimum">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Description">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Pattern">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AdditionalItems">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.AdditionalProperties">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Definitions">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeDefinitions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Definitions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Dependencies">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeDependencies">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Dependencies"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.ExternalDocs">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MaxItems">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MaxProperties">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MinItems">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.MinProperties">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.PatternProperties">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializePatternProperties">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.PatternProperties"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Properties">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="M:KubeClient.Models.JSONSchemaPropsV1Beta1.ShouldSerializeProperties">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Properties"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.UniqueItems">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Default">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Format">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONSchemaPropsV1Beta1.Not">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.JSONV1Beta1">
            <summary>
                JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
            </summary>
        </member>
        <member name="P:KubeClient.Models.JSONV1Beta1.Raw">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KeyToPathV1">
            <summary>
                Maps a string key to a path within a volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KeyToPathV1.Mode">
            <summary>
                Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KeyToPathV1.Path">
            <summary>
                The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KeyToPathV1.Key">
            <summary>
                The key to project.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LabelSelectorRequirementV1">
            <summary>
                A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LabelSelectorRequirementV1.Operator">
            <summary>
                operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LabelSelectorRequirementV1.Values">
            <summary>
                values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LabelSelectorRequirementV1.ShouldSerializeValues">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LabelSelectorRequirementV1.Values"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LabelSelectorRequirementV1.Key">
            <summary>
                key is the label key that the selector applies to.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LabelSelectorV1">
            <summary>
                A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LabelSelectorV1.MatchExpressions">
            <summary>
                matchExpressions is a list of label selector requirements. The requirements are ANDed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LabelSelectorV1.ShouldSerializeMatchExpressions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LabelSelectorV1.MatchExpressions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LabelSelectorV1.MatchLabels">
            <summary>
                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LabelSelectorV1.ShouldSerializeMatchLabels">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LabelSelectorV1.MatchLabels"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LifecycleV1">
            <summary>
                Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LifecycleV1.PreStop">
            <summary>
                PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
            </summary>
        </member>
        <member name="P:KubeClient.Models.LifecycleV1.PostStart">
            <summary>
                PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
            </summary>
        </member>
        <member name="T:KubeClient.Models.LimitRangeItemV1">
            <summary>
                LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.Type">
            <summary>
                Type of resource that this limit applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.Min">
            <summary>
                Min usage constraints on this kind by resource name.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LimitRangeItemV1.ShouldSerializeMin">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LimitRangeItemV1.Min"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.MaxLimitRequestRatio">
            <summary>
                MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LimitRangeItemV1.ShouldSerializeMaxLimitRequestRatio">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LimitRangeItemV1.MaxLimitRequestRatio"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.Default">
            <summary>
                Default resource requirement limit value by resource name if resource limit is omitted.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LimitRangeItemV1.ShouldSerializeDefault">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LimitRangeItemV1.Default"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.DefaultRequest">
            <summary>
                DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LimitRangeItemV1.ShouldSerializeDefaultRequest">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LimitRangeItemV1.DefaultRequest"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeItemV1.Max">
            <summary>
                Max usage constraints on this kind by resource name.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LimitRangeItemV1.ShouldSerializeMax">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LimitRangeItemV1.Max"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LimitRangeListV1">
            <summary>
                LimitRangeList is a list of LimitRange items.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeListV1.Items">
            <summary>
                Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
            </summary>
        </member>
        <member name="T:KubeClient.Models.LimitRangeSpecV1">
            <summary>
                LimitRangeSpec defines a min/max usage limit for resources that match on kind.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeSpecV1.Limits">
            <summary>
                Limits is the list of LimitRangeItem objects that are enforced.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LimitRangeV1">
            <summary>
                LimitRange sets resource usage limits for each kind of resource in a Namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LimitRangeV1.Spec">
            <summary>
                Spec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.ListMetaV1">
            <summary>
                ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ListMetaV1.Continue">
            <summary>
                continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ListMetaV1.SelfLink">
            <summary>
                selfLink is a URL representing this object. Populated by the system. Read-only.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ListMetaV1.ResourceVersion">
            <summary>
                String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
            </summary>
        </member>
        <member name="T:KubeClient.Models.LoadBalancerIngressV1">
            <summary>
                LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LoadBalancerIngressV1.Hostname">
            <summary>
                Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
            </summary>
        </member>
        <member name="P:KubeClient.Models.LoadBalancerIngressV1.Ip">
            <summary>
                IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
            </summary>
        </member>
        <member name="T:KubeClient.Models.LoadBalancerStatusV1">
            <summary>
                LoadBalancerStatus represents the status of a load-balancer.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LoadBalancerStatusV1.Ingress">
            <summary>
                Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
            </summary>
        </member>
        <member name="M:KubeClient.Models.LoadBalancerStatusV1.ShouldSerializeIngress">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.LoadBalancerStatusV1.Ingress"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.LocalObjectReferenceV1">
            <summary>
                LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalObjectReferenceV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="T:KubeClient.Models.LocalSubjectAccessReviewV1">
            <summary>
                LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalSubjectAccessReviewV1.Spec">
            <summary>
                Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalSubjectAccessReviewV1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.LocalSubjectAccessReviewV1Beta1">
            <summary>
                LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalSubjectAccessReviewV1Beta1.Spec">
            <summary>
                Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalSubjectAccessReviewV1Beta1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.LocalVolumeSourceV1">
            <summary>
                Local represents directly-attached storage with node affinity (Beta feature)
            </summary>
        </member>
        <member name="P:KubeClient.Models.LocalVolumeSourceV1.Path">
            <summary>
                The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...). Directories can be represented only by PersistentVolume with VolumeMode=Filesystem. Block devices can be represented only by VolumeMode=Block, which also requires the BlockVolume alpha feature gate to be enabled.
            </summary>
        </member>
        <member name="T:KubeClient.Models.MetricSpecV2Beta1">
            <summary>
                MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricSpecV2Beta1.Resource">
            <summary>
                resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricSpecV2Beta1.Type">
            <summary>
                type is the type of metric source.  It should be one of "Object", "Pods" or "Resource", each mapping to a matching field in the object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricSpecV2Beta1.External">
            <summary>
                external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricSpecV2Beta1.Pods">
            <summary>
                pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricSpecV2Beta1.Object">
            <summary>
                object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
            </summary>
        </member>
        <member name="T:KubeClient.Models.MetricStatusV2Beta1">
            <summary>
                MetricStatus describes the last-read state of a single metric.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricStatusV2Beta1.Resource">
            <summary>
                resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricStatusV2Beta1.Type">
            <summary>
                type is the type of metric source.  It will be one of "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricStatusV2Beta1.External">
            <summary>
                external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricStatusV2Beta1.Pods">
            <summary>
                pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MetricStatusV2Beta1.Object">
            <summary>
                object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
            </summary>
        </member>
        <member name="T:KubeClient.Models.MutatingWebhookConfigurationListV1Beta1">
            <summary>
                MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MutatingWebhookConfigurationListV1Beta1.Items">
            <summary>
                List of MutatingWebhookConfiguration.
            </summary>
        </member>
        <member name="T:KubeClient.Models.MutatingWebhookConfigurationV1Beta1">
            <summary>
                MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MutatingWebhookConfigurationV1Beta1.Webhooks">
            <summary>
                Webhooks is a list of webhooks and the affected resources and operations.
            </summary>
        </member>
        <member name="M:KubeClient.Models.MutatingWebhookConfigurationV1Beta1.ShouldSerializeWebhooks">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.MutatingWebhookConfigurationV1Beta1.Webhooks"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NamespaceListV1">
            <summary>
                NamespaceList is a list of Namespaces.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NamespaceListV1.Items">
            <summary>
                Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            </summary>
        </member>
        <member name="T:KubeClient.Models.NamespaceSpecV1">
            <summary>
                NamespaceSpec describes the attributes on a Namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NamespaceSpecV1.Finalizers">
            <summary>
                Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
            </summary>
        </member>
        <member name="M:KubeClient.Models.NamespaceSpecV1.ShouldSerializeFinalizers">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NamespaceSpecV1.Finalizers"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NamespaceStatusV1">
            <summary>
                NamespaceStatus is information about the current status of a Namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NamespaceStatusV1.Phase">
            <summary>
                Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
            </summary>
        </member>
        <member name="T:KubeClient.Models.NamespaceV1">
            <summary>
                Namespace provides a scope for Names. Use of multiple namespaces is optional.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NamespaceV1.Spec">
            <summary>
                Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.NamespaceV1.Status">
            <summary>
                Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyEgressRuleV1">
            <summary>
                NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyEgressRuleV1.To">
            <summary>
                List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyEgressRuleV1.ShouldSerializeTo">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyEgressRuleV1.To"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyEgressRuleV1.Ports">
            <summary>
                List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyEgressRuleV1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyEgressRuleV1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.To">
            <summary>
                List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.ShouldSerializeTo">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.To"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.Ports">
            <summary>
                List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyEgressRuleV1Beta1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyIngressRuleV1">
            <summary>
                NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyIngressRuleV1.From">
            <summary>
                List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyIngressRuleV1.ShouldSerializeFrom">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyIngressRuleV1.From"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyIngressRuleV1.Ports">
            <summary>
                List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyIngressRuleV1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyIngressRuleV1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of NetworkPolicyIngressRule is deprecated by networking/v1/NetworkPolicyIngressRule. This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.From">
            <summary>
                List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.ShouldSerializeFrom">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.From"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.Ports">
            <summary>
                List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicyIngressRuleV1Beta1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyListV1">
            <summary>
                NetworkPolicyList is a list of NetworkPolicy objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyListV1.Items">
            <summary>
                Items is a list of schema objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyPeerV1">
            <summary>
                NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1.IpBlock">
            <summary>
                IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1.NamespaceSelector">
            <summary>
                Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.
                
                If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1.PodSelector">
            <summary>
                This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.
                
                If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyPeerV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated by networking/v1/NetworkPolicyPeer.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1Beta1.IpBlock">
            <summary>
                IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1Beta1.NamespaceSelector">
            <summary>
                Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.
                
                If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPeerV1Beta1.PodSelector">
            <summary>
                This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.
                
                If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyPortV1">
            <summary>
                NetworkPolicyPort describes a port to allow traffic on
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPortV1.Protocol">
            <summary>
                The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPortV1.Port">
            <summary>
                The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyPortV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of NetworkPolicyPort is deprecated by networking/v1/NetworkPolicyPort.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPortV1Beta1.Protocol">
            <summary>
                Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyPortV1Beta1.Port">
            <summary>
                If specified, the port on the given protocol.  This can either be a numerical or named port on a pod.  If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicySpecV1">
            <summary>
                NetworkPolicySpec provides the specification of a NetworkPolicy
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1.PodSelector">
            <summary>
                Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1.Egress">
            <summary>
                List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1.ShouldSerializeEgress">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1.Egress"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1.Ingress">
            <summary>
                List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1.ShouldSerializeIngress">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1.Ingress"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1.PolicyTypes">
            <summary>
                List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1.ShouldSerializePolicyTypes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1.PolicyTypes"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicySpecV1Beta1">
            <summary>
                DEPRECATED 1.9 - This group version of NetworkPolicySpec is deprecated by networking/v1/NetworkPolicySpec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1Beta1.PodSelector">
            <summary>
                Selects the pods to which this NetworkPolicy object applies.  The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods.  In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1Beta1.Egress">
            <summary>
                List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1Beta1.ShouldSerializeEgress">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1Beta1.Egress"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1Beta1.Ingress">
            <summary>
                List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default).
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1Beta1.ShouldSerializeIngress">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1Beta1.Ingress"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicySpecV1Beta1.PolicyTypes">
            <summary>
                List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
            </summary>
        </member>
        <member name="M:KubeClient.Models.NetworkPolicySpecV1Beta1.ShouldSerializePolicyTypes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NetworkPolicySpecV1Beta1.PolicyTypes"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NetworkPolicyV1">
            <summary>
                NetworkPolicy describes what network traffic is allowed for a set of Pods
            </summary>
        </member>
        <member name="P:KubeClient.Models.NetworkPolicyV1.Spec">
            <summary>
                Specification of the desired behavior for this NetworkPolicy.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NFSVolumeSourceV1">
            <summary>
                Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NFSVolumeSourceV1.Path">
            <summary>
                Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            </summary>
        </member>
        <member name="P:KubeClient.Models.NFSVolumeSourceV1.Server">
            <summary>
                Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            </summary>
        </member>
        <member name="P:KubeClient.Models.NFSVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeAddressV1">
            <summary>
                NodeAddress contains information for the node's address.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeAddressV1.Type">
            <summary>
                Node address type, one of Hostname, ExternalIP or InternalIP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeAddressV1.Address">
            <summary>
                The node address.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeAffinityV1">
            <summary>
                Node affinity is a group of node affinity scheduling rules.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeAffinityV1.ShouldSerializePreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeAffinityV1.RequiredDuringSchedulingIgnoredDuringExecution">
            <summary>
                If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeConditionV1">
            <summary>
                NodeCondition contains condition information for a node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.LastHeartbeatTime">
            <summary>
                Last time we got an update on a given condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transit from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.Message">
            <summary>
                Human readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.Type">
            <summary>
                Type of node condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.Reason">
            <summary>
                (brief) reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeConfigSourceV1">
            <summary>
                NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConfigSourceV1.ConfigMap">
            <summary>
                ConfigMap is a reference to a Node's ConfigMap
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeConfigStatusV1">
            <summary>
                NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConfigStatusV1.Assigned">
            <summary>
                Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConfigStatusV1.LastKnownGood">
            <summary>
                LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConfigStatusV1.Active">
            <summary>
                Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeConfigStatusV1.Error">
            <summary>
                Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeDaemonEndpointsV1">
            <summary>
                NodeDaemonEndpoints lists ports opened by daemons running on the Node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeDaemonEndpointsV1.KubeletEndpoint">
            <summary>
                Endpoint on which Kubelet is listening.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeListV1">
            <summary>
                NodeList is the whole list of all Nodes which have been registered with master.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeListV1.Items">
            <summary>
                List of nodes
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeSelectorRequirementV1">
            <summary>
                A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorRequirementV1.Operator">
            <summary>
                Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorRequirementV1.Values">
            <summary>
                An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeSelectorRequirementV1.ShouldSerializeValues">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeSelectorRequirementV1.Values"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorRequirementV1.Key">
            <summary>
                The label key that the selector applies to.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeSelectorTermV1">
            <summary>
                A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorTermV1.MatchExpressions">
            <summary>
                A list of node selector requirements by node's labels.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeSelectorTermV1.ShouldSerializeMatchExpressions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeSelectorTermV1.MatchExpressions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorTermV1.MatchFields">
            <summary>
                A list of node selector requirements by node's fields.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeSelectorTermV1.ShouldSerializeMatchFields">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeSelectorTermV1.MatchFields"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeSelectorV1">
            <summary>
                A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSelectorV1.NodeSelectorTerms">
            <summary>
                Required. A list of node selector terms. The terms are ORed.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeSpecV1">
            <summary>
                NodeSpec describes the attributes that a node is created with.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.ExternalID">
            <summary>
                Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.ProviderID">
            <summary>
                ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.PodCIDR">
            <summary>
                PodCIDR represents the pod IP range assigned to the node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.ConfigSource">
            <summary>
                If specified, the source to get node configuration from The DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this field
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.Unschedulable">
            <summary>
                Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSpecV1.Taints">
            <summary>
                If specified, the node's taints.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeSpecV1.ShouldSerializeTaints">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeSpecV1.Taints"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeStatusV1">
            <summary>
                NodeStatus is information about the current status of a node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.VolumesAttached">
            <summary>
                List of volumes that are attached to the node.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeVolumesAttached">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.VolumesAttached"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Allocatable">
            <summary>
                Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeAllocatable">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.Allocatable"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Phase">
            <summary>
                NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.VolumesInUse">
            <summary>
                List of attachable volumes in use (mounted) by the node.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeVolumesInUse">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.VolumesInUse"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Config">
            <summary>
                Status of the config assigned to the node via the dynamic Kubelet config feature.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.NodeInfo">
            <summary>
                Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Addresses">
            <summary>
                List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeAddresses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.Addresses"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Conditions">
            <summary>
                Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.DaemonEndpoints">
            <summary>
                Endpoints of daemons running on the Node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Images">
            <summary>
                List of container images on this node
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeImages">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.Images"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeStatusV1.Capacity">
            <summary>
                Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
            </summary>
        </member>
        <member name="M:KubeClient.Models.NodeStatusV1.ShouldSerializeCapacity">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NodeStatusV1.Capacity"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeSystemInfoV1">
            <summary>
                NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.BootID">
            <summary>
                Boot ID reported by the node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.MachineID">
            <summary>
                MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.SystemUUID">
            <summary>
                SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.Architecture">
            <summary>
                The Architecture reported by the node
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.OsImage">
            <summary>
                OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.OperatingSystem">
            <summary>
                The Operating System reported by the node
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.ContainerRuntimeVersion">
            <summary>
                ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.KernelVersion">
            <summary>
                Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.KubeProxyVersion">
            <summary>
                KubeProxy Version reported by the node.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeSystemInfoV1.KubeletVersion">
            <summary>
                Kubelet Version reported by the node.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NodeV1">
            <summary>
                Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeV1.Spec">
            <summary>
                Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.NodeV1.Status">
            <summary>
                Most recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.NonResourceAttributesV1">
            <summary>
                NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceAttributesV1.Verb">
            <summary>
                Verb is the standard HTTP verb
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceAttributesV1.Path">
            <summary>
                Path is the URL path of the request
            </summary>
        </member>
        <member name="T:KubeClient.Models.NonResourceAttributesV1Beta1">
            <summary>
                NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceAttributesV1Beta1.Verb">
            <summary>
                Verb is the standard HTTP verb
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceAttributesV1Beta1.Path">
            <summary>
                Path is the URL path of the request
            </summary>
        </member>
        <member name="T:KubeClient.Models.NonResourceRuleV1">
            <summary>
                NonResourceRule holds information that describes a rule for the non-resource
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceRuleV1.NonResourceURLs">
            <summary>
                NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NonResourceRuleV1.ShouldSerializeNonResourceURLs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NonResourceRuleV1.NonResourceURLs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceRuleV1.Verbs">
            <summary>
                Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.NonResourceRuleV1Beta1">
            <summary>
                NonResourceRule holds information that describes a rule for the non-resource
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceRuleV1Beta1.NonResourceURLs">
            <summary>
                NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.NonResourceRuleV1Beta1.ShouldSerializeNonResourceURLs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.NonResourceRuleV1Beta1.NonResourceURLs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.NonResourceRuleV1Beta1.Verbs">
            <summary>
                Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ObjectFieldSelectorV1">
            <summary>
                ObjectFieldSelector selects an APIVersioned field of an object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectFieldSelectorV1.FieldPath">
            <summary>
                Path of the field to select in the specified API version.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectFieldSelectorV1.ApiVersion">
            <summary>
                Version of the schema the FieldPath is written in terms of, defaults to "v1".
            </summary>
        </member>
        <member name="T:KubeClient.Models.ObjectMetaV1">
            <summary>
                ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
            </summary>
            <summary>
                ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Uid">
            <summary>
                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
                
                Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.ClusterName">
            <summary>
                The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.GenerateName">
            <summary>
                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
                
                If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
                
                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Name">
            <summary>
                Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Namespace">
            <summary>
                Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
                
                Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.SelfLink">
            <summary>
                SelfLink is a URL representing this object. Populated by the system. Read-only.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Generation">
            <summary>
                A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.ResourceVersion">
            <summary>
                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
                
                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.CreationTimestamp">
            <summary>
                CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
                
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.DeletionTimestamp">
            <summary>
                DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
                
                Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Annotations">
            <summary>
                Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
            </summary>
        </member>
        <member name="M:KubeClient.Models.ObjectMetaV1.ShouldSerializeAnnotations">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ObjectMetaV1.Annotations"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.DeletionGracePeriodSeconds">
            <summary>
                Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Finalizers">
            <summary>
                Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ObjectMetaV1.ShouldSerializeFinalizers">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ObjectMetaV1.Finalizers"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Initializers">
            <summary>
                An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.
                
                When an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.Labels">
            <summary>
                Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
            </summary>
        </member>
        <member name="M:KubeClient.Models.ObjectMetaV1.ShouldSerializeLabels">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ObjectMetaV1.Labels"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.OwnerReferences">
            <summary>
                List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ObjectMetaV1.ShouldSerializeOwnerReferences">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ObjectMetaV1.OwnerReferences"/> property should be serialised.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ObjectMetaV1._extensionData">
            <summary>
                Additional data (if any) that does not correspond to properties defined on the <see cref="T:KubeClient.Models.ObjectMetaV1"/> model.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetaV1.ExtensionData">
            <summary>
                Additional serialised data (if any) that does not correspond to properties defined on the <see cref="T:KubeClient.Models.ObjectMetaV1"/> model.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ObjectMetricSourceV2Beta1">
            <summary>
                ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricSourceV2Beta1.MetricName">
            <summary>
                metricName is the name of the metric in question.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricSourceV2Beta1.TargetValue">
            <summary>
                targetValue is the target value of the metric (as a quantity).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricSourceV2Beta1.Target">
            <summary>
                target is the described Kubernetes object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ObjectMetricStatusV2Beta1">
            <summary>
                ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricStatusV2Beta1.CurrentValue">
            <summary>
                currentValue is the current value of the metric (as a quantity).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricStatusV2Beta1.MetricName">
            <summary>
                metricName is the name of the metric in question.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectMetricStatusV2Beta1.Target">
            <summary>
                target is the described Kubernetes object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ObjectReferenceV1">
            <summary>
                ObjectReference contains enough information to let you inspect or modify the referred object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectReferenceV1.Uid">
            <summary>
                UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectReferenceV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectReferenceV1.Namespace">
            <summary>
                Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectReferenceV1.FieldPath">
            <summary>
                If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ObjectReferenceV1.ResourceVersion">
            <summary>
                Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
            </summary>
        </member>
        <member name="T:KubeClient.Models.OwnerReferenceV1">
            <summary>
                OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
            </summary>
        </member>
        <member name="P:KubeClient.Models.OwnerReferenceV1.Uid">
            <summary>
                UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
            </summary>
        </member>
        <member name="P:KubeClient.Models.OwnerReferenceV1.Name">
            <summary>
                Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.OwnerReferenceV1.BlockOwnerDeletion">
            <summary>
                If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
            </summary>
        </member>
        <member name="P:KubeClient.Models.OwnerReferenceV1.Controller">
            <summary>
                If true, this reference points to the managing controller.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PatchV1">
            <summary>
                Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimConditionV1">
            <summary>
                PersistentVolumeClaimCondition contails details about state of pvc
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.LastProbeTime">
            <summary>
                Last time we probed the condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.Message">
            <summary>
                Human-readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.Type">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.Reason">
            <summary>
                Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimConditionV1.Status">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimListV1">
            <summary>
                PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimListV1.Items">
            <summary>
                A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimSpecV1">
            <summary>
                PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.StorageClassName">
            <summary>
                Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.VolumeMode">
            <summary>
                volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is an alpha feature and may change in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.VolumeName">
            <summary>
                VolumeName is the binding reference to the PersistentVolume backing this claim.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.Selector">
            <summary>
                A label query over volumes to consider for binding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.AccessModes">
            <summary>
                AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeClaimSpecV1.ShouldSerializeAccessModes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeClaimSpecV1.AccessModes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimSpecV1.Resources">
            <summary>
                Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimStatusV1">
            <summary>
                PersistentVolumeClaimStatus is the current status of a persistent volume claim.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimStatusV1.Phase">
            <summary>
                Phase represents the current phase of PersistentVolumeClaim.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimStatusV1.AccessModes">
            <summary>
                AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeClaimStatusV1.ShouldSerializeAccessModes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeClaimStatusV1.AccessModes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimStatusV1.Conditions">
            <summary>
                Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeClaimStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeClaimStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimStatusV1.Capacity">
            <summary>
                Represents the actual resources of the underlying volume.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeClaimStatusV1.ShouldSerializeCapacity">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeClaimStatusV1.Capacity"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimV1">
            <summary>
                PersistentVolumeClaim is a user's request for and claim to a persistent volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimV1.Spec">
            <summary>
                Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimV1.Status">
            <summary>
                Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeClaimVolumeSourceV1">
            <summary>
                PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimVolumeSourceV1.ClaimName">
            <summary>
                ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeClaimVolumeSourceV1.ReadOnly">
            <summary>
                Will force the ReadOnly setting in VolumeMounts. Default false.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeListV1">
            <summary>
                PersistentVolumeList is a list of PersistentVolume items.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeListV1.Items">
            <summary>
                List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeSpecV1">
            <summary>
                PersistentVolumeSpec is the specification of a persistent volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.ScaleIO">
            <summary>
                ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Fc">
            <summary>
                FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Rbd">
            <summary>
                RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.AwsElasticBlockStore">
            <summary>
                AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.AzureFile">
            <summary>
                AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.FlexVolume">
            <summary>
                FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.PortworxVolume">
            <summary>
                PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Quobyte">
            <summary>
                Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.StorageClassName">
            <summary>
                Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.VolumeMode">
            <summary>
                volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is an alpha feature and may change in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.VsphereVolume">
            <summary>
                VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.ClaimRef">
            <summary>
                ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.HostPath">
            <summary>
                HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Csi">
            <summary>
                CSI represents storage that handled by an external CSI driver (Beta feature).
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Iscsi">
            <summary>
                ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.AzureDisk">
            <summary>
                AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.GcePersistentDisk">
            <summary>
                GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.PhotonPersistentDisk">
            <summary>
                PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Local">
            <summary>
                Local represents directly-attached storage with node affinity
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Cinder">
            <summary>
                Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Flocker">
            <summary>
                Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.AccessModes">
            <summary>
                AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeSpecV1.ShouldSerializeAccessModes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeSpecV1.AccessModes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Cephfs">
            <summary>
                CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Glusterfs">
            <summary>
                Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.MountOptions">
            <summary>
                A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeSpecV1.ShouldSerializeMountOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeSpecV1.MountOptions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Nfs">
            <summary>
                NFS represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Storageos">
            <summary>
                StorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.Capacity">
            <summary>
                A description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
            </summary>
        </member>
        <member name="M:KubeClient.Models.PersistentVolumeSpecV1.ShouldSerializeCapacity">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PersistentVolumeSpecV1.Capacity"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.NodeAffinity">
            <summary>
                NodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeSpecV1.PersistentVolumeReclaimPolicy">
            <summary>
                What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeStatusV1">
            <summary>
                PersistentVolumeStatus is the current status of a persistent volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeStatusV1.Message">
            <summary>
                A human-readable message indicating details about why the volume is in this state.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeStatusV1.Phase">
            <summary>
                Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeStatusV1.Reason">
            <summary>
                Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PersistentVolumeV1">
            <summary>
                PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeV1.Spec">
            <summary>
                Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
            </summary>
        </member>
        <member name="P:KubeClient.Models.PersistentVolumeV1.Status">
            <summary>
                Status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
            </summary>
        </member>
        <member name="T:KubeClient.Models.PhotonPersistentDiskVolumeSourceV1">
            <summary>
                Represents a Photon Controller persistent disk resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PhotonPersistentDiskVolumeSourceV1.PdID">
            <summary>
                ID that identifies Photon Controller persistent disk
            </summary>
        </member>
        <member name="P:KubeClient.Models.PhotonPersistentDiskVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodAffinityTermV1">
            <summary>
                Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key &lt;topologyKey&gt; matches that of any node on which a pod of the set of pods is running
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAffinityTermV1.LabelSelector">
            <summary>
                A label query over a set of resources, in this case pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAffinityTermV1.Namespaces">
            <summary>
                namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodAffinityTermV1.ShouldSerializeNamespaces">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodAffinityTermV1.Namespaces"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAffinityTermV1.TopologyKey">
            <summary>
                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodAffinityV1">
            <summary>
                Pod affinity is a group of inter pod affinity scheduling rules.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodAffinityV1.ShouldSerializePreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAffinityV1.RequiredDuringSchedulingIgnoredDuringExecution">
            <summary>
                If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodAffinityV1.ShouldSerializeRequiredDuringSchedulingIgnoredDuringExecution">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodAffinityV1.RequiredDuringSchedulingIgnoredDuringExecution"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodAntiAffinityV1">
            <summary>
                Pod anti affinity is a group of inter pod anti affinity scheduling rules.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAntiAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodAntiAffinityV1.ShouldSerializePreferredDuringSchedulingIgnoredDuringExecution">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodAntiAffinityV1.PreferredDuringSchedulingIgnoredDuringExecution"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodAntiAffinityV1.RequiredDuringSchedulingIgnoredDuringExecution">
            <summary>
                If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodAntiAffinityV1.ShouldSerializeRequiredDuringSchedulingIgnoredDuringExecution">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodAntiAffinityV1.RequiredDuringSchedulingIgnoredDuringExecution"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodConditionV1">
            <summary>
                PodCondition contains details for the current condition of this pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.LastProbeTime">
            <summary>
                Last time we probed the condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.Message">
            <summary>
                Human-readable message indicating details about last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.Type">
            <summary>
                Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.Reason">
            <summary>
                Unique, one-word, CamelCase reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodConditionV1.Status">
            <summary>
                Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDisruptionBudgetListV1Beta1">
            <summary>
                PodDisruptionBudgetList is a collection of PodDisruptionBudgets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetListV1Beta1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDisruptionBudgetSpecV1Beta1">
            <summary>
                PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetSpecV1Beta1.MaxUnavailable">
            <summary>
                An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetSpecV1Beta1.MinAvailable">
            <summary>
                An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetSpecV1Beta1.Selector">
            <summary>
                Label query over pods whose evictions are managed by the disruption budget.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1">
            <summary>
                PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.DisruptionsAllowed">
            <summary>
                Number of pod disruptions that are currently allowed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.ObservedGeneration">
            <summary>
                Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.DisruptedPods">
            <summary>
                DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.ExpectedPods">
            <summary>
                total number of pods counted by this disruption budget
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.CurrentHealthy">
            <summary>
                current number of healthy pods
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetStatusV1Beta1.DesiredHealthy">
            <summary>
                minimum desired number of healthy pods
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDisruptionBudgetV1Beta1">
            <summary>
                PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetV1Beta1.Spec">
            <summary>
                Specification of the desired behavior of the PodDisruptionBudget.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDisruptionBudgetV1Beta1.Status">
            <summary>
                Most recently observed status of the PodDisruptionBudget.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDNSConfigOptionV1">
            <summary>
                PodDNSConfigOption defines DNS resolver options of a pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDNSConfigOptionV1.Name">
            <summary>
                Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDNSConfigOptionV1.Value">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodDNSConfigV1">
            <summary>
                PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDNSConfigV1.Nameservers">
            <summary>
                A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodDNSConfigV1.ShouldSerializeNameservers">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodDNSConfigV1.Nameservers"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDNSConfigV1.Options">
            <summary>
                A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodDNSConfigV1.ShouldSerializeOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodDNSConfigV1.Options"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodDNSConfigV1.Searches">
            <summary>
                A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodDNSConfigV1.ShouldSerializeSearches">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodDNSConfigV1.Searches"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodListV1">
            <summary>
                PodList is a list of Pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodListV1.Items">
            <summary>
                List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodPresetListV1Alpha1">
            <summary>
                PodPresetList is a list of PodPreset objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetListV1Alpha1.Items">
            <summary>
                Items is a list of schema objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodPresetSpecV1Alpha1">
            <summary>
                PodPresetSpec is a description of a pod preset.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetSpecV1Alpha1.EnvFrom">
            <summary>
                EnvFrom defines the collection of EnvFromSource to inject into containers.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodPresetSpecV1Alpha1.ShouldSerializeEnvFrom">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodPresetSpecV1Alpha1.EnvFrom"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetSpecV1Alpha1.Selector">
            <summary>
                Selector is a label query over a set of resources, in this case pods. Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetSpecV1Alpha1.VolumeMounts">
            <summary>
                VolumeMounts defines the collection of VolumeMount to inject into containers.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodPresetSpecV1Alpha1.ShouldSerializeVolumeMounts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodPresetSpecV1Alpha1.VolumeMounts"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetSpecV1Alpha1.Volumes">
            <summary>
                Volumes defines the collection of Volume to inject into the pod.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodPresetSpecV1Alpha1.ShouldSerializeVolumes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodPresetSpecV1Alpha1.Volumes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetSpecV1Alpha1.Env">
            <summary>
                Env defines the collection of EnvVar to inject into containers.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodPresetSpecV1Alpha1.ShouldSerializeEnv">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodPresetSpecV1Alpha1.Env"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodPresetV1Alpha1">
            <summary>
                PodPreset is a policy resource that defines additional runtime requirements for a Pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodPresetV1Alpha1.Spec">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodReadinessGateV1">
            <summary>
                PodReadinessGate contains the reference to a pod condition
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodReadinessGateV1.ConditionType">
            <summary>
                ConditionType refers to a condition in the pod's condition list with matching type.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodSecurityContextV1">
            <summary>
                PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.FsGroup">
            <summary>
                A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
                
                1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
                
                If unset, the Kubelet will not modify the ownership and permissions of any volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.RunAsGroup">
            <summary>
                The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.RunAsUser">
            <summary>
                The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.SeLinuxOptions">
            <summary>
                The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.SupplementalGroups">
            <summary>
                A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityContextV1.ShouldSerializeSupplementalGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityContextV1.SupplementalGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.Sysctls">
            <summary>
                Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityContextV1.ShouldSerializeSysctls">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityContextV1.Sysctls"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityContextV1.RunAsNonRoot">
            <summary>
                Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodSecurityPolicyListV1Beta1">
            <summary>
                PodSecurityPolicyList is a list of PodSecurityPolicy objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicyListV1Beta1.Items">
            <summary>
                items is a list of schema objects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodSecurityPolicySpecV1Beta1">
            <summary>
                PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.HostIPC">
            <summary>
                hostIPC determines if the policy allows the use of HostIPC in the pod spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.HostPID">
            <summary>
                hostPID determines if the policy allows the use of HostPID in the pod spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.Privileged">
            <summary>
                privileged determines if a pod can request to be run as privileged.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.HostNetwork">
            <summary>
                hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ReadOnlyRootFilesystem">
            <summary>
                readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowPrivilegeEscalation">
            <summary>
                allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.DefaultAllowPrivilegeEscalation">
            <summary>
                defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.FsGroup">
            <summary>
                fsGroup is the strategy that will dictate what fs group is used by the SecurityContext.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.RunAsUser">
            <summary>
                runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedCapabilities">
            <summary>
                allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeAllowedCapabilities">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedCapabilities"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedFlexVolumes">
            <summary>
                allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the "volumes" field.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeAllowedFlexVolumes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedFlexVolumes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedHostPaths">
            <summary>
                allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeAllowedHostPaths">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedHostPaths"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedUnsafeSysctls">
            <summary>
                allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
                
                Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeAllowedUnsafeSysctls">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.AllowedUnsafeSysctls"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.DefaultAddCapabilities">
            <summary>
                defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeDefaultAddCapabilities">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.DefaultAddCapabilities"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ForbiddenSysctls">
            <summary>
                forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
                
                Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeForbiddenSysctls">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ForbiddenSysctls"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.HostPorts">
            <summary>
                hostPorts determines which host port ranges are allowed to be exposed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeHostPorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.HostPorts"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.RequiredDropCapabilities">
            <summary>
                requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeRequiredDropCapabilities">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.RequiredDropCapabilities"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.SupplementalGroups">
            <summary>
                supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.Volumes">
            <summary>
                volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSecurityPolicySpecV1Beta1.ShouldSerializeVolumes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.Volumes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicySpecV1Beta1.SeLinux">
            <summary>
                seLinux is the strategy that will dictate the allowable labels that may be set.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodSecurityPolicyV1Beta1">
            <summary>
                PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSecurityPolicyV1Beta1.Spec">
            <summary>
                spec defines the policy enforced.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodsMetricSourceV2Beta1">
            <summary>
                PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodsMetricSourceV2Beta1.MetricName">
            <summary>
                metricName is the name of the metric in question
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodsMetricSourceV2Beta1.TargetAverageValue">
            <summary>
                targetAverageValue is the target value of the average of the metric across all relevant pods (as a quantity)
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodsMetricStatusV2Beta1">
            <summary>
                PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodsMetricStatusV2Beta1.CurrentAverageValue">
            <summary>
                currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodsMetricStatusV2Beta1.MetricName">
            <summary>
                metricName is the name of the metric in question
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodSpecV1">
            <summary>
                PodSpec is a description of a pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.HostIPC">
            <summary>
                Use the host's ipc namespace. Optional: Default to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.HostPID">
            <summary>
                Use the host's pid namespace. Optional: Default to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Hostname">
            <summary>
                Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.NodeName">
            <summary>
                NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.PriorityClassName">
            <summary>
                If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.SchedulerName">
            <summary>
                If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ServiceAccountName">
            <summary>
                ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ShareProcessNamespace">
            <summary>
                Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is alpha-level and is honored only by servers that enable the PodShareProcessNamespace feature.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.DnsConfig">
            <summary>
                Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.HostNetwork">
            <summary>
                Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.AutomountServiceAccountToken">
            <summary>
                AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Subdomain">
            <summary>
                If specified, the fully qualified Pod hostname will be "&lt;hostname&gt;.&lt;subdomain&gt;.&lt;pod namespace&gt;.svc.&lt;cluster domain&gt;". If not specified, the pod will not have a domainname at all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.NodeSelector">
            <summary>
                NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeNodeSelector">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.NodeSelector"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ActiveDeadlineSeconds">
            <summary>
                Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Containers">
            <summary>
                List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.HostAliases">
            <summary>
                HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeHostAliases">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.HostAliases"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ImagePullSecrets">
            <summary>
                ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeImagePullSecrets">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.ImagePullSecrets"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.InitContainers">
            <summary>
                List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeInitContainers">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.InitContainers"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ReadinessGates">
            <summary>
                If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeReadinessGates">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.ReadinessGates"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.TerminationGracePeriodSeconds">
            <summary>
                Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Tolerations">
            <summary>
                If specified, the pod's tolerations.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeTolerations">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.Tolerations"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Volumes">
            <summary>
                List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodSpecV1.ShouldSerializeVolumes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodSpecV1.Volumes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.SecurityContext">
            <summary>
                SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.ServiceAccount">
            <summary>
                DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Affinity">
            <summary>
                If specified, the pod's scheduling constraints
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.DnsPolicy">
            <summary>
                Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.Priority">
            <summary>
                The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodSpecV1.RestartPolicy">
            <summary>
                Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodStatusV1">
            <summary>
                PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.HostIP">
            <summary>
                IP address of the host to which the pod is assigned. Empty if not yet scheduled.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.PodIP">
            <summary>
                IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.Message">
            <summary>
                A human readable message indicating details about why the pod is in this condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.NominatedNodeName">
            <summary>
                nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.Phase">
            <summary>
                The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:
                
                Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.
                
                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.StartTime">
            <summary>
                RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.Reason">
            <summary>
                A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.Conditions">
            <summary>
                Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.ContainerStatuses">
            <summary>
                The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodStatusV1.ShouldSerializeContainerStatuses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodStatusV1.ContainerStatuses"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.InitContainerStatuses">
            <summary>
                The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
            </summary>
        </member>
        <member name="M:KubeClient.Models.PodStatusV1.ShouldSerializeInitContainerStatuses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PodStatusV1.InitContainerStatuses"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodStatusV1.QosClass">
            <summary>
                The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodTemplateListV1">
            <summary>
                PodTemplateList is a list of PodTemplates.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodTemplateListV1.Items">
            <summary>
                List of pod templates
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodTemplateSpecV1">
            <summary>
                PodTemplateSpec describes the data a pod should have when created from a template
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodTemplateSpecV1.Metadata">
            <summary>
                Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodTemplateSpecV1.Spec">
            <summary>
                Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodTemplateV1">
            <summary>
                PodTemplate describes a template for creating copies of a predefined pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodTemplateV1.Template">
            <summary>
                Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.PodV1">
            <summary>
                Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodV1.Spec">
            <summary>
                Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.PodV1.Status">
            <summary>
                Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.PolicyRuleV1">
            <summary>
                PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1.ApiGroups">
            <summary>
                APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1.NonResourceURLs">
            <summary>
                NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1.ShouldSerializeNonResourceURLs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1.NonResourceURLs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1.ResourceNames">
            <summary>
                ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1.ShouldSerializeResourceNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1.ResourceNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1.Verbs">
            <summary>
                Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PolicyRuleV1Alpha1">
            <summary>
                PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Alpha1.ApiGroups">
            <summary>
                APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Alpha1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Alpha1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Alpha1.NonResourceURLs">
            <summary>
                NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different. Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Alpha1.ShouldSerializeNonResourceURLs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Alpha1.NonResourceURLs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Alpha1.ResourceNames">
            <summary>
                ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Alpha1.ShouldSerializeResourceNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Alpha1.ResourceNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Alpha1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Alpha1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Alpha1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Alpha1.Verbs">
            <summary>
                Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PolicyRuleV1Beta1">
            <summary>
                PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Beta1.ApiGroups">
            <summary>
                APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Beta1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Beta1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Beta1.NonResourceURLs">
            <summary>
                NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Beta1.ShouldSerializeNonResourceURLs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Beta1.NonResourceURLs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Beta1.ResourceNames">
            <summary>
                ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Beta1.ShouldSerializeResourceNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Beta1.ResourceNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Beta1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PolicyRuleV1Beta1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.PolicyRuleV1Beta1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PolicyRuleV1Beta1.Verbs">
            <summary>
                Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PortworxVolumeSourceV1">
            <summary>
                PortworxVolumeSource represents a Portworx volume resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PortworxVolumeSourceV1.VolumeID">
            <summary>
                VolumeID uniquely identifies a Portworx volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.PortworxVolumeSourceV1.FsType">
            <summary>
                FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PortworxVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PreconditionsV1">
            <summary>
                Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PreconditionsV1.Uid">
            <summary>
                Specifies the target UID.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PreferredSchedulingTermV1">
            <summary>
                An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
            </summary>
        </member>
        <member name="P:KubeClient.Models.PreferredSchedulingTermV1.Preference">
            <summary>
                A node selector term, associated with the corresponding weight.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PreferredSchedulingTermV1.Weight">
            <summary>
                Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PriorityClassListV1Alpha1">
            <summary>
                PriorityClassList is a collection of priority classes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassListV1Alpha1.Items">
            <summary>
                items is the list of PriorityClasses
            </summary>
        </member>
        <member name="T:KubeClient.Models.PriorityClassListV1Beta1">
            <summary>
                PriorityClassList is a collection of priority classes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassListV1Beta1.Items">
            <summary>
                items is the list of PriorityClasses
            </summary>
        </member>
        <member name="T:KubeClient.Models.PriorityClassV1Alpha1">
            <summary>
                PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Alpha1.Value">
            <summary>
                The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Alpha1.Description">
            <summary>
                description is an arbitrary string that usually provides guidelines on when this priority class should be used.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Alpha1.GlobalDefault">
            <summary>
                globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PriorityClassV1Beta1">
            <summary>
                PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Beta1.Value">
            <summary>
                The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Beta1.Description">
            <summary>
                description is an arbitrary string that usually provides guidelines on when this priority class should be used.
            </summary>
        </member>
        <member name="P:KubeClient.Models.PriorityClassV1Beta1.GlobalDefault">
            <summary>
                globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ProbeV1">
            <summary>
                Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.Exec">
            <summary>
                One and only one of the following should be specified. Exec specifies the action to take.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.FailureThreshold">
            <summary>
                Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.SuccessThreshold">
            <summary>
                Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.InitialDelaySeconds">
            <summary>
                Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.PeriodSeconds">
            <summary>
                How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.TimeoutSeconds">
            <summary>
                Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.HttpGet">
            <summary>
                HTTPGet specifies the http request to perform.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProbeV1.TcpSocket">
            <summary>
                TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
            </summary>
        </member>
        <member name="T:KubeClient.Models.ProjectedVolumeSourceV1">
            <summary>
                Represents a projected volume source
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProjectedVolumeSourceV1.DefaultMode">
            <summary>
                Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ProjectedVolumeSourceV1.Sources">
            <summary>
                list of volume projections
            </summary>
        </member>
        <member name="T:KubeClient.Models.QuobyteVolumeSourceV1">
            <summary>
                Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.QuobyteVolumeSourceV1.Volume">
            <summary>
                Volume is a string that references an already created Quobyte volume by name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.QuobyteVolumeSourceV1.Group">
            <summary>
                Group to map volume access to Default is no group
            </summary>
        </member>
        <member name="P:KubeClient.Models.QuobyteVolumeSourceV1.User">
            <summary>
                User to map volume access to Defaults to serivceaccount user
            </summary>
        </member>
        <member name="P:KubeClient.Models.QuobyteVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.QuobyteVolumeSourceV1.Registry">
            <summary>
                Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
            </summary>
        </member>
        <member name="T:KubeClient.Models.RawExtensionRuntime">
            <summary>
                RawExtension is used to hold extensions in external versions.
                
                To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
                
                // Internal package: type MyAPIObject struct {
                	runtime.TypeMeta `json:",inline"`
                	MyPlugin runtime.Object `json:"myPlugin"`
                } type PluginA struct {
                	AOption string `json:"aOption"`
                }
                
                // External package: type MyAPIObject struct {
                	runtime.TypeMeta `json:",inline"`
                	MyPlugin runtime.RawExtension `json:"myPlugin"`
                } type PluginA struct {
                	AOption string `json:"aOption"`
                }
                
                // On the wire, the JSON will look something like this: {
                	"kind":"MyAPIObject",
                	"apiVersion":"v1",
                	"myPlugin": {
                		"kind":"PluginA",
                		"aOption":"foo",
                	},
                }
                
                So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
            </summary>
        </member>
        <member name="P:KubeClient.Models.RawExtensionRuntime.Raw">
            <summary>
                Raw is the underlying serialization of this object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RBDPersistentVolumeSourceV1">
            <summary>
                Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.Image">
            <summary>
                The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.SecretRef">
            <summary>
                SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.Keyring">
            <summary>
                Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.Pool">
            <summary>
                The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.User">
            <summary>
                The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.Monitors">
            <summary>
                A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDPersistentVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="T:KubeClient.Models.RBDVolumeSourceV1">
            <summary>
                Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.FsType">
            <summary>
                Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.Image">
            <summary>
                The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.SecretRef">
            <summary>
                SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.Keyring">
            <summary>
                Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.Pool">
            <summary>
                The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.User">
            <summary>
                The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.Monitors">
            <summary>
                A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="P:KubeClient.Models.RBDVolumeSourceV1.ReadOnly">
            <summary>
                ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetConditionV1">
            <summary>
                ReplicaSetCondition describes the state of a replica set at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1.LastTransitionTime">
            <summary>
                The last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1.Type">
            <summary>
                Type of replica set condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetConditionV1Beta1">
            <summary>
                ReplicaSetCondition describes the state of a replica set at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta1.LastTransitionTime">
            <summary>
                The last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta1.Type">
            <summary>
                Type of replica set condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetConditionV1Beta2">
            <summary>
                ReplicaSetCondition describes the state of a replica set at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta2.LastTransitionTime">
            <summary>
                The last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta2.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta2.Type">
            <summary>
                Type of replica set condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta2.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetConditionV1Beta2.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetListV1">
            <summary>
                ReplicaSetList is a collection of ReplicaSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetListV1.Items">
            <summary>
                List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetListV1Beta2">
            <summary>
                ReplicaSetList is a collection of ReplicaSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetListV1Beta2.Items">
            <summary>
                List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetSpecV1">
            <summary>
                ReplicaSetSpec is the specification of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1.Template">
            <summary>
                Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1.Selector">
            <summary>
                Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1.Replicas">
            <summary>
                Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetSpecV1Beta1">
            <summary>
                ReplicaSetSpec is the specification of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta1.Template">
            <summary>
                Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta1.Selector">
            <summary>
                Selector is a label query over pods that should match the replica count. If the selector is empty, it is defaulted to the labels present on the pod template. Label keys and values that must match in order to be controlled by this replica set. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta1.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta1.Replicas">
            <summary>
                Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetSpecV1Beta2">
            <summary>
                ReplicaSetSpec is the specification of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta2.Template">
            <summary>
                Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta2.Selector">
            <summary>
                Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta2.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetSpecV1Beta2.Replicas">
            <summary>
                Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetStatusV1">
            <summary>
                ReplicaSetStatus represents the current status of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.ObservedGeneration">
            <summary>
                ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.AvailableReplicas">
            <summary>
                The number of available replicas (ready for at least minReadySeconds) for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.Conditions">
            <summary>
                Represents the latest available observations of a replica set's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ReplicaSetStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ReplicaSetStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.FullyLabeledReplicas">
            <summary>
                The number of pods that have labels matching the labels of the pod template of the replicaset.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.ReadyReplicas">
            <summary>
                The number of ready replicas for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1.Replicas">
            <summary>
                Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetStatusV1Beta1">
            <summary>
                ReplicaSetStatus represents the current status of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.ObservedGeneration">
            <summary>
                ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.AvailableReplicas">
            <summary>
                The number of available replicas (ready for at least minReadySeconds) for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.Conditions">
            <summary>
                Represents the latest available observations of a replica set's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ReplicaSetStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ReplicaSetStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.FullyLabeledReplicas">
            <summary>
                The number of pods that have labels matching the labels of the pod template of the replicaset.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.ReadyReplicas">
            <summary>
                The number of ready replicas for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta1.Replicas">
            <summary>
                Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetStatusV1Beta2">
            <summary>
                ReplicaSetStatus represents the current status of a ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.ObservedGeneration">
            <summary>
                ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.AvailableReplicas">
            <summary>
                The number of available replicas (ready for at least minReadySeconds) for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.Conditions">
            <summary>
                Represents the latest available observations of a replica set's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ReplicaSetStatusV1Beta2.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ReplicaSetStatusV1Beta2.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.FullyLabeledReplicas">
            <summary>
                The number of pods that have labels matching the labels of the pod template of the replicaset.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.ReadyReplicas">
            <summary>
                The number of ready replicas for this replica set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetStatusV1Beta2.Replicas">
            <summary>
                Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetV1">
            <summary>
                ReplicaSet ensures that a specified number of pod replicas are running at any given time.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetV1.Spec">
            <summary>
                Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetV1.Status">
            <summary>
                Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicaSetV1Beta2">
            <summary>
                DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetV1Beta2.Spec">
            <summary>
                Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicaSetV1Beta2.Status">
            <summary>
                Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicationControllerConditionV1">
            <summary>
                ReplicationControllerCondition describes the state of a replication controller at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerConditionV1.LastTransitionTime">
            <summary>
                The last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerConditionV1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerConditionV1.Type">
            <summary>
                Type of replication controller condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerConditionV1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicationControllerListV1">
            <summary>
                ReplicationControllerList is a collection of replication controllers.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerListV1.Items">
            <summary>
                List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicationControllerSpecV1">
            <summary>
                ReplicationControllerSpec is the specification of a replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerSpecV1.Template">
            <summary>
                Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerSpecV1.Selector">
            <summary>
                Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="M:KubeClient.Models.ReplicationControllerSpecV1.ShouldSerializeSelector">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ReplicationControllerSpecV1.Selector"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerSpecV1.MinReadySeconds">
            <summary>
                Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerSpecV1.Replicas">
            <summary>
                Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicationControllerStatusV1">
            <summary>
                ReplicationControllerStatus represents the current status of a replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.ObservedGeneration">
            <summary>
                ObservedGeneration reflects the generation of the most recently observed replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.AvailableReplicas">
            <summary>
                The number of available replicas (ready for at least minReadySeconds) for this replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.Conditions">
            <summary>
                Represents the latest available observations of a replication controller's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ReplicationControllerStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ReplicationControllerStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.FullyLabeledReplicas">
            <summary>
                The number of pods that have labels matching the labels of the pod template of the replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.ReadyReplicas">
            <summary>
                The number of ready replicas for this replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerStatusV1.Replicas">
            <summary>
                Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
            </summary>
        </member>
        <member name="T:KubeClient.Models.ReplicationControllerV1">
            <summary>
                ReplicationController represents the configuration of a replication controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerV1.Spec">
            <summary>
                Spec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.ReplicationControllerV1.Status">
            <summary>
                Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceAttributesV1">
            <summary>
                ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Verb">
            <summary>
                Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Name">
            <summary>
                Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Namespace">
            <summary>
                Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Resource">
            <summary>
                Resource is one of the existing resource types.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Subresource">
            <summary>
                Subresource is one of the existing resource types.  "" means none.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Version">
            <summary>
                Version is the API Version of the Resource.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1.Group">
            <summary>
                Group is the API Group of the Resource.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceAttributesV1Beta1">
            <summary>
                ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Verb">
            <summary>
                Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Name">
            <summary>
                Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Namespace">
            <summary>
                Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Resource">
            <summary>
                Resource is one of the existing resource types.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Subresource">
            <summary>
                Subresource is one of the existing resource types.  "" means none.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Version">
            <summary>
                Version is the API Version of the Resource.  "*" means all.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceAttributesV1Beta1.Group">
            <summary>
                Group is the API Group of the Resource.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceFieldSelectorV1">
            <summary>
                ResourceFieldSelector represents container resources (cpu, memory) and their output format
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceFieldSelectorV1.ContainerName">
            <summary>
                Container name: required for volumes, optional for env vars
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceFieldSelectorV1.Resource">
            <summary>
                Required: resource to select
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceFieldSelectorV1.Divisor">
            <summary>
                Specifies the output format of the exposed resources, defaults to "1"
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceMetricSourceV2Beta1">
            <summary>
                ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricSourceV2Beta1.Name">
            <summary>
                name is the name of the resource in question.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricSourceV2Beta1.TargetAverageValue">
            <summary>
                targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricSourceV2Beta1.TargetAverageUtilization">
            <summary>
                targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceMetricStatusV2Beta1">
            <summary>
                ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricStatusV2Beta1.CurrentAverageValue">
            <summary>
                currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type. It will always be set, regardless of the corresponding metric specification.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricStatusV2Beta1.Name">
            <summary>
                name is the name of the resource in question.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceMetricStatusV2Beta1.CurrentAverageUtilization">
            <summary>
                currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceQuotaListV1">
            <summary>
                ResourceQuotaList is a list of ResourceQuota items.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaListV1.Items">
            <summary>
                Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceQuotaSpecV1">
            <summary>
                ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaSpecV1.Hard">
            <summary>
                hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceQuotaSpecV1.ShouldSerializeHard">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceQuotaSpecV1.Hard"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaSpecV1.ScopeSelector">
            <summary>
                scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaSpecV1.Scopes">
            <summary>
                A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceQuotaSpecV1.ShouldSerializeScopes">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceQuotaSpecV1.Scopes"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceQuotaStatusV1">
            <summary>
                ResourceQuotaStatus defines the enforced hard limits and observed use.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaStatusV1.Hard">
            <summary>
                Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceQuotaStatusV1.ShouldSerializeHard">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceQuotaStatusV1.Hard"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaStatusV1.Used">
            <summary>
                Used is the current observed total usage of the resource in the namespace.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceQuotaStatusV1.ShouldSerializeUsed">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceQuotaStatusV1.Used"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceQuotaV1">
            <summary>
                ResourceQuota sets aggregate quota restrictions enforced per namespace
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaV1.Spec">
            <summary>
                Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceQuotaV1.Status">
            <summary>
                Status defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceRequirementsV1">
            <summary>
                ResourceRequirements describes the compute resource requirements.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRequirementsV1.Limits">
            <summary>
                Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRequirementsV1.ShouldSerializeLimits">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRequirementsV1.Limits"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRequirementsV1.Requests">
            <summary>
                Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRequirementsV1.ShouldSerializeRequests">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRequirementsV1.Requests"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceRuleV1">
            <summary>
                ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1.ApiGroups">
            <summary>
                APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1.ResourceNames">
            <summary>
                ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1.ShouldSerializeResourceNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1.ResourceNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
                 "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1.Verbs">
            <summary>
                Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceRuleV1Beta1">
            <summary>
                ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1Beta1.ApiGroups">
            <summary>
                APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1Beta1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1Beta1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1Beta1.ResourceNames">
            <summary>
                ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1Beta1.ShouldSerializeResourceNames">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1Beta1.ResourceNames"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1Beta1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
                 "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ResourceRuleV1Beta1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ResourceRuleV1Beta1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceRuleV1Beta1.Verbs">
            <summary>
                Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingListV1">
            <summary>
                RoleBindingList is a collection of RoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingListV1.Items">
            <summary>
                Items is a list of RoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingListV1Alpha1">
            <summary>
                RoleBindingList is a collection of RoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingListV1Alpha1.Items">
            <summary>
                Items is a list of RoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingListV1Beta1">
            <summary>
                RoleBindingList is a collection of RoleBindings
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingListV1Beta1.Items">
            <summary>
                Items is a list of RoleBindings
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingV1">
            <summary>
                RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1.RoleRef">
            <summary>
                RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RoleBindingV1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RoleBindingV1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingV1Alpha1">
            <summary>
                RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1Alpha1.RoleRef">
            <summary>
                RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1Alpha1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RoleBindingV1Alpha1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RoleBindingV1Alpha1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleBindingV1Beta1">
            <summary>
                RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1Beta1.RoleRef">
            <summary>
                RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleBindingV1Beta1.Subjects">
            <summary>
                Subjects holds references to the objects the role applies to.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RoleBindingV1Beta1.ShouldSerializeSubjects">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RoleBindingV1Beta1.Subjects"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleListV1">
            <summary>
                RoleList is a collection of Roles
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleListV1.Items">
            <summary>
                Items is a list of Roles
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleListV1Alpha1">
            <summary>
                RoleList is a collection of Roles
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleListV1Alpha1.Items">
            <summary>
                Items is a list of Roles
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleListV1Beta1">
            <summary>
                RoleList is a collection of Roles
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleListV1Beta1.Items">
            <summary>
                Items is a list of Roles
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleRefV1">
            <summary>
                RoleRef contains information that points to the role being used
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1.Kind">
            <summary>
                Kind is the type of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1.Name">
            <summary>
                Name is the name of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1.ApiGroup">
            <summary>
                APIGroup is the group for the resource being referenced
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleRefV1Alpha1">
            <summary>
                RoleRef contains information that points to the role being used
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Alpha1.Kind">
            <summary>
                Kind is the type of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Alpha1.Name">
            <summary>
                Name is the name of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Alpha1.ApiGroup">
            <summary>
                APIGroup is the group for the resource being referenced
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleRefV1Beta1">
            <summary>
                RoleRef contains information that points to the role being used
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Beta1.Kind">
            <summary>
                Kind is the type of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Beta1.Name">
            <summary>
                Name is the name of resource being referenced
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleRefV1Beta1.ApiGroup">
            <summary>
                APIGroup is the group for the resource being referenced
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleV1">
            <summary>
                Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleV1.Rules">
            <summary>
                Rules holds all the PolicyRules for this Role
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleV1Alpha1">
            <summary>
                Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleV1Alpha1.Rules">
            <summary>
                Rules holds all the PolicyRules for this Role
            </summary>
        </member>
        <member name="T:KubeClient.Models.RoleV1Beta1">
            <summary>
                Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RoleV1Beta1.Rules">
            <summary>
                Rules holds all the PolicyRules for this Role
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollbackConfigV1Beta1">
            <summary>
                DEPRECATED.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollbackConfigV1Beta1.Revision">
            <summary>
                The revision to rollback to. If set to 0, rollback to the last revision.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDaemonSetV1">
            <summary>
                Spec to control the desired behavior of daemon set rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDaemonSetV1.MaxUnavailable">
            <summary>
                The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDaemonSetV1Beta1">
            <summary>
                Spec to control the desired behavior of daemon set rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDaemonSetV1Beta1.MaxUnavailable">
            <summary>
                The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDaemonSetV1Beta2">
            <summary>
                Spec to control the desired behavior of daemon set rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDaemonSetV1Beta2.MaxUnavailable">
            <summary>
                The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDeploymentV1">
            <summary>
                Spec to control the desired behavior of rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1.MaxSurge">
            <summary>
                The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1.MaxUnavailable">
            <summary>
                The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDeploymentV1Beta1">
            <summary>
                Spec to control the desired behavior of rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1Beta1.MaxSurge">
            <summary>
                The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1Beta1.MaxUnavailable">
            <summary>
                The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateDeploymentV1Beta2">
            <summary>
                Spec to control the desired behavior of rolling update.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1Beta2.MaxSurge">
            <summary>
                The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateDeploymentV1Beta2.MaxUnavailable">
            <summary>
                The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateStatefulSetStrategyV1">
            <summary>
                RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateStatefulSetStrategyV1.Partition">
            <summary>
                Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateStatefulSetStrategyV1Beta1">
            <summary>
                RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateStatefulSetStrategyV1Beta1.Partition">
            <summary>
                Partition indicates the ordinal at which the StatefulSet should be partitioned.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RollingUpdateStatefulSetStrategyV1Beta2">
            <summary>
                RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RollingUpdateStatefulSetStrategyV1Beta2.Partition">
            <summary>
                Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RuleV1Alpha1">
            <summary>
                Rule is a tuple of APIGroups, APIVersion, and Resources.It is recommended to make sure that all the tuple expansions are valid.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleV1Alpha1.ApiGroups">
            <summary>
                APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleV1Alpha1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleV1Alpha1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleV1Alpha1.ApiVersions">
            <summary>
                APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleV1Alpha1.ShouldSerializeApiVersions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleV1Alpha1.ApiVersions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleV1Alpha1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.
                
                For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
                
                If wildcard is present, the validation rule will ensure resources do not overlap with each other.
                
                Depending on the enclosing object, subresources might not be allowed. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleV1Alpha1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleV1Alpha1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RuleWithOperationsV1Beta1">
            <summary>
                RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleWithOperationsV1Beta1.ApiGroups">
            <summary>
                APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleWithOperationsV1Beta1.ShouldSerializeApiGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleWithOperationsV1Beta1.ApiGroups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleWithOperationsV1Beta1.ApiVersions">
            <summary>
                APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleWithOperationsV1Beta1.ShouldSerializeApiVersions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleWithOperationsV1Beta1.ApiVersions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleWithOperationsV1Beta1.Operations">
            <summary>
                Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleWithOperationsV1Beta1.ShouldSerializeOperations">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleWithOperationsV1Beta1.Operations"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RuleWithOperationsV1Beta1.Resources">
            <summary>
                Resources is a list of resources this rule applies to.
                
                For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
                
                If wildcard is present, the validation rule will ensure resources do not overlap with each other.
                
                Depending on the enclosing object, subresources might not be allowed. Required.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RuleWithOperationsV1Beta1.ShouldSerializeResources">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RuleWithOperationsV1Beta1.Resources"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RunAsUserStrategyOptionsV1Beta1">
            <summary>
                RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use RunAsUserStrategyOptions from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RunAsUserStrategyOptionsV1Beta1.Rule">
            <summary>
                rule is the strategy that will dictate the allowable RunAsUser values that may be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.RunAsUserStrategyOptionsV1Beta1.Ranges">
            <summary>
                ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RunAsUserStrategyOptionsV1Beta1.ShouldSerializeRanges">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.RunAsUserStrategyOptionsV1Beta1.Ranges"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleIOPersistentVolumeSourceV1">
            <summary>
                ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.SslEnabled">
            <summary>
                Flag to enable/disable SSL communication with Gateway, default false
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.StorageMode">
            <summary>
                Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.VolumeName">
            <summary>
                The name of a volume already created in the ScaleIO system that is associated with this volume source.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.SecretRef">
            <summary>
                SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.StoragePool">
            <summary>
                The ScaleIO Storage Pool associated with the protection domain.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.System">
            <summary>
                The name of the storage system as configured in ScaleIO.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.ProtectionDomain">
            <summary>
                The name of the ScaleIO Protection Domain for the configured storage.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.Gateway">
            <summary>
                The host address of the ScaleIO API Gateway.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleIOVolumeSourceV1">
            <summary>
                ScaleIOVolumeSource represents a persistent ScaleIO volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.SslEnabled">
            <summary>
                Flag to enable/disable SSL communication with Gateway, default false
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.StorageMode">
            <summary>
                Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.VolumeName">
            <summary>
                The name of a volume already created in the ScaleIO system that is associated with this volume source.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.SecretRef">
            <summary>
                SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.StoragePool">
            <summary>
                The ScaleIO Storage Pool associated with the protection domain.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.System">
            <summary>
                The name of the storage system as configured in ScaleIO.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.ProtectionDomain">
            <summary>
                The name of the ScaleIO Protection Domain for the configured storage.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.Gateway">
            <summary>
                The host address of the ScaleIO API Gateway.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleIOVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleSpecV1">
            <summary>
                ScaleSpec describes the attributes of a scale subresource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleSpecV1.Replicas">
            <summary>
                desired number of instances for the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleSpecV1Beta1">
            <summary>
                describes the attributes of a scale subresource
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleSpecV1Beta1.Replicas">
            <summary>
                desired number of instances for the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleSpecV1Beta2">
            <summary>
                ScaleSpec describes the attributes of a scale subresource
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleSpecV1Beta2.Replicas">
            <summary>
                desired number of instances for the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleStatusV1">
            <summary>
                ScaleStatus represents the current status of a scale subresource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1.Selector">
            <summary>
                label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1.Replicas">
            <summary>
                actual number of observed instances of the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleStatusV1Beta1">
            <summary>
                represents the current status of a scale subresource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta1.Selector">
            <summary>
                label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors
            </summary>
        </member>
        <member name="M:KubeClient.Models.ScaleStatusV1Beta1.ShouldSerializeSelector">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ScaleStatusV1Beta1.Selector"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta1.TargetSelector">
            <summary>
                label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta1.Replicas">
            <summary>
                actual number of observed instances of the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleStatusV1Beta2">
            <summary>
                ScaleStatus represents the current status of a scale subresource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta2.Selector">
            <summary>
                label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors
            </summary>
        </member>
        <member name="M:KubeClient.Models.ScaleStatusV1Beta2.ShouldSerializeSelector">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ScaleStatusV1Beta2.Selector"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta2.TargetSelector">
            <summary>
                label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleStatusV1Beta2.Replicas">
            <summary>
                actual number of observed instances of the scaled object.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleV1">
            <summary>
                Scale represents a scaling request for a resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1.Spec">
            <summary>
                defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1.Status">
            <summary>
                current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleV1Beta1">
            <summary>
                Scale represents a scaling request for a resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1Beta1.Spec">
            <summary>
                defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1Beta1.Status">
            <summary>
                current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScaleV1Beta2">
            <summary>
                Scale represents a scaling request for a resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1Beta2.Spec">
            <summary>
                defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScaleV1Beta2.Status">
            <summary>
                current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScopedResourceSelectorRequirementV1">
            <summary>
                A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScopedResourceSelectorRequirementV1.ScopeName">
            <summary>
                The name of the scope that the selector applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScopedResourceSelectorRequirementV1.Operator">
            <summary>
                Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScopedResourceSelectorRequirementV1.Values">
            <summary>
                An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ScopedResourceSelectorRequirementV1.ShouldSerializeValues">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ScopedResourceSelectorRequirementV1.Values"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ScopeSelectorV1">
            <summary>
                A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ScopeSelectorV1.MatchExpressions">
            <summary>
                A list of scope selector requirements by scope of the resources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ScopeSelectorV1.ShouldSerializeMatchExpressions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ScopeSelectorV1.MatchExpressions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretEnvSourceV1">
            <summary>
                SecretEnvSource selects a Secret to populate the environment variables with.
                
                The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretEnvSourceV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretEnvSourceV1.Optional">
            <summary>
                Specify whether the Secret must be defined
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretKeySelectorV1">
            <summary>
                SecretKeySelector selects a key of a Secret.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretKeySelectorV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretKeySelectorV1.Optional">
            <summary>
                Specify whether the Secret or it's key must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretKeySelectorV1.Key">
            <summary>
                The key of the secret to select from.  Must be a valid secret key.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretListV1">
            <summary>
                SecretList is a list of Secret.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretListV1.Items">
            <summary>
                Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretProjectionV1">
            <summary>
                Adapts a secret into a projected volume.
                
                The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretProjectionV1.Name">
            <summary>
                Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretProjectionV1.Optional">
            <summary>
                Specify whether the Secret or its key must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretProjectionV1.Items">
            <summary>
                If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SecretProjectionV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SecretProjectionV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretReferenceV1">
            <summary>
                SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretReferenceV1.Name">
            <summary>
                Name is unique within a namespace to reference a secret resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretReferenceV1.Namespace">
            <summary>
                Namespace defines the space within which the secret name must be unique.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretV1">
            <summary>
                Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretV1.Data">
            <summary>
                Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
            </summary>
        </member>
        <member name="M:KubeClient.Models.SecretV1.ShouldSerializeData">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SecretV1.Data"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretV1.StringData">
            <summary>
                stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SecretV1.ShouldSerializeStringData">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SecretV1.StringData"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretV1.Type">
            <summary>
                Used to facilitate programmatic handling of secret data.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecretVolumeSourceV1">
            <summary>
                Adapts a Secret into a volume.
                
                The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretVolumeSourceV1.DefaultMode">
            <summary>
                Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretVolumeSourceV1.SecretName">
            <summary>
                Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretVolumeSourceV1.Optional">
            <summary>
                Specify whether the Secret or it's keys must be defined
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecretVolumeSourceV1.Items">
            <summary>
                If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SecretVolumeSourceV1.ShouldSerializeItems">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SecretVolumeSourceV1.Items"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SecurityContextV1">
            <summary>
                SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.Privileged">
            <summary>
                Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.ReadOnlyRootFilesystem">
            <summary>
                Whether this container has a read-only root filesystem. Default is false.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.AllowPrivilegeEscalation">
            <summary>
                AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.RunAsGroup">
            <summary>
                The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.RunAsUser">
            <summary>
                The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.Capabilities">
            <summary>
                The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.SeLinuxOptions">
            <summary>
                The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SecurityContextV1.RunAsNonRoot">
            <summary>
                Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectAccessReviewSpecV1">
            <summary>
                SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewSpecV1.NonResourceAttributes">
            <summary>
                NonResourceAttributes describes information for a non-resource access request
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewSpecV1.ResourceAttributes">
            <summary>
                ResourceAuthorizationAttributes describes information for a resource access request
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectAccessReviewSpecV1Beta1">
            <summary>
                SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewSpecV1Beta1.NonResourceAttributes">
            <summary>
                NonResourceAttributes describes information for a non-resource access request
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewSpecV1Beta1.ResourceAttributes">
            <summary>
                ResourceAuthorizationAttributes describes information for a resource access request
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectAccessReviewV1">
            <summary>
                SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewV1.Spec">
            <summary>
                Spec holds information about the request being evaluated.  user and groups must be empty
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewV1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectAccessReviewV1Beta1">
            <summary>
                SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewV1Beta1.Spec">
            <summary>
                Spec holds information about the request being evaluated.  user and groups must be empty
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectAccessReviewV1Beta1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectRulesReviewSpecV1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewSpecV1.Namespace">
            <summary>
                Namespace to evaluate rules for. Required.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectRulesReviewSpecV1Beta1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewSpecV1Beta1.Namespace">
            <summary>
                Namespace to evaluate rules for. Required.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectRulesReviewV1">
            <summary>
                SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewV1.Spec">
            <summary>
                Spec holds information about the request being evaluated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewV1.Status">
            <summary>
                Status is filled in by the server and indicates the set of actions a user can perform.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SelfSubjectRulesReviewV1Beta1">
            <summary>
                SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewV1Beta1.Spec">
            <summary>
                Spec holds information about the request being evaluated.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SelfSubjectRulesReviewV1Beta1.Status">
            <summary>
                Status is filled in by the server and indicates the set of actions a user can perform.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SELinuxOptionsV1">
            <summary>
                SELinuxOptions are the labels to be applied to the container
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxOptionsV1.Role">
            <summary>
                Role is a SELinux role label that applies to the container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxOptionsV1.Type">
            <summary>
                Type is a SELinux type label that applies to the container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxOptionsV1.Level">
            <summary>
                Level is SELinux level label that applies to the container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxOptionsV1.User">
            <summary>
                User is a SELinux user label that applies to the container.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SELinuxStrategyOptionsV1Beta1">
            <summary>
                SELinuxStrategyOptions defines the strategy type and any options used to create the strategy. Deprecated: use SELinuxStrategyOptions from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxStrategyOptionsV1Beta1.Rule">
            <summary>
                rule is the strategy that will dictate the allowable labels that may be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SELinuxStrategyOptionsV1Beta1.SeLinuxOptions">
            <summary>
                seLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServerAddressByClientCIDRV1">
            <summary>
                ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServerAddressByClientCIDRV1.ClientCIDR">
            <summary>
                The CIDR with which clients can match their IP to figure out the server address that they should use.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServerAddressByClientCIDRV1.ServerAddress">
            <summary>
                Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceAccountListV1">
            <summary>
                ServiceAccountList is a list of ServiceAccount objects
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountListV1.Items">
            <summary>
                List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceAccountTokenProjectionV1">
            <summary>
                ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountTokenProjectionV1.Audience">
            <summary>
                Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountTokenProjectionV1.Path">
            <summary>
                Path is the path relative to the mount point of the file to project the token into.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountTokenProjectionV1.ExpirationSeconds">
            <summary>
                ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceAccountV1">
            <summary>
                ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountV1.AutomountServiceAccountToken">
            <summary>
                AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountV1.ImagePullSecrets">
            <summary>
                ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceAccountV1.ShouldSerializeImagePullSecrets">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceAccountV1.ImagePullSecrets"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceAccountV1.Secrets">
            <summary>
                Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceAccountV1.ShouldSerializeSecrets">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceAccountV1.Secrets"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceListV1">
            <summary>
                ServiceList holds a list of services.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceListV1.Items">
            <summary>
                List of services
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServicePortV1">
            <summary>
                ServicePort contains information on service's port.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServicePortV1.Name">
            <summary>
                The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServicePortV1.Protocol">
            <summary>
                The IP protocol for this port. Supports "TCP" and "UDP". Default is TCP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServicePortV1.NodePort">
            <summary>
                The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServicePortV1.Port">
            <summary>
                The port that will be exposed by this service.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServicePortV1.TargetPort">
            <summary>
                Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceReferenceV1">
            <summary>
                ServiceReference holds a reference to Service.legacy.k8s.io
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceReferenceV1.Name">
            <summary>
                Name is the name of the service
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceReferenceV1.Namespace">
            <summary>
                Namespace is the namespace of the service
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceReferenceV1Beta1">
            <summary>
                ServiceReference holds a reference to Service.legacy.k8s.io
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceReferenceV1Beta1.Name">
            <summary>
                Name is the name of the service
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceReferenceV1Beta1.Namespace">
            <summary>
                Namespace is the namespace of the service
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceSpecV1">
            <summary>
                ServiceSpec describes the attributes that a user creates on a service.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.ClusterIP">
            <summary>
                clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.LoadBalancerIP">
            <summary>
                Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.ExternalName">
            <summary>
                externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.Type">
            <summary>
                type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.SessionAffinityConfig">
            <summary>
                sessionAffinityConfig contains the configurations of session affinity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.Selector">
            <summary>
                Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceSpecV1.ShouldSerializeSelector">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceSpecV1.Selector"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.ExternalIPs">
            <summary>
                externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceSpecV1.ShouldSerializeExternalIPs">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceSpecV1.ExternalIPs"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.LoadBalancerSourceRanges">
            <summary>
                If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceSpecV1.ShouldSerializeLoadBalancerSourceRanges">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceSpecV1.LoadBalancerSourceRanges"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.Ports">
            <summary>
                The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            </summary>
        </member>
        <member name="M:KubeClient.Models.ServiceSpecV1.ShouldSerializePorts">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ServiceSpecV1.Ports"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.PublishNotReadyAddresses">
            <summary>
                publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.HealthCheckNodePort">
            <summary>
                healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.ExternalTrafficPolicy">
            <summary>
                externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceSpecV1.SessionAffinity">
            <summary>
                Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceStatusV1">
            <summary>
                ServiceStatus represents the current status of a service.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceStatusV1.LoadBalancer">
            <summary>
                LoadBalancer contains the current status of the load-balancer, if one is present.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ServiceV1">
            <summary>
                Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceV1.Spec">
            <summary>
                Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="P:KubeClient.Models.ServiceV1.Status">
            <summary>
                Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="T:KubeClient.Models.SessionAffinityConfigV1">
            <summary>
                SessionAffinityConfig represents the configurations of session affinity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SessionAffinityConfigV1.ClientIP">
            <summary>
                clientIP contains the configurations of Client IP based session affinity.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetConditionV1">
            <summary>
                StatefulSetCondition describes the state of a statefulset at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1.Type">
            <summary>
                Type of statefulset condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetConditionV1Beta1">
            <summary>
                StatefulSetCondition describes the state of a statefulset at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta1.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta1.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta1.Type">
            <summary>
                Type of statefulset condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta1.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta1.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetConditionV1Beta2">
            <summary>
                StatefulSetCondition describes the state of a statefulset at a certain point.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta2.LastTransitionTime">
            <summary>
                Last time the condition transitioned from one status to another.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta2.Message">
            <summary>
                A human readable message indicating details about the transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta2.Type">
            <summary>
                Type of statefulset condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta2.Reason">
            <summary>
                The reason for the condition's last transition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetConditionV1Beta2.Status">
            <summary>
                Status of the condition, one of True, False, Unknown.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetListV1">
            <summary>
                StatefulSetList is a collection of StatefulSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetListV1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetListV1Beta1">
            <summary>
                StatefulSetList is a collection of StatefulSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetListV1Beta1.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetListV1Beta2">
            <summary>
                StatefulSetList is a collection of StatefulSets.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetListV1Beta2.Items">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetSpecV1">
            <summary>
                A StatefulSetSpec is the specification of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.ServiceName">
            <summary>
                serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.Template">
            <summary>
                template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.Selector">
            <summary>
                selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.Replicas">
            <summary>
                replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.VolumeClaimTemplates">
            <summary>
                volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetSpecV1.ShouldSerializeVolumeClaimTemplates">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetSpecV1.VolumeClaimTemplates"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.RevisionHistoryLimit">
            <summary>
                revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.PodManagementPolicy">
            <summary>
                podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1.UpdateStrategy">
            <summary>
                updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetSpecV1Beta1">
            <summary>
                A StatefulSetSpec is the specification of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.ServiceName">
            <summary>
                serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.Template">
            <summary>
                template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.Selector">
            <summary>
                selector is a label query over pods that should match the replica count. If empty, defaulted to labels on the pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.Replicas">
            <summary>
                replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.VolumeClaimTemplates">
            <summary>
                volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetSpecV1Beta1.ShouldSerializeVolumeClaimTemplates">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetSpecV1Beta1.VolumeClaimTemplates"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.RevisionHistoryLimit">
            <summary>
                revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.PodManagementPolicy">
            <summary>
                podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta1.UpdateStrategy">
            <summary>
                updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetSpecV1Beta2">
            <summary>
                A StatefulSetSpec is the specification of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.ServiceName">
            <summary>
                serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.Template">
            <summary>
                template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.Selector">
            <summary>
                selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.Replicas">
            <summary>
                replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.VolumeClaimTemplates">
            <summary>
                volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetSpecV1Beta2.ShouldSerializeVolumeClaimTemplates">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetSpecV1Beta2.VolumeClaimTemplates"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.RevisionHistoryLimit">
            <summary>
                revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.PodManagementPolicy">
            <summary>
                podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetSpecV1Beta2.UpdateStrategy">
            <summary>
                updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetStatusV1">
            <summary>
                StatefulSetStatus represents the current state of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.CurrentRevision">
            <summary>
                currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.ObservedGeneration">
            <summary>
                observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.UpdateRevision">
            <summary>
                updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.Conditions">
            <summary>
                Represents the latest available observations of a statefulset's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetStatusV1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetStatusV1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.CurrentReplicas">
            <summary>
                currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.ReadyReplicas">
            <summary>
                readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.Replicas">
            <summary>
                replicas is the number of Pods created by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.UpdatedReplicas">
            <summary>
                updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1.CollisionCount">
            <summary>
                collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetStatusV1Beta1">
            <summary>
                StatefulSetStatus represents the current state of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.CurrentRevision">
            <summary>
                currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.ObservedGeneration">
            <summary>
                observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.UpdateRevision">
            <summary>
                updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.Conditions">
            <summary>
                Represents the latest available observations of a statefulset's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetStatusV1Beta1.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetStatusV1Beta1.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.CurrentReplicas">
            <summary>
                currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.ReadyReplicas">
            <summary>
                readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.Replicas">
            <summary>
                replicas is the number of Pods created by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.UpdatedReplicas">
            <summary>
                updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta1.CollisionCount">
            <summary>
                collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetStatusV1Beta2">
            <summary>
                StatefulSetStatus represents the current state of a StatefulSet.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.CurrentRevision">
            <summary>
                currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.ObservedGeneration">
            <summary>
                observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.UpdateRevision">
            <summary>
                updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.Conditions">
            <summary>
                Represents the latest available observations of a statefulset's current state.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatefulSetStatusV1Beta2.ShouldSerializeConditions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatefulSetStatusV1Beta2.Conditions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.CurrentReplicas">
            <summary>
                currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.ReadyReplicas">
            <summary>
                readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.Replicas">
            <summary>
                replicas is the number of Pods created by the StatefulSet controller.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.UpdatedReplicas">
            <summary>
                updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetStatusV1Beta2.CollisionCount">
            <summary>
                collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetUpdateStrategyV1">
            <summary>
                StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1.RollingUpdate">
            <summary>
                RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1.Type">
            <summary>
                Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetUpdateStrategyV1Beta1">
            <summary>
                StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1Beta1.RollingUpdate">
            <summary>
                RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1Beta1.Type">
            <summary>
                Type indicates the type of the StatefulSetUpdateStrategy.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetUpdateStrategyV1Beta2">
            <summary>
                StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1Beta2.RollingUpdate">
            <summary>
                RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetUpdateStrategyV1Beta2.Type">
            <summary>
                Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetV1">
            <summary>
                StatefulSet represents a set of pods with consistent identities. Identities are defined as:
                 - Network: A single stable DNS and hostname.
                 - Storage: As many VolumeClaims as requested.
                The StatefulSet guarantees that a given network identity will always map to the same storage identity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1.Spec">
            <summary>
                Spec defines the desired identities of pods in this set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1.Status">
            <summary>
                Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetV1Beta1">
            <summary>
                DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
                 - Network: A single stable DNS and hostname.
                 - Storage: As many VolumeClaims as requested.
                The StatefulSet guarantees that a given network identity will always map to the same storage identity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1Beta1.Spec">
            <summary>
                Spec defines the desired identities of pods in this set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1Beta1.Status">
            <summary>
                Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatefulSetV1Beta2">
            <summary>
                DEPRECATED - This group version of StatefulSet is deprecated by apps/v1/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:
                 - Network: A single stable DNS and hostname.
                 - Storage: As many VolumeClaims as requested.
                The StatefulSet guarantees that a given network identity will always map to the same storage identity.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1Beta2.Spec">
            <summary>
                Spec defines the desired identities of pods in this set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatefulSetV1Beta2.Status">
            <summary>
                Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatusCauseV1">
            <summary>
                StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusCauseV1.Field">
            <summary>
                The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
                
                Examples:
                  "name" - the field "name" on the current resource
                  "items[0].name" - the field "name" on the first array entry in "items"
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusCauseV1.Message">
            <summary>
                A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusCauseV1.Reason">
            <summary>
                A machine-readable description of the cause of the error. If this value is empty there is no information available.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatusDetailsV1">
            <summary>
                StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.Kind">
            <summary>
                The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.Uid">
            <summary>
                UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.Name">
            <summary>
                The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.Group">
            <summary>
                The group attribute of the resource associated with the status StatusReason.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.Causes">
            <summary>
                The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatusDetailsV1.ShouldSerializeCauses">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StatusDetailsV1.Causes"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusDetailsV1.RetryAfterSeconds">
            <summary>
                If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StatusV1">
            <summary>
                Status is a return value for calls that don't return other objects.
            </summary>
            <summary>
                Status is a return value for calls that don't return other objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.Code">
            <summary>
                Suggested HTTP return code for this status, 0 if not set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.Message">
            <summary>
                A human-readable description of the status of this operation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.Reason">
            <summary>
                A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.Details">
            <summary>
                Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.Status">
            <summary>
                Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            </summary>
        </member>
        <member name="F:KubeClient.Models.StatusV1.SuccessStatus">
            <summary>
                The <see cref="P:KubeClient.Models.StatusV1.Status"/> value representing success.
            </summary>
        </member>
        <member name="F:KubeClient.Models.StatusV1.FailureStatus">
            <summary>
                The <see cref="P:KubeClient.Models.StatusV1.Status"/> value representing failure.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.IsSuccess">
            <summary>
                Does the <see cref="T:KubeClient.Models.StatusV1"/> represent success?
            </summary>
        </member>
        <member name="P:KubeClient.Models.StatusV1.IsFailure">
            <summary>
                Does the <see cref="T:KubeClient.Models.StatusV1"/> represent failure?
            </summary>
        </member>
        <member name="M:KubeClient.Models.StatusV1.EnumerateItems">
            <summary>
                Enumerate the list's items.
            </summary>
            <returns>
                The list's items.
            </returns>
        </member>
        <member name="M:KubeClient.Models.StatusV1.Success(System.String)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.StatusV1"/> representing success.
            </summary>
            <param name="message">
                The status message.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.StatusV1.Failure(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
                Create a new <see cref="T:KubeClient.Models.StatusV1"/> representing failure.
            </summary>
            <param name="message">
                The status message.
            </param>
            <param name="reason">
                An optional machine-parseable reason code indicating the cause of the failure.
            </param>
            <param name="code">
                An optional HTTP status code representing the cause of the failure.
            </param>
            <returns>
                The configured <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.Models.StorageClassListV1">
            <summary>
                StorageClassList is a collection of storage classes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassListV1.Items">
            <summary>
                Items is the list of StorageClasses
            </summary>
        </member>
        <member name="T:KubeClient.Models.StorageClassListV1Beta1">
            <summary>
                StorageClassList is a collection of storage classes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassListV1Beta1.Items">
            <summary>
                Items is the list of StorageClasses
            </summary>
        </member>
        <member name="T:KubeClient.Models.StorageClassV1">
            <summary>
                StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
                
                StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.VolumeBindingMode">
            <summary>
                VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.AllowVolumeExpansion">
            <summary>
                AllowVolumeExpansion shows whether the storage class allow volume expand
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.Provisioner">
            <summary>
                Provisioner indicates the type of the provisioner.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.AllowedTopologies">
            <summary>
                Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1.ShouldSerializeAllowedTopologies">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1.AllowedTopologies"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.MountOptions">
            <summary>
                Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1.ShouldSerializeMountOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1.MountOptions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.Parameters">
            <summary>
                Parameters holds the parameters for the provisioner that should create volumes of this storage class.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1.ShouldSerializeParameters">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1.Parameters"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1.ReclaimPolicy">
            <summary>
                Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StorageClassV1Beta1">
            <summary>
                StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
                
                StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.VolumeBindingMode">
            <summary>
                VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is alpha-level and is only honored by servers that enable the VolumeScheduling feature.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.AllowVolumeExpansion">
            <summary>
                AllowVolumeExpansion shows whether the storage class allow volume expand
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.Provisioner">
            <summary>
                Provisioner indicates the type of the provisioner.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.AllowedTopologies">
            <summary>
                Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is alpha-level and is only honored by servers that enable the DynamicProvisioningScheduling feature.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1Beta1.ShouldSerializeAllowedTopologies">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1Beta1.AllowedTopologies"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.MountOptions">
            <summary>
                Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1Beta1.ShouldSerializeMountOptions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1Beta1.MountOptions"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.Parameters">
            <summary>
                Parameters holds the parameters for the provisioner that should create volumes of this storage class.
            </summary>
        </member>
        <member name="M:KubeClient.Models.StorageClassV1Beta1.ShouldSerializeParameters">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.StorageClassV1Beta1.Parameters"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageClassV1Beta1.ReclaimPolicy">
            <summary>
                Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StorageOSPersistentVolumeSourceV1">
            <summary>
                Represents a StorageOS persistent volume resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSPersistentVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSPersistentVolumeSourceV1.VolumeName">
            <summary>
                VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSPersistentVolumeSourceV1.VolumeNamespace">
            <summary>
                VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSPersistentVolumeSourceV1.SecretRef">
            <summary>
                SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSPersistentVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.StorageOSVolumeSourceV1">
            <summary>
                Represents a StorageOS persistent volume resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSVolumeSourceV1.VolumeName">
            <summary>
                VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSVolumeSourceV1.VolumeNamespace">
            <summary>
                VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSVolumeSourceV1.SecretRef">
            <summary>
                SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
            </summary>
        </member>
        <member name="P:KubeClient.Models.StorageOSVolumeSourceV1.ReadOnly">
            <summary>
                Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewSpecV1">
            <summary>
                SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.Extra">
            <summary>
                Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SubjectAccessReviewSpecV1.ShouldSerializeExtra">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SubjectAccessReviewSpecV1.Extra"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.Uid">
            <summary>
                UID information about the requesting user.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.User">
            <summary>
                User is the user you're testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.Groups">
            <summary>
                Groups is the groups you're testing for.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SubjectAccessReviewSpecV1.ShouldSerializeGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SubjectAccessReviewSpecV1.Groups"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.NonResourceAttributes">
            <summary>
                NonResourceAttributes describes information for a non-resource access request
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1.ResourceAttributes">
            <summary>
                ResourceAuthorizationAttributes describes information for a resource access request
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewSpecV1Beta1">
            <summary>
                SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.Extra">
            <summary>
                Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.ShouldSerializeExtra">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.Extra"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.Uid">
            <summary>
                UID information about the requesting user.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.Group">
            <summary>
                Groups is the groups you're testing for.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.ShouldSerializeGroup">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.Group"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.User">
            <summary>
                User is the user you're testing for. If you specify "User" but not "Group", then is it interpreted as "What if User were not a member of any groups
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.NonResourceAttributes">
            <summary>
                NonResourceAttributes describes information for a non-resource access request
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewSpecV1Beta1.ResourceAttributes">
            <summary>
                ResourceAuthorizationAttributes describes information for a resource access request
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewStatusV1">
            <summary>
                SubjectAccessReviewStatus
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1.Allowed">
            <summary>
                Allowed is required. True if the action would be allowed, false otherwise.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1.Denied">
            <summary>
                Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1.Reason">
            <summary>
                Reason is optional.  It indicates why a request was allowed or denied.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1.EvaluationError">
            <summary>
                EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewStatusV1Beta1">
            <summary>
                SubjectAccessReviewStatus
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1Beta1.Allowed">
            <summary>
                Allowed is required. True if the action would be allowed, false otherwise.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1Beta1.Denied">
            <summary>
                Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1Beta1.Reason">
            <summary>
                Reason is optional.  It indicates why a request was allowed or denied.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewStatusV1Beta1.EvaluationError">
            <summary>
                EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewV1">
            <summary>
                SubjectAccessReview checks whether or not a user or group can perform an action.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewV1.Spec">
            <summary>
                Spec holds information about the request being evaluated
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewV1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectAccessReviewV1Beta1">
            <summary>
                SubjectAccessReview checks whether or not a user or group can perform an action.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewV1Beta1.Spec">
            <summary>
                Spec holds information about the request being evaluated
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectAccessReviewV1Beta1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request is allowed or not
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectRulesReviewStatusV1">
            <summary>
                SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1.Incomplete">
            <summary>
                Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1.EvaluationError">
            <summary>
                EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1.NonResourceRules">
            <summary>
                NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1.ResourceRules">
            <summary>
                ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectRulesReviewStatusV1Beta1">
            <summary>
                SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1Beta1.Incomplete">
            <summary>
                Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1Beta1.EvaluationError">
            <summary>
                EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1Beta1.NonResourceRules">
            <summary>
                NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectRulesReviewStatusV1Beta1.ResourceRules">
            <summary>
                ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectV1">
            <summary>
                Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1.Kind">
            <summary>
                Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1.Name">
            <summary>
                Name of the object being referenced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1.Namespace">
            <summary>
                Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1.ApiGroup">
            <summary>
                APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectV1Alpha1">
            <summary>
                Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Alpha1.Name">
            <summary>
                Name of the object being referenced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Alpha1.Namespace">
            <summary>
                Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SubjectV1Beta1">
            <summary>
                Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Beta1.Kind">
            <summary>
                Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Beta1.Name">
            <summary>
                Name of the object being referenced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Beta1.Namespace">
            <summary>
                Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SubjectV1Beta1.ApiGroup">
            <summary>
                APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SupplementalGroupsStrategyOptionsV1Beta1">
            <summary>
                SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy. Deprecated: use SupplementalGroupsStrategyOptions from policy API Group instead.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SupplementalGroupsStrategyOptionsV1Beta1.Rule">
            <summary>
                rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.
            </summary>
        </member>
        <member name="P:KubeClient.Models.SupplementalGroupsStrategyOptionsV1Beta1.Ranges">
            <summary>
                ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.
            </summary>
        </member>
        <member name="M:KubeClient.Models.SupplementalGroupsStrategyOptionsV1Beta1.ShouldSerializeRanges">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.SupplementalGroupsStrategyOptionsV1Beta1.Ranges"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.SysctlV1">
            <summary>
                Sysctl defines a kernel parameter to be set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SysctlV1.Name">
            <summary>
                Name of a property to set
            </summary>
        </member>
        <member name="P:KubeClient.Models.SysctlV1.Value">
            <summary>
                Value of a property to set
            </summary>
        </member>
        <member name="T:KubeClient.Models.TaintV1">
            <summary>
                The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TaintV1.TimeAdded">
            <summary>
                TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TaintV1.Value">
            <summary>
                Required. The taint value corresponding to the taint key.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TaintV1.Effect">
            <summary>
                Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TaintV1.Key">
            <summary>
                Required. The taint key to be applied to a node.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TCPSocketActionV1">
            <summary>
                TCPSocketAction describes an action based on opening a socket
            </summary>
        </member>
        <member name="P:KubeClient.Models.TCPSocketActionV1.Host">
            <summary>
                Optional: Host name to connect to, defaults to the pod IP.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TCPSocketActionV1.Port">
            <summary>
                Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewSpecV1">
            <summary>
                TokenReviewSpec is a description of the token authentication request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewSpecV1.Token">
            <summary>
                Token is the opaque bearer token.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewSpecV1Beta1">
            <summary>
                TokenReviewSpec is a description of the token authentication request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewSpecV1Beta1.Token">
            <summary>
                Token is the opaque bearer token.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewStatusV1">
            <summary>
                TokenReviewStatus is the result of the token authentication request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1.Authenticated">
            <summary>
                Authenticated indicates that the token was associated with a known user.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1.Error">
            <summary>
                Error indicates that the token couldn't be checked
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1.User">
            <summary>
                User is the UserInfo associated with the provided token.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewStatusV1Beta1">
            <summary>
                TokenReviewStatus is the result of the token authentication request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1Beta1.Authenticated">
            <summary>
                Authenticated indicates that the token was associated with a known user.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1Beta1.Error">
            <summary>
                Error indicates that the token couldn't be checked
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewStatusV1Beta1.User">
            <summary>
                User is the UserInfo associated with the provided token.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewV1">
            <summary>
                TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewV1.Spec">
            <summary>
                Spec holds information about the request being evaluated
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewV1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request can be authenticated.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TokenReviewV1Beta1">
            <summary>
                TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewV1Beta1.Spec">
            <summary>
                Spec holds information about the request being evaluated
            </summary>
        </member>
        <member name="P:KubeClient.Models.TokenReviewV1Beta1.Status">
            <summary>
                Status is filled in by the server and indicates whether the request can be authenticated.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TolerationV1">
            <summary>
                The pod this Toleration is attached to tolerates any taint that matches the triple &lt;key,value,effect&gt; using the matching operator &lt;operator&gt;.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TolerationV1.Value">
            <summary>
                Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TolerationV1.Operator">
            <summary>
                Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TolerationV1.TolerationSeconds">
            <summary>
                TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TolerationV1.Effect">
            <summary>
                Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TolerationV1.Key">
            <summary>
                Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TopologySelectorLabelRequirementV1">
            <summary>
                A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TopologySelectorLabelRequirementV1.Values">
            <summary>
                An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TopologySelectorLabelRequirementV1.Key">
            <summary>
                The label key that the selector applies to.
            </summary>
        </member>
        <member name="T:KubeClient.Models.TopologySelectorTermV1">
            <summary>
                A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.
            </summary>
        </member>
        <member name="P:KubeClient.Models.TopologySelectorTermV1.MatchLabelExpressions">
            <summary>
                A list of topology selector requirements by labels.
            </summary>
        </member>
        <member name="M:KubeClient.Models.TopologySelectorTermV1.ShouldSerializeMatchLabelExpressions">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.TopologySelectorTermV1.MatchLabelExpressions"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.UserInfoV1">
            <summary>
                UserInfo holds the information about the user needed to implement the user.Info interface.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1.Extra">
            <summary>
                Any additional information provided by the authenticator.
            </summary>
        </member>
        <member name="M:KubeClient.Models.UserInfoV1.ShouldSerializeExtra">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.UserInfoV1.Extra"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1.Uid">
            <summary>
                A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1.Username">
            <summary>
                The name that uniquely identifies this user among all active users.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1.Groups">
            <summary>
                The names of groups this user is a part of.
            </summary>
        </member>
        <member name="M:KubeClient.Models.UserInfoV1.ShouldSerializeGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.UserInfoV1.Groups"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.UserInfoV1Beta1">
            <summary>
                UserInfo holds the information about the user needed to implement the user.Info interface.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1Beta1.Extra">
            <summary>
                Any additional information provided by the authenticator.
            </summary>
        </member>
        <member name="M:KubeClient.Models.UserInfoV1Beta1.ShouldSerializeExtra">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.UserInfoV1Beta1.Extra"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1Beta1.Uid">
            <summary>
                A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1Beta1.Username">
            <summary>
                The name that uniquely identifies this user among all active users.
            </summary>
        </member>
        <member name="P:KubeClient.Models.UserInfoV1Beta1.Groups">
            <summary>
                The names of groups this user is a part of.
            </summary>
        </member>
        <member name="M:KubeClient.Models.UserInfoV1Beta1.ShouldSerializeGroups">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.UserInfoV1Beta1.Groups"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ValidatingWebhookConfigurationListV1Beta1">
            <summary>
                ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ValidatingWebhookConfigurationListV1Beta1.Items">
            <summary>
                List of ValidatingWebhookConfiguration.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ValidatingWebhookConfigurationV1Beta1">
            <summary>
                ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ValidatingWebhookConfigurationV1Beta1.Webhooks">
            <summary>
                Webhooks is a list of webhooks and the affected resources and operations.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ValidatingWebhookConfigurationV1Beta1.ShouldSerializeWebhooks">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.ValidatingWebhookConfigurationV1Beta1.Webhooks"/> property should be serialised.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentListV1Alpha1">
            <summary>
                VolumeAttachmentList is a collection of VolumeAttachment objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentListV1Alpha1.Items">
            <summary>
                Items is the list of VolumeAttachments
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentListV1Beta1">
            <summary>
                VolumeAttachmentList is a collection of VolumeAttachment objects.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentListV1Beta1.Items">
            <summary>
                Items is the list of VolumeAttachments
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentSourceV1Alpha1">
            <summary>
                VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSourceV1Alpha1.PersistentVolumeName">
            <summary>
                Name of the persistent volume to attach.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentSourceV1Beta1">
            <summary>
                VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSourceV1Beta1.PersistentVolumeName">
            <summary>
                Name of the persistent volume to attach.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentSpecV1Alpha1">
            <summary>
                VolumeAttachmentSpec is the specification of a VolumeAttachment request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Alpha1.NodeName">
            <summary>
                The node that the volume should be attached to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Alpha1.Source">
            <summary>
                Source represents the volume that should be attached.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Alpha1.Attacher">
            <summary>
                Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentSpecV1Beta1">
            <summary>
                VolumeAttachmentSpec is the specification of a VolumeAttachment request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Beta1.NodeName">
            <summary>
                The node that the volume should be attached to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Beta1.Source">
            <summary>
                Source represents the volume that should be attached.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentSpecV1Beta1.Attacher">
            <summary>
                Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentStatusV1Alpha1">
            <summary>
                VolumeAttachmentStatus is the status of a VolumeAttachment request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.AttachmentMetadata">
            <summary>
                Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="M:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.ShouldSerializeAttachmentMetadata">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.AttachmentMetadata"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.Attached">
            <summary>
                Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.AttachError">
            <summary>
                The last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Alpha1.DetachError">
            <summary>
                The last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentStatusV1Beta1">
            <summary>
                VolumeAttachmentStatus is the status of a VolumeAttachment request.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Beta1.AttachmentMetadata">
            <summary>
                Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="M:KubeClient.Models.VolumeAttachmentStatusV1Beta1.ShouldSerializeAttachmentMetadata">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.VolumeAttachmentStatusV1Beta1.AttachmentMetadata"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Beta1.Attached">
            <summary>
                Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Beta1.AttachError">
            <summary>
                The last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentStatusV1Beta1.DetachError">
            <summary>
                The last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentV1Alpha1">
            <summary>
                VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
                
                VolumeAttachment objects are non-namespaced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentV1Alpha1.Spec">
            <summary>
                Specification of the desired attach/detach volume behavior. Populated by the Kubernetes system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentV1Alpha1.Status">
            <summary>
                Status of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeAttachmentV1Beta1">
            <summary>
                VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
                
                VolumeAttachment objects are non-namespaced.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentV1Beta1.Spec">
            <summary>
                Specification of the desired attach/detach volume behavior. Populated by the Kubernetes system.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeAttachmentV1Beta1.Status">
            <summary>
                Status of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeDeviceV1">
            <summary>
                volumeDevice describes a mapping of a raw block device within a container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeDeviceV1.Name">
            <summary>
                name must match the name of a persistentVolumeClaim in the pod
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeDeviceV1.DevicePath">
            <summary>
                devicePath is the path inside of the container that the device will be mapped to.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeErrorV1Alpha1">
            <summary>
                VolumeError captures an error encountered during a volume operation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeErrorV1Alpha1.Message">
            <summary>
                String detailing the error encountered during Attach or Detach operation. This string maybe logged, so it should not contain sensitive information.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeErrorV1Alpha1.Time">
            <summary>
                Time the error was encountered.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeErrorV1Beta1">
            <summary>
                VolumeError captures an error encountered during a volume operation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeErrorV1Beta1.Message">
            <summary>
                String detailing the error encountered during Attach or Detach operation. This string maybe logged, so it should not contain sensitive information.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeErrorV1Beta1.Time">
            <summary>
                Time the error was encountered.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeMountV1">
            <summary>
                VolumeMount describes a mounting of a Volume within a container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeMountV1.Name">
            <summary>
                This must match the Name of a Volume.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeMountV1.MountPath">
            <summary>
                Path within the container at which the volume should be mounted.  Must not contain ':'.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeMountV1.SubPath">
            <summary>
                Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeMountV1.MountPropagation">
            <summary>
                mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeMountV1.ReadOnly">
            <summary>
                Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeNodeAffinityV1">
            <summary>
                VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeNodeAffinityV1.Required">
            <summary>
                Required specifies hard node constraints that must be met.
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeProjectionV1">
            <summary>
                Projection that may be projected along with other supported volume types
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeProjectionV1.DownwardAPI">
            <summary>
                information about the downwardAPI data to project
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeProjectionV1.ServiceAccountToken">
            <summary>
                information about the serviceAccountToken data to project
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeProjectionV1.ConfigMap">
            <summary>
                information about the configMap data to project
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeProjectionV1.Secret">
            <summary>
                information about the secret data to project
            </summary>
        </member>
        <member name="T:KubeClient.Models.VolumeV1">
            <summary>
                Volume represents a named volume in a pod that may be accessed by any container in the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.DownwardAPI">
            <summary>
                DownwardAPI represents downward API about the pod that should populate this volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.ScaleIO">
            <summary>
                ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Fc">
            <summary>
                FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Projected">
            <summary>
                Items for all in one resources secrets, configmaps, and downward API
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Rbd">
            <summary>
                RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.AwsElasticBlockStore">
            <summary>
                AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.AzureFile">
            <summary>
                AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.FlexVolume">
            <summary>
                FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Name">
            <summary>
                Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.PortworxVolume">
            <summary>
                PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Quobyte">
            <summary>
                Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.VsphereVolume">
            <summary>
                VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.HostPath">
            <summary>
                HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Iscsi">
            <summary>
                ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.AzureDisk">
            <summary>
                AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.GcePersistentDisk">
            <summary>
                GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.PhotonPersistentDisk">
            <summary>
                PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.PersistentVolumeClaim">
            <summary>
                PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.GitRepo">
            <summary>
                GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.ConfigMap">
            <summary>
                ConfigMap represents a configMap that should populate this volume
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Cinder">
            <summary>
                Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.EmptyDir">
            <summary>
                EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Flocker">
            <summary>
                Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Cephfs">
            <summary>
                CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Glusterfs">
            <summary>
                Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Nfs">
            <summary>
                NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Storageos">
            <summary>
                StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VolumeV1.Secret">
            <summary>
                Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
            </summary>
        </member>
        <member name="T:KubeClient.Models.VsphereVirtualDiskVolumeSourceV1">
            <summary>
                Represents a vSphere volume resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VsphereVirtualDiskVolumeSourceV1.StoragePolicyID">
            <summary>
                Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VsphereVirtualDiskVolumeSourceV1.FsType">
            <summary>
                Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VsphereVirtualDiskVolumeSourceV1.StoragePolicyName">
            <summary>
                Storage Policy Based Management (SPBM) profile name.
            </summary>
        </member>
        <member name="P:KubeClient.Models.VsphereVirtualDiskVolumeSourceV1.VolumePath">
            <summary>
                Path that identifies vSphere volume vmdk
            </summary>
        </member>
        <member name="T:KubeClient.Models.WatchEventV1">
            <summary>
                Event represents a single event to a watched resource.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WatchEventV1.Type">
            <summary>
                Description not provided.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WatchEventV1.Object">
            <summary>
                Object is:
                 * If Type is Added or Modified: the new state of the object.
                 * If Type is Deleted: the state of the object immediately before deletion.
                 * If Type is Error: *Status is recommended; other types may make sense
                   depending on context.
            </summary>
        </member>
        <member name="T:KubeClient.Models.WebhookClientConfigV1Beta1">
            <summary>
                WebhookClientConfig contains the information to make a TLS connection with the webhook
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookClientConfigV1Beta1.CaBundle">
            <summary>
                `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookClientConfigV1Beta1.Service">
            <summary>
                `service` is a reference to the service for this webhook. Either `service` or `url` must be specified.
                
                If the webhook is running within the cluster, then you should use `service`.
                
                Port 443 will be used if it is open, otherwise it is an error.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookClientConfigV1Beta1.Url">
            <summary>
                `url` gives the location of the webhook, in standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or `service` must be specified.
                
                The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
                
                Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
                
                The scheme must be "https"; the URL must begin with "https://".
                
                A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
                
                Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
            </summary>
        </member>
        <member name="T:KubeClient.Models.WebhookV1Beta1">
            <summary>
                Webhook describes an admission webhook and the resources and operations it applies to.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookV1Beta1.Name">
            <summary>
                The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookV1Beta1.ClientConfig">
            <summary>
                ClientConfig defines how to communicate with the hook. Required
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookV1Beta1.NamespaceSelector">
            <summary>
                NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.
                
                For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {
                  "matchExpressions": [
                    {
                      "key": "runlevel",
                      "operator": "NotIn",
                      "values": [
                        "0",
                        "1"
                      ]
                    }
                  ]
                }
                
                If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {
                  "matchExpressions": [
                    {
                      "key": "environment",
                      "operator": "In",
                      "values": [
                        "prod",
                        "staging"
                      ]
                    }
                  ]
                }
                
                See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.
                
                Default to the empty LabelSelector, which matches everything.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookV1Beta1.Rules">
            <summary>
                Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
            </summary>
        </member>
        <member name="M:KubeClient.Models.WebhookV1Beta1.ShouldSerializeRules">
            <summary>
                Determine whether the <see cref="P:KubeClient.Models.WebhookV1Beta1.Rules"/> property should be serialised.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WebhookV1Beta1.FailurePolicy">
            <summary>
                FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore.
            </summary>
        </member>
        <member name="T:KubeClient.Models.WeightedPodAffinityTermV1">
            <summary>
                The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
            </summary>
        </member>
        <member name="P:KubeClient.Models.WeightedPodAffinityTermV1.PodAffinityTerm">
            <summary>
                Required. A pod affinity term, associated with the corresponding weight.
            </summary>
        </member>
        <member name="P:KubeClient.Models.WeightedPodAffinityTermV1.Weight">
            <summary>
                weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
            </summary>
        </member>
        <member name="T:KubeClient.Models.Int32OrStringV1">
            <summary>
                Union type representing a K8s API value that can be either a string or an integer.
            </summary>
            <remarks>
                Any string that cannot be parsed as a number will be treated as a string; otherwise, it will be treated as an <see cref="T:System.Int32"/>.
            </remarks>
        </member>
        <member name="F:KubeClient.Models.Int32OrStringV1.Int32OrStringV1Type">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Int32OrStringV1._intValue">
            <summary>
                The underlying value (if it is an <see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="F:KubeClient.Models.Int32OrStringV1._stringValue">
            <summary>
                The underlying value (if it not an <see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.#ctor(System.Int32)">
            <summary>
                Wrap an <see cref="T:System.Int32"/> in an <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <param name="value">
                The <see cref="T:System.Int32"/> to wrap.
            </param>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.#ctor(System.String)">
            <summary>
                Wrap a <see cref="T:System.String"/> in an <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <param name="value">
                The <see cref="T:System.String"/> to wrap.
            </param>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.#ctor">
            <summary>
            YAML deserialisation constructor.
            </summary>
        </member>
        <member name="P:KubeClient.Models.Int32OrStringV1.Int32Value">
            <summary>
                The underlying value as an <see cref="T:System.Int32"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">
                The underlying value is not a valid 32-bit integer.
            </exception>
        </member>
        <member name="P:KubeClient.Models.Int32OrStringV1.StringValue">
            <summary>
                The underlying value as a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:KubeClient.Models.Int32OrStringV1.IsInt32">
            <summary>
                Is the underlying value a valid 32-bit integer?
            </summary>
        </member>
        <member name="P:KubeClient.Models.Int32OrStringV1.IsString">
            <summary>
                Is the underlying value a (non-null) string?
            </summary>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.Equals(KubeClient.Models.Int32OrStringV1)">
            <summary>
                Determine whether the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to another <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <param name="other">
                The other <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the other <see cref="T:KubeClient.Models.Int32OrStringV1"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.Equals(System.Int32)">
            <summary>
                Determine whether the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to another <see cref="T:System.Int32"/>.
            </summary>
            <param name="other">
                The other <see cref="T:System.Int32"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the other <see cref="T:System.Int32"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.Equals(System.String)">
            <summary>
                Determine whether the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to another <see cref="T:System.String"/>.
            </summary>
            <param name="other">
                The other <see cref="T:System.String"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the other <see cref="T:System.String"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.Equals(System.Object)">
            <summary>
                Determine whether the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to another object.
            </summary>
            <param name="other">
                The other object.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the other object; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.GetHashCode">
            <summary>
                Get a hash code to represent the <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <returns>
                The hash code.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.ToString">
            <summary>
                Get a string representation of the <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.YamlDotNet#Serialization#IYamlConvertible#Read(YamlDotNet.Core.IParser,System.Type,YamlDotNet.Serialization.ObjectDeserializer)">
            <summary>
            Read the <see cref="T:KubeClient.Models.Int32OrStringV1"/>'s value from YAML.
            </summary>
            <param name="parser">The YAML parser to read from.</param>
            <param name="expectedType">The expected type to deserialise into (must be <see cref="T:KubeClient.Models.Int32OrStringV1"/>).</param>
            <param name="nestedObjectDeserializer">An <see cref="T:YamlDotNet.Serialization.ObjectDeserializer"/> that can be used to deserialise nested objects (unused for <see cref="T:KubeClient.Models.Int32OrStringV1"/> since it's a scalar data-type).</param>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.YamlDotNet#Serialization#IYamlConvertible#Write(YamlDotNet.Core.IEmitter,YamlDotNet.Serialization.ObjectSerializer)">
            <summary>
            Write the <see cref="T:KubeClient.Models.Int32OrStringV1"/>'s value to YAML.
            </summary>
            <param name="emitter">The YAML emitter that the value will be written to.</param>
            <param name="nestedObjectSerializer">An <see cref="T:YamlDotNet.Serialization.ObjectSerializer"/> that can be used to serialise nested objects (unused for <see cref="T:KubeClient.Models.Int32OrStringV1"/>).</param>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Explicit(KubeClient.Models.Int32OrStringV1)~System.Int32">
            <summary>
                Explicitly convert an <see cref="T:KubeClient.Models.Int32OrStringV1"/> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/> to convert.
            </param>
            <returns>
                The <see cref="T:System.Int32"/>.
            </returns>
            <exception cref="T:System.InvalidCastException">
                The underlying value is not a valid 32-bit integer.
            </exception>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Explicit(KubeClient.Models.Int32OrStringV1)~System.String">
            <summary>
                Explicitly convert an <see cref="T:KubeClient.Models.Int32OrStringV1"/> to a <see cref="T:System.String"/>.
            </summary>
            <param name="value">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/> to convert.
            </param>
            <returns>
                The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Implicit(System.Int32)~KubeClient.Models.Int32OrStringV1">
            <summary>
                Implicitly convert an <see cref="T:System.Int32"/> to an <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <param name="value">
                The <see cref="T:System.Int32"/> to convert.
            </param>
            <returns>
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Implicit(System.String)~KubeClient.Models.Int32OrStringV1">
            <summary>
                Implicitly convert a <see cref="T:System.String"/> to an <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </summary>
            <param name="value">
                The <see cref="T:System.String"/> to convert.
            </param>
            <returns>
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Equality(KubeClient.Models.Int32OrStringV1,KubeClient.Models.Int32OrStringV1)">
            <summary>
                Test if 2 <see cref="T:KubeClient.Models.Int32OrStringV1"/>s are equivalent.
            </summary>
            <param name="left">
                The first <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The second <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/>s are equivalent; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Inequality(KubeClient.Models.Int32OrStringV1,KubeClient.Models.Int32OrStringV1)">
            <summary>
                Test if 2 <see cref="T:KubeClient.Models.Int32OrStringV1"/>s are not equivalent.
            </summary>
            <param name="left">
                The first <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The second <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/>s are not equivalent; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Equality(KubeClient.Models.Int32OrStringV1,System.Int32)">
            <summary>
                Test if an <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="left">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The <see cref="T:System.Int32"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the <see cref="T:System.Int32"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Inequality(KubeClient.Models.Int32OrStringV1,System.Int32)">
            <summary>
                Test if an <see cref="T:KubeClient.Models.Int32OrStringV1"/> is not equivalent to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="left">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The <see cref="T:System.Int32"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is not equivalent to the <see cref="T:System.Int32"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Equality(KubeClient.Models.Int32OrStringV1,System.String)">
            <summary>
                Test if an <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to a <see cref="T:System.String"/>.
            </summary>
            <param name="left">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The <see cref="T:System.String"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is equivalent to the <see cref="T:System.String"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Int32OrStringV1.op_Inequality(KubeClient.Models.Int32OrStringV1,System.String)">
            <summary>
                Test if an <see cref="T:KubeClient.Models.Int32OrStringV1"/> is not equivalent to a <see cref="T:System.String"/>.
            </summary>
            <param name="left">
                The <see cref="T:KubeClient.Models.Int32OrStringV1"/>.
            </param>
            <param name="right">
                The <see cref="T:System.String"/>.
            </param>
            <returns>
                <c>true</c>, if the <see cref="T:KubeClient.Models.Int32OrStringV1"/> is not equivalent to the <see cref="T:System.String"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KubeClient.Models.IResourceEventV1`1">
            <summary>
                Represents the payload for a Kubernetes resource event.
            </summary>
            <typeparam name="TResource">
                The type of resource to which the event relates.
            </typeparam>
            <remarks>This interface is used to support covariance on <typeparamref name="TResource"/>.</remarks>
        </member>
        <member name="P:KubeClient.Models.IResourceEventV1`1.EventType">
            <summary>
                The event type.
            </summary>
        </member>
        <member name="P:KubeClient.Models.IResourceEventV1`1.Resource">
            <summary>
                The resource to which the event relates.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeAction">
            <summary>
                Well-known actions supported by Kubernetes resource APIs.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Unknown">
            <summary>
                An unknown action.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Get">
            <summary>
                Retrieve a single resource by name.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Create">
            <summary>
                Create a new resource.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Delete">
            <summary>
                Delete a resource by name.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.DeleteCollection">
            <summary>
                Delete multiple resources.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.List">
            <summary>
                Retrieve a list of resources.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Patch">
            <summary>
                Selectively update part(s) of a resource.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Update">
            <summary>
                Replace a resource.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Watch">
            <summary>
                Watch a resource for changes.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.WatchList">
            <summary>
                Watch a list of resources for changes.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Connect">
            <summary>
                Connect to a resource.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeAction.Proxy">
            <summary>
                Create a proxy connection to a resource.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeApiAttribute">
            <summary>
                Declares the path for one or more Kubernetes resource API actions.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeApiAttribute.#ctor(KubeClient.Models.KubeAction,System.String[])">
            <summary>
                Declare a path and one or more actions for the Kubernetes resource API represented by the target model.
            </summary>
            <param name="action">
                The API action.
            </param>
            <param name="paths">
                The API path(s) supporting the action.
            </param>
        </member>
        <member name="P:KubeClient.Models.KubeApiAttribute.Action">
            <summary>
                The API action.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeApiAttribute.Paths">
            <summary>
                The API path(s) supporting the action.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeListItemAttribute">
            <summary>
                Mark a model class as representing a list whose items are Kubernetes objects of a specific kind / API version.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeListItemAttribute.#ctor(System.String,System.String)">
            <summary>
                Mark the model class as representing a list of Kubernetes objects of the specified kind / API version.
            </summary>
            <param name="kind">
                The object kind.
            </param>
            <param name="apiVersion">
                The object API version.
            </param>
        </member>
        <member name="P:KubeClient.Models.KubeListItemAttribute.Kind">
            <summary>
                The item kind.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeListItemAttribute.ApiVersion">
            <summary>
                The item API version.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeObjectAttribute">
            <summary>
                Mark a model class as representing a Kubernetes object.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeObjectAttribute.#ctor(System.String,System.String)">
            <summary>
                Mark the model class as representing a Kubernetes object.
            </summary>
            <param name="kind">
                The object kind.
            </param>
            <param name="apiVersion">
                The object API version.
            </param>
        </member>
        <member name="P:KubeClient.Models.KubeObjectAttribute.Kind">
            <summary>
                The resource kind.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeObjectAttribute.ApiVersion">
            <summary>
                The resource API version.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeObjectV1">
            <summary>
                The base class for Kubernetes models.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeObjectV1.ModelMetadata">
            <summary>
                Model type metadata.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeObjectV1.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeObjectV1"/>, automatically initialising <see cref="P:KubeClient.Models.KubeObjectV1.Kind"/> and <see cref="P:KubeClient.Models.KubeObjectV1.ApiVersion"/> (if possible).
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeObjectV1.Kind">
            <summary>
                Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeObjectV1.ApiVersion">
            <summary>
                APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeObjectV1.GetKubeKind``1">
            <summary>
                Get Kubernetes Kind / ApiVersion metadata for the specified object type.
            </summary>
            <typeparam name="TObject">
                The target object type.
            </typeparam>
            <returns>
                A tuple containing the object's Kind and ApiVersion metadata (or <c>null</c> and <c>null</c>, if no metadata is available for <typeparamref name="TObject"/>).
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeObjectV1.GetKubeKind(System.Type)">
            <summary>
                Get Kubernetes Kind / ApiVersion metadata for the specified object type.
            </summary>
            <param name="kubeObjectType">
                The Kubernetes object type.
            </param>
            <returns>
                A tuple containing the object's Kind and ApiVersion metadata (or <c>null</c> and <c>null</c>, if no metadata is available for <paramref name="kubeObjectType"/>).
            </returns>
        </member>
        <member name="T:KubeClient.Models.KubeObjectExtensions">
            <summary>
                Extension methods for <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeObjectExtensions.NoTypeMeta``1(``0)">
            <summary>
                Remove type metadata (Kind and ApiVersion) from the <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <param name="kubeObject">
                The <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </param>
            <returns>
                The <see cref="T:KubeClient.Models.KubeObjectV1"/> (enables inline use).
            </returns>
        </member>
        <member name="T:KubeClient.Models.KubeResourceListResultV1`1">
            <summary>
                Represents the result of a Kubernetes API operation that returns a list of resources.
            </summary>
            <typeparam name="TResource">
                The type of resource returned by the operation.
            </typeparam>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.#ctor(KubeClient.Models.KubeResourceListV1{`0})">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> representing the specified <typeparamref name="TResource"/> list.
            </summary>
            <param name="resources">
                The <typeparamref name="TResource"/> list represented by the <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </param>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.#ctor(KubeClient.Models.StatusV1)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> representing a <see cref="T:KubeClient.Models.StatusV1"/>.
            </summary>
            <param name="status">
                The <see cref="T:KubeClient.Models.StatusV1"/> represented by the <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </param>
        </member>
        <member name="P:KubeClient.Models.KubeResourceListResultV1`1.Resources">
            <summary>
                The <typeparamref name="TResource"/> represented by the <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResourceListResultV1`1.ResourceType">
            <summary>
                The type of resource represented by the <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.op_Implicit(KubeClient.Models.KubeResourceListResultV1{`0})~KubeClient.Models.KubeResourceListV1{`0}">
            <summary>
                Implicitly convert a <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> to a <typeparamref name="TResource"/>.
            </summary>
            <param name="result">
                The <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> to convert.
            </param>
            <returns>
                The result's <see cref="P:KubeClient.Models.KubeResourceListResultV1`1.Resources"/>.
            </returns>
            <exception cref="T:KubeClient.KubeApiException">
                The result <see cref="P:KubeClient.Models.KubeResultV1.Status"/> does not represent success.
            </exception>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.op_Implicit(KubeClient.Models.KubeResourceListV1{`0})~KubeClient.Models.KubeResourceListResultV1{`0}">
            <summary>
                Convert a <typeparamref name="TResource"/> to a <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </summary>
            <param name="resources">
                The <typeparamref name="TResource"/> to convert.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> that wraps the <paramref name="resources"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.op_Implicit(KubeClient.Models.StatusV1)~KubeClient.Models.KubeResourceListResultV1{`0}">
            <summary>
                Convert a <see cref="T:KubeClient.Models.StatusV1"/> to a <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/>.
            </summary>
            <param name="status">
                The <see cref="T:KubeClient.Models.StatusV1"/> to convert.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceListResultV1`1"/> that wraps the <paramref name="status"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.DefaultStatus(KubeClient.Models.KubeResourceListV1{`0})">
            <summary>
                The default <see cref="T:KubeClient.Models.StatusV1"/> used when no status is available because an operation returned a list of resources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.GetEnumerator">
            <summary>
                Get a typed enumerator for the resources returned with the result.
            </summary>
            <returns>
                The enumerator.
            </returns>
            <exception cref="T:KubeClient.KubeApiException">
                The result <see cref="P:KubeClient.Models.KubeResultV1.Status"/> does not represent success.
            </exception>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListResultV1`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Get an untyped enumerator for the resources returned with the result.
            </summary>
            <returns>
                The enumerator.
            </returns>
            <exception cref="T:KubeClient.KubeApiException">
                The result <see cref="P:KubeClient.Models.KubeResultV1.Status"/> does not represent success.
            </exception>
        </member>
        <member name="T:KubeClient.Models.KubeResourceListV1">
            <summary>
                The base class for Kubernetes resource lists.
            </summary>
        </member>
        <member name="F:KubeClient.Models.KubeResourceListV1.ItemModelMetadata">
            <summary>
                Model type metadata.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResourceListV1.Metadata">
            <summary>
                Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1.EnumerateItems">
            <summary>
                Enumerate the list's items.
            </summary>
            <returns>
                The list's items.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1.GetListItemKubeKind``1">
            <summary>
                Get Kubernetes Kind / ApiVersion metadata for the items contained by the specified list type.
            </summary>
            <typeparam name="TResourceList">
                The target resource-list type.
            </typeparam>
            <returns>
                A tuple containing the item Kind and ApiVersion metadata (or <c>null</c> and <c>null</c>, if no item metadata is available for <typeparamref name="TResourceList"/>).
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1.GetListItemKubeKind(System.Type)">
            <summary>
                Get Kubernetes Kind / ApiVersion metadata for the items contained by the specified list type.
            </summary>
            <param name="resourceListType">
                The target resource-list type.
            </param>
            <returns>
                A tuple containing the item Kind and ApiVersion metadata (or <c>null</c> and <c>null</c>, if no item metadata is available for the resource-list type).
            </returns>
        </member>
        <member name="T:KubeClient.Models.KubeResourceListV1`1">
            <summary>
                The base class for Kubernetes resource lists where the resource type is known.
            </summary>
            <typeparam name="TResource">
                The type of resource contained in the list.
            </typeparam>
        </member>
        <member name="P:KubeClient.Models.KubeResourceListV1`1.Items">
            <summary>
                The list's resources.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1`1.EnumerateItems">
            <summary>
                Enumerate the list's items.
            </summary>
            <returns>
                The list's items.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1`1.GetEnumerator">
            <summary>
                Get a typed enumerator for the list's resources.
            </summary>
            <returns>
                The <see cref="T:System.Collections.Generic.IEnumerator`1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceListV1`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Get an untyped enumerator for the list's resources.
            </summary>
            <returns>
                The <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="T:KubeClient.Models.KubeResourceResultV1`1">
            <summary>
                Represents the result of a Kubernetes API operation that returns a resource.
            </summary>
            <typeparam name="TResource">
                The type of resource returned by the operation.
            </typeparam>
        </member>
        <member name="M:KubeClient.Models.KubeResourceResultV1`1.#ctor(`0)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> representing the specified <typeparamref name="TResource"/>.
            </summary>
            <param name="resource">
                The <typeparamref name="TResource"/> represented by the <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </param>
        </member>
        <member name="M:KubeClient.Models.KubeResourceResultV1`1.#ctor(KubeClient.Models.StatusV1)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> representing a <see cref="T:KubeClient.Models.StatusV1"/>.
            </summary>
            <param name="status">
                The <see cref="T:KubeClient.Models.StatusV1"/> represented by the <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </param>
        </member>
        <member name="P:KubeClient.Models.KubeResourceResultV1`1.Resource">
            <summary>
                The <typeparamref name="TResource"/> represented by the <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResourceResultV1`1.ResourceType">
            <summary>
                The type of resource represented by the <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResourceResultV1`1.op_Implicit(KubeClient.Models.KubeResourceResultV1{`0})~`0">
            <summary>
                Implicitly convert a <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> to a <typeparamref name="TResource"/>.
            </summary>
            <param name="result">
                The <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> to convert.
            </param>
            <returns>
                The result's <see cref="P:KubeClient.Models.KubeResourceResultV1`1.Resource"/>.
            </returns>
            <exception cref="T:KubeClient.KubeApiException">
                The result <see cref="P:KubeClient.Models.KubeResultV1.Status"/> does not represent success.
            </exception>
        </member>
        <member name="M:KubeClient.Models.KubeResourceResultV1`1.op_Implicit(`0)~KubeClient.Models.KubeResourceResultV1{`0}">
            <summary>
                Convert a <typeparamref name="TResource"/> to a <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </summary>
            <param name="resource">
                The <typeparamref name="TResource"/> to convert.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> that wraps the <paramref name="resource"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.KubeResourceResultV1`1.op_Implicit(KubeClient.Models.StatusV1)~KubeClient.Models.KubeResourceResultV1{`0}">
            <summary>
                Convert a <see cref="T:KubeClient.Models.StatusV1"/> to a <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/>.
            </summary>
            <param name="status">
                The <see cref="T:KubeClient.Models.StatusV1"/> to convert.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceResultV1`1"/> that wraps the <paramref name="status"/>.
            </returns>
        </member>
        <member name="P:KubeClient.Models.KubeResourceResultV1`1.DefaultStatus">
            <summary>
                The default <see cref="T:KubeClient.Models.StatusV1"/> used when no status is available because an operation returned a status.
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeResourceV1">
            <summary>
                The base class for Kubernetes resources.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResourceV1.Metadata">
            <summary>
                Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
            </summary>
        </member>
        <member name="T:KubeClient.Models.KubeResultV1">
            <summary>
                Represents the result of a Kubernetes API operation.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResultV1.Status">
            <summary>
                A <see cref="T:KubeClient.Models.StatusV1"/> representing the operation status.
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResultV1.IsSuccess">
            <summary>
                Does the result represent a successful operation?
            </summary>
        </member>
        <member name="P:KubeClient.Models.KubeResultV1.ResourceType">
            <summary>
                The type of resource represented by the <see cref="T:KubeClient.Models.KubeResultV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.KubeResultV1.#ctor(KubeClient.Models.StatusV1)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.KubeResultV1"/>.
            </summary>
            <param name="status">
                The <see cref="T:KubeClient.Models.StatusV1"/> that represents the operation result.
            </param>
        </member>
        <member name="M:KubeClient.Models.KubeResultV1.op_Implicit(KubeClient.Models.KubeResultV1)~KubeClient.Models.StatusV1">
            <summary>
                Implicitly convert a <see cref="T:KubeClient.Models.KubeResultV1"/> to a <see cref="T:KubeClient.Models.StatusV1"/>.
            </summary>
            <param name="result">
                The <see cref="T:KubeClient.Models.KubeResultV1"/> to convert.
            </param>
            <returns>
                The result's <see cref="P:KubeClient.Models.KubeResultV1.Status"/>.
            </returns>
        </member>
        <member name="T:KubeClient.Models.MergeStrategyAttribute">
            <summary>
                Marks a property as supporting merge when using strategic patch in the Kubernetes API.
            </summary>
        </member>
        <member name="M:KubeClient.Models.MergeStrategyAttribute.#ctor">
            <summary>
                Mark the property as supporting merge when using strategic patch in the Kubernetes API.
            </summary>
        </member>
        <member name="P:KubeClient.Models.MergeStrategyAttribute.Key">
            <summary>
                The name of the field (if any) to use as a key when merging items.
            </summary>
        </member>
        <member name="T:KubeClient.Models.MicroTimeV1">
            <summary>
                MicroTime is version of Time with microsecond level precision.
            </summary>
        </member>
        <member name="F:KubeClient.Models.MicroTimeV1._value">
            <summary>
                The underlying <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="M:KubeClient.Models.MicroTimeV1.#ctor(System.DateTime)">
            <summary>
                Create a new <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
            <param name="value">    
                The underlying <see cref="T:System.DateTime"/> value.
            </param>
        </member>
        <member name="P:KubeClient.Models.MicroTimeV1.Value">
            <summary>
                The underlying <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="M:KubeClient.Models.MicroTimeV1.ToString">
            <summary>
                Convert the <see cref="T:KubeClient.Models.MicroTimeV1"/> to a string.
            </summary>
            <returns>
                The string representation of the <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.MicroTimeV1.op_Implicit(KubeClient.Models.MicroTimeV1)~System.DateTime">
            <summary>
                Implicit cast operator from <see cref="T:KubeClient.Models.MicroTimeV1"/> to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="microTime">The <see cref="T:KubeClient.Models.MicroTimeV1"/> value to convert.</param>
        </member>
        <member name="M:KubeClient.Models.MicroTimeV1.op_Implicit(System.DateTime)~KubeClient.Models.MicroTimeV1">
            <summary>
                Implicit cast operator from <see cref="T:System.DateTime"/> to <see cref="T:KubeClient.Models.MicroTimeV1"/>.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to convert.</param>
        </member>
        <member name="T:KubeClient.Models.ModelExtensions">
            <summary>
                Extension methods for Kubernetes API models.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.GetHostAndPort(KubeClient.Models.ServiceV1,System.String)">
            <summary>
                Get the host name and port corresponding to the Service.
            </summary>
            <param name="service">
                The Kubernetes <see cref="T:KubeClient.Models.ServiceV1"/>.
            </param>
            <param name="portName">
                The name of the port to use.
            </param>
            <returns>
                The host name and port.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.IsOwnedBy(KubeClient.Models.ReplicaSetV1,KubeClient.Models.DeploymentV1)">
            <summary>
                Determine whether a Deployment owns a ReplicaSet.
            </summary>
            <param name="replicaSet">
                The ReplicaSet to examine.
            </param>
            <param name="deployment">
                The Deployment to examine.
            </param>
            <returns>
                <c>true</c>, if the ReplicaSet has an owner-reference to the Deployment; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.GetRevision(KubeClient.Models.DeploymentV1)">
            <summary>
                Determine the revision (represented by the "deployment.kubernetes.io/revision" annotation) of the Deployment.
            </summary>
            <param name="deployment">
                The <see cref="T:KubeClient.Models.DeploymentV1"/> model.
            </param>
            <returns>
                The revision, if present; <c>null</c>, if the annotation is absent or not a number.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.GetRevision(KubeClient.Models.ReplicaSetV1)">
            <summary>
                Determine the revision (represented by the "deployment.kubernetes.io/revision" annotation) of the Deployment represented by the ReplicaSet.
            </summary>
            <param name="deployment">
                The <see cref="T:KubeClient.Models.ReplicaSetV1"/> model.
            </param>
            <returns>
                The revision, if present; <c>null</c>, if the annotation is absent or not a number.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.GetLabelSelector(KubeClient.Models.DeploymentV1)">
            <summary>
                Get the composite label selector (if any) associated with the specified Deployment.
            </summary>
            <param name="deployment">
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment's current state.
            </param>
            <returns>
                The composite label selector (e.g. "key1=value1,key2=value2"), or <c>null</c> if the Deployment doesn't specify any label selectors.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.GetLabelSelector(KubeClient.Models.LabelSelectorV1)">
            <summary>
                Get the composite label selector (if any) associated with the specified Deployment.
            </summary>
            <param name="labelSelector">
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment's current state.
            </param>
            <returns>
                The composite label selector (e.g. "key1=value1,key2=value2"), or <c>null</c> if <paramref name="labelSelector" />'s <see cref="P:KubeClient.Models.LabelSelectorV1.MatchLabels"/> is empty.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelExtensions.ToObjectReference(KubeClient.Models.KubeResourceV1)">
            <summary>
            Create an ObjectReference (v1) representing the resource.
            </summary>
            <param name="resource">The <see cref="T:KubeClient.Models.KubeResourceV1"/>.</param>
            <returns>The new <see cref="T:KubeClient.Models.ObjectReferenceV1"/>.</returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="resource"/> has <c>null</c> metadata.
            </exception>
        </member>
        <member name="T:KubeClient.Models.ModelMetadata">
            <summary>
                Helper methods for working with model metadata.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ModelMetadata.NoKeys">
            <summary>
                Represents an empty list of keys (resource field names).
            </summary>
        </member>
        <member name="T:KubeClient.Models.ModelMetadata.KubeObject">
            <summary>
                <see cref="T:KubeClient.Models.KubeObjectV1"/> model metadata.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ModelMetadata.KubeObject.KubeResourceV1Type">
            <summary>
                The <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ModelMetadata.KubeObject.KubeResourceListV1Type">
            <summary>
                The <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildTypeToKindLookup(System.Reflection.Assembly[])">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of kind/apiVersion tuples, keyed by model type.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildTypeToKindLookup(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of kind/apiVersion tuples, keyed by model type.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildListTypeToKindLookup(System.Reflection.Assembly[])">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of kind/apiVersion tuples, keyed by model type.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildListTypeToKindLookup(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of kind/apiVersion tuples, keyed by model type.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildKindToTypeLookup(System.Reflection.Assembly[])">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of model types, keyed by kind/apiVersion tuple.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildKindToTypeLookup(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of model types, keyed by kind/apiVersion tuple.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildKindToListTypeLookup(System.Reflection.Assembly[])">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of model types, keyed by kind/apiVersion tuple.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.KubeObject.BuildKindToListTypeLookup(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                Get kind and apiVersion metadata for all model types in the specified assemblies that derive from <see cref="T:KubeClient.Models.KubeResourceListV1"/>.
            </summary>
            <param name="assemblies">
                The target assemblies.
            </param>
            <returns>
                A dictionary of model types, keyed by kind/apiVersion tuple.
            </returns>
        </member>
        <member name="T:KubeClient.Models.ModelMetadata.StrategicPatch">
            <summary>
                Helper methods for working with model metadata relating to strategic resource patching.
            </summary>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.IsMergeStrategy(System.Reflection.PropertyInfo)">
            <summary>
                Determine whether the specified resource field supports merge in K8s strategic patch.
            </summary>
            <param name="property">
                The target property.
            </param>
            <returns>
                <c>true</c>, if the property supports merge; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.IsRetainKeysStrategy(System.Reflection.PropertyInfo)">
            <summary>
                Determine whether the specified resource field retains existing values for fields if they are not supplied in K8s strategic patch (via the $retainKeys directive).
            </summary>
            <param name="property">
                The target property.
            </param>
            <returns>
                <c>true</c>, if the existing values are retained; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.GetStrategies(System.Reflection.PropertyInfo)">
            <summary>
                Get all patch strategies applicable to the specified property.
            </summary>
            <param name="property">
                The target property.
            </param>
            <returns>
                One or more <see cref="T:KubeClient.Models.PatchStrategies"/> flags indicating the applicable strategies.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.GetMergeKey(System.Reflection.PropertyInfo)">
            <summary>
                Get the merge key (if any) represented by the specified model property.
            </summary>
            <param name="property">
                The target property.
            </param>
            <returns>
                The merge key, or <c>null</c> if the property does not represent the resource's merge key.
            </returns>
        </member>
        <member name="T:KubeClient.Models.ModelMetadata.StrategicPatch.For`1">
            <summary>
                Helper methods for working with typed model metadata relating to strategic resource patching.
            </summary>
            <typeparam name="TModel">
                The model type.
            </typeparam>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.For`1.IsMergeStrategy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Determine whether the specified property supports merge in K8s strategic resource patching.
            </summary>
            <typeparam name="TProperty">
                The property type.
            </typeparam>
            <param name="propertyAccessExpression">
                A property-access expression representing the target property.
            </param>
            <returns>
                <c>true</c>, if the property supports merge; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.For`1.IsRetainKeysStrategy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Determine whether the specified resource field retains existing values for fields if they are not supplied in K8s strategic patch (via the $retainKeys directive).
            </summary>
            <typeparam name="TProperty">
                The property type.
            </typeparam>
            <param name="propertyAccessExpression">
                A property-access expression representing the target property.
            </param>
            <returns>
                <c>true</c>, if existing values are retained; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.For`1.GetStrategies``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Get all patch strategies applicable to the specified property.
            </summary>
            <typeparam name="TProperty">
                The property type.
            </typeparam>
            <param name="propertyAccessExpression">
                A property-access expression representing the target property.
            </param>
            <returns>
                One or more <see cref="T:KubeClient.Models.PatchStrategies"/> flags indicating the applicable strategies.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.StrategicPatch.For`1.GetMergeKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Get the merge key (if any) represented by the specified model property.
            </summary>
            <typeparam name="TProperty">
                The property type.
            </typeparam>
            <param name="propertyAccessExpression">
                A property-access expression representing the target property.
            </param>
            <returns>
                The merge key, or <c>null</c> if the property does not represent the resource's merge key.
            </returns>
        </member>
        <member name="M:KubeClient.Models.ModelMetadata.GetProperty``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                Retrieve the property represented by the specified property-access expression.
            </summary>
            <param name="propertyAccessExpression">
                A property-access expression representing the target property.
            </param>
            <typeparam name="TModel">
                The model type.
            </typeparam>
            <typeparam name="TProperty">
                The property type.
            </typeparam>
            <returns>
                A <see cref="T:System.Reflection.PropertyInfo"/> representing the property.
            </returns>
        </member>
        <member name="T:KubeClient.Models.PatchStrategies">
            <summary>
                Represents field-level strategies for Kubernetes strategic patch.
            </summary>
        </member>
        <member name="F:KubeClient.Models.PatchStrategies.Replace">
            <summary>
                Field contents will be replaced.
            </summary>
        </member>
        <member name="F:KubeClient.Models.PatchStrategies.Merge">
            <summary>
                Field contents will be merged.
            </summary>
        </member>
        <member name="F:KubeClient.Models.PatchStrategies.RetainKeys">
            <summary>
                Field contents will be replaced, except for contents whose keys match a value supplied in the $retainKeys directive.
            </summary>
        </member>
        <member name="T:KubeClient.Models.PatchStrategyAttribute">
            <summary>
                Base class for attributes representing property-level patch strategies in Kubernetes strategic patch.
            </summary>
        </member>
        <member name="M:KubeClient.Models.PatchStrategyAttribute.#ctor">
            <summary>
                Create a new <see cref="T:KubeClient.Models.PatchStrategyAttribute"/>.
            </summary>
        </member>
        <member name="T:KubeClient.Models.QuantityResource">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceEventType">
            <summary>
                Well-known types of Kubernetes resource events.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ResourceEventType.Added">
            <summary>
                Resource was created.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ResourceEventType.Modified">
            <summary>
                Resource was modified.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ResourceEventType.Deleted">
            <summary>
                Resource was deleted.
            </summary>
        </member>
        <member name="F:KubeClient.Models.ResourceEventType.Bookmark">
            <summary>
                Event represents a watch bookmark.
            </summary>
            <seealso href="https://github.com/kubernetes/enhancements/blob/f61581f3cf591f944e37568b715ff0b2ba357df6/keps/sig-api-machinery/20190206-watch-bookmark.md"/>
        </member>
        <member name="F:KubeClient.Models.ResourceEventType.Error">
            <summary>
                Resource encountered an error condition.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ResourceEventV1`1">
            <summary>
                Represents the payload for a Kubernetes resource event.
            </summary>
            <typeparam name="TResource">
                The type of resource to which the event relates.
            </typeparam>
        </member>
        <member name="P:KubeClient.Models.ResourceEventV1`1.EventType">
            <summary>
                The event type.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ResourceEventV1`1.Resource">
            <summary>
                The resource to which the event relates.
            </summary>
        </member>
        <member name="T:KubeClient.Models.RetainKeysStrategyAttribute">
            <summary>
                Marks a property as supporting merge when using strategic patch in the Kubernetes API.
            </summary>
        </member>
        <member name="M:KubeClient.Models.RetainKeysStrategyAttribute.#ctor">
            <summary>
                Mark the property as supporting merge when using strategic patch in the Kubernetes API.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ThirdPartyResourceListV1Beta1">
            <summary>
                ThirdPartyResourceList is a list of ThirdPartyResources.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ThirdPartyResourceListV1Beta1.Items">
            <summary>
                Items is the list of ThirdPartyResources.
            </summary>
        </member>
        <member name="T:KubeClient.Models.ThirdPartyResourceV1Beta1">
            <summary>
                A ThirdPartyResource is a generic representation of a resource, it is used by add-ons and plugins to add new resource types to the API.  It consists of one or more Versions of the api.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ThirdPartyResourceV1Beta1.Description">
            <summary>
                Description is the description of this object.
            </summary>
        </member>
        <member name="P:KubeClient.Models.ThirdPartyResourceV1Beta1.Versions">
            <summary>
                Versions are versions for this third party object
            </summary>
        </member>
        <member name="T:KubeClient.Models.TimeV1">
            <summary>
                No description provided.
            </summary>
        </member>
        <member name="T:KubeClient.Models.Yaml">
            <summary>
                Helper methods for YAML serialisation / deserialisation of models.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Yaml.StreamBufferSize">
            <summary>
                The buffer size used when reading from / writing to streams.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Yaml.YamlDeserialiser">
            <summary>
                The singleton YAML <see cref="T:YamlDotNet.Serialization.Deserializer"/> used by static methods on <see cref="T:KubeClient.Models.Yaml"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Yaml.YamlSerialiser">
            <summary>
                The singleton YAML <see cref="T:YamlDotNet.Serialization.Serializer"/> used by static methods on <see cref="T:KubeClient.Models.Yaml"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Yaml.YamlJsonSerialiser">
            <summary>
                The singleton (JSON-compatible) YAML <see cref="T:YamlDotNet.Serialization.Serializer"/> used by static methods on <see cref="T:KubeClient.Models.Yaml"/>.
            </summary>
        </member>
        <member name="F:KubeClient.Models.Yaml.JsonSerializer">
            <summary>
                The singleton <see cref="F:KubeClient.Models.Yaml.JsonSerializer"/> used by static methods on <see cref="T:KubeClient.Models.Yaml"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Models.Yaml.ToJson(System.IO.TextReader)">
            <summary>
                Convert YAML to JSON.
            </summary>
            <param name="yaml">
                A <see cref="T:System.IO.TextReader"/> containing the YAML to convert.
            </param>
            <returns>
                A <see cref="T:Newtonsoft.Json.Linq.JToken"/> representing the converted JSON.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Yaml.ToJson(System.String,Newtonsoft.Json.Formatting)">
            <summary>
                Convert YAML to JSON.
            </summary>
            <param name="yaml">
                A string containing the YAML to convert.
            </param>
            <param name="formatting">
                A <see cref="T:Newtonsoft.Json.Formatting"/> value indicating whether the converted JSON should be formatted (i.e. indented).
            </param>
            <returns>
                A string containing the converted JSON.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Yaml.Deserialize``1(System.IO.TextReader)">
             <summary>
                 Deserialise a <typeparamref name="TModel"/> from YAML.
             </summary>
             <typeparam name="TModel">
                 The type of model to deserialise.
             </typeparam>
             <param name="yaml">
                 A <see cref="T:System.IO.TextReader"/> containing the YAML.
             </param>
             <returns>
                 The deserialised <typeparamref name="TModel"/>.
             </returns>
             <remarks>
                 Delegates the actual deserialisation to JSON.NET, after converting the YAML to JSON.
            
                 Not particularly efficient, but safe and reliable.
             </remarks>
        </member>
        <member name="M:KubeClient.Models.Yaml.Serialize(System.Object,System.IO.TextWriter)">
             <summary>
                 Serialise a model to YAML.
             </summary>
             <param name="model">
                 The model to serialise.
             </param>
             <param name="writer">
                 A <see cref="T:System.IO.TextWriter"/> that will receive the serialised YAML.
             </param>
             <remarks>
                 Delegates the actual deserialisation to JSON.NET, before converting the JSON to YAML.
            
                 Not particularly efficient, but safe and reliable.
             </remarks>
        </member>
        <member name="M:KubeClient.Models.Yaml.CreateJsonReader(System.IO.Stream)">
            <summary>
                Create a <see cref="T:Newtonsoft.Json.JsonReader"/> that reads from the specified stream.
            </summary>
            <param name="stream">
                The target stream.
            </param>
            <returns>
                The new <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Yaml.CreateJsonWriter(System.IO.Stream)">
            <summary>
                Create a <see cref="T:Newtonsoft.Json.JsonWriter"/> that writes to the specified stream.
            </summary>
            <param name="stream">
                The target stream.
            </param>
            <returns>
                The new <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Yaml.CreateTextReader(System.IO.Stream)">
            <summary>
                Create a <see cref="T:System.IO.TextReader"/> that reads from the specified stream.
            </summary>
            <param name="stream">
                The target stream.
            </param>
            <returns>
                The new <see cref="T:System.IO.TextReader"/>.
            </returns>
        </member>
        <member name="M:KubeClient.Models.Yaml.CreateTextWriter(System.IO.Stream)">
            <summary>
                Create a <see cref="T:System.IO.TextWriter"/> that writes to the specified stream.
            </summary>
            <param name="stream">
                The target stream.
            </param>
            <returns>
                The new <see cref="T:System.IO.TextWriter"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClientExtensions">
            <summary>
                Extension methods for various K8s resource clients.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.UpdateDeployment(KubeClient.ResourceClients.IDeploymentClientV1,KubeClient.Models.DeploymentV1,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DeploymentV1}},System.Threading.CancellationToken)">
            <summary>
                Update (PATCH) an existing Deployment.
            </summary>
            <param name="deploymentClient">
                The Kubernetes Deployment (v1) API client.
            </param>
            <param name="existingDeployment">
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment to update.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment's current state.
            </returns>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <remarks>
                The state of <paramref name="existingDeployment"/> is not used for update; it is simply convenient shorthand for specifying the deployment's name and namespace.
            </remarks>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.FindReplicaSetForRevision(KubeClient.IKubeApiClient,KubeClient.Models.DeploymentV1,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Find the ReplicaSet that corresponds to the specified revision of the specified Deployment.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
            <param name="deployment">
                The target Deployment.
            </param>
            <param name="targetRevision">
                The target revision.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the ReplicaSet's current state; <c>null</c>, if no corresponding ReplicaSet was found.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.RollbackDeployment(KubeClient.IKubeApiClient,KubeClient.Models.DeploymentV1,KubeClient.Models.ReplicaSetV1,System.Threading.CancellationToken)">
            <summary>
                Roll back a Deployment to the revision represented by the specified ReplicaSet.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
            <param name="existingDeployment">
                The target Deployment.
            </param>
            <param name="targetRevisionReplicaSet">
                The ReplicaSet that represents the target revision.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment's current state.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.Get(KubeClient.ResourceClients.IDynamicResourceClient,KubeClient.Models.ObjectReferenceV1,System.Threading.CancellationToken)">
            <summary>
            Get the Kubernetes resource represented by the specified object reference.
            </summary>
            <param name="dynamicResourceClient">The Kubernetes dynamic resource client.</param>
            <param name="resourceReference">The <see cref="T:KubeClient.Models.ObjectReferenceV1"/>.</param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.</param>
            <returns>The resource, as a <see cref="T:KubeClient.Models.KubeResourceV1"/>.</returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="resourceReference"/> has a <c>null</c> name or kind.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.List(KubeClient.ResourceClients.IEventClientV1,KubeClient.Models.KubeResourceV1,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            List events that apply to the specified Kubernetes resource.
            </summary>
            <param name="eventClient">The Kubernetes API client.</param>
            <param name="resource">The <see cref="T:KubeClient.Models.KubeResourceV1"/>.</param>
            <param name="onlyNewEvents">Only return events newer than the <paramref name="resource"/>'s ResourceVersion?</param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.</param>
            <returns>An <see cref="T:KubeClient.Models.EventListV1"/> containing the relevant events.</returns>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.WatchAll(KubeClient.ResourceClients.IEventClientV1,KubeClient.Models.KubeResourceV1)">
            <summary>
            Watch for events that apply to the specified Kubernetes resource.
            </summary>
            <param name="eventClient">The Kubernetes API client.</param>
            <param name="resource">The <see cref="T:KubeClient.Models.KubeResourceV1"/>.</param>
            <returns>An <see cref="T:KubeClient.Models.EventListV1"/> containing the relevant events.</returns>
        </member>
        <member name="M:KubeClient.ResourceClientExtensions.BuildInvolvedObjectFieldSelector(KubeClient.Models.KubeResourceV1)">
            <summary>
            Build a Kubernetes field selector for <see cref="P:KubeClient.Models.EventV1.InvolvedObject"/> that targets the specified resource.
            </summary>
            <param name="resource">The <see cref="T:KubeClient.Models.KubeResourceV1"/>.</param>
            <returns>The field selector.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="resource"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="resource"/> has <c>null</c> <see cref="P:KubeClient.Models.KubeResourceV1.Metadata"/>.
            </exception>
        </member>
        <member name="T:KubeClient.ResourceClients.APIGroupClientV1">
            <summary>
                A client for the Kubernetes APIGroups (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.APIGroupClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.APIGroupClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.APIGroupClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all APIGroups with the specified prefix.
            </summary>
            <param name="prefix">
                The prefix for the API groups (usually "api/v1" for core APIs or "apis" for all other APIs).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.APIGroupListV1"/> containing the APIGroups.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.APIGroupClientV1.Requests">
            <summary>
                Request templates for the APIGroup (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.APIGroupClientV1.Requests.Collection">
            <summary>
                A collection-level APIGroup (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IAPIGroupClientV1">
            <summary>
                Represents a client for the Kubernetes APIGroups (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IAPIGroupClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all APIGroups.
            </summary>
            <param name="prefix">
                The prefix for the API groups (usually "api/v1" for core APIs or "/apis" for all other APIs).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.APIGroupListV1"/> containing the APIGroups.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.APIResourceClientV1">
            <summary>
                A client for the Kubernetes APIResources (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.APIResourceClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.APIResourceClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.APIResourceClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all APIResources with the specified prefix.
            </summary>
            <param name="prefix">
                The prefix for the API groups (usually "api/v1" for core APIs or "apis" for all other APIs).
            </param>
            <param name="groupVersion">
                The API group version.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.APIResourceListV1"/> containing the APIResources.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.APIResourceClientV1.Requests">
            <summary>
                Request templates for the APIResource (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.APIResourceClientV1.Requests.Collection">
            <summary>
                A collection-level APIResource (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IAPIResourceClientV1">
            <summary>
                Represents a client for the Kubernetes APIResources (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IAPIResourceClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all APIResources.
            </summary>
            <param name="prefix">
                The prefix for the API groups (usually "api/v1" for core APIs or "apis" for all other APIs).
            </param>
            <param name="groupVersion">
                The API group version.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.APIResourceListV1"/> containing the APIResources.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ConfigMapClientV1">
            <summary>
                A client for the Kubernetes ConfigMaps (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.ConfigMapClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ConfigMap with the specified name.
            </summary>
            <param name="name">
                The name of the ConfigMap to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the ConfigMap, or <c>null</c> if no ConfigMap was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ConfigMaps in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ConfigMaps.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapListV1"/> containing the ConfigMaps.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific ConfigMap.
            </summary>
            <param name="name">
                The name of the ConfigMap to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ConfigMaps.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ConfigMaps.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.Create(KubeClient.Models.ConfigMapV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ConfigMapV1"/>.
            </summary>
            <param name="newConfigMap">
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the ConfigMap to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the newly-created ConfigMap.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ConfigMapV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ConfigMapV1"/>.
            </summary>
            <param name="name">
                The name of the target ConfigMap.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the updated ConfigMap.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ConfigMapClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ConfigMap.
            </summary>
            <param name="name">
                The name of the ConfigMap to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ConfigMapClientV1.Requests">
            <summary>
                Request templates for the ConfigMap (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ConfigMapClientV1.Requests.Collection">
            <summary>
                A collection-level ConfigMap (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ConfigMapClientV1.Requests.ByName">
            <summary>
                A get-by-name ConfigMap (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ConfigMapClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name ConfigMap (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IConfigMapClientV1">
            <summary>
                Represents a client for the Kubernetes ConfigMaps (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ConfigMap with the specified name.
            </summary>
            <param name="name">
                The name of the ConfigMap to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the ConfigMap, or <c>null</c> if no ConfigMap was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ConfigMaps in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ConfigMaps.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapListV1"/> containing the ConfigMaps.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific ConfigMap.
            </summary>
            <param name="name">
                The name of the ConfigMap to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ConfigMaps.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ConfigMaps.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.Create(KubeClient.Models.ConfigMapV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ConfigMapV1"/>.
            </summary>
            <param name="newConfigMap">
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the ConfigMap to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the newly-created ConfigMap.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ConfigMapV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ConfigMapV1"/>.
            </summary>
            <param name="name">
                The name of the target ConfigMap.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ConfigMapV1"/> representing the current state for the updated ConfigMap.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IConfigMapClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ConfigMap.
            </summary>
            <param name="name">
                The name of the ConfigMap to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DaemonSetClientV1">
            <summary>
                A client for the Kubernetes DaemonSets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.DaemonSetClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the DaemonSet with the specified name.
            </summary>
            <param name="name">
                The name of the DaemonSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the DaemonSet, or <c>null</c> if no DaemonSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all DaemonSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the DaemonSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetListV1"/> containing the DaemonSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to DaemonSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the DaemonSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.Create(KubeClient.Models.DaemonSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DaemonSetV1"/>.
            </summary>
            <param name="newDaemonSet">
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the DaemonSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the newly-created DaemonSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DaemonSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DaemonSetV1"/>.
            </summary>
            <param name="name">
                The name of the target DaemonSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the updated DaemonSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DaemonSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified DaemonSet.
            </summary>
            <param name="name">
                The name of the DaemonSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the DaemonSet's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DaemonSetClientV1.Requests">
            <summary>
                Request templates for the DaemonSets (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DaemonSetClientV1.Requests.Collection">
            <summary>
                A collection-level DaemonSet (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DaemonSetClientV1.Requests.ByName">
            <summary>
                A get-by-name DaemonSet (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IDaemonSetClientV1">
            <summary>
                Represents a client for the Kubernetes DaemonSets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the DaemonSet with the specified name.
            </summary>
            <param name="name">
                The name of the DaemonSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the DaemonSet, or <c>null</c> if no DaemonSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all DaemonSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the DaemonSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetListV1"/> containing the DaemonSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to DaemonSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the DaemonSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.Create(KubeClient.Models.DaemonSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DaemonSetV1"/>.
            </summary>
            <param name="newDaemonSet">
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the DaemonSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the newly-created DaemonSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DaemonSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DaemonSetV1"/>.
            </summary>
            <param name="name">
                The name of the target DaemonSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the current state for the updated DaemonSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDaemonSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified DaemonSet.
            </summary>
            <param name="name">
                The name of the DaemonSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DaemonSetV1"/> representing the DaemonSet's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DeploymentClientV1">
            <summary>
                A client for the Kubernetes Deployments (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.DeploymentClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Deployment with the specified name.
            </summary>
            <param name="name">
                The name of the Deployment to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the Deployment, or <c>null</c> if no Deployment was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Deployments in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentListV1"/> containing the Deployments.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Deployments.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.Create(KubeClient.Models.DeploymentV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DeploymentV1"/>.
            </summary>
            <param name="newDeployment">
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the newly-created Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DeploymentV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DeploymentV1"/>.
            </summary>
            <param name="name">
                The name of the target Deployment.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the updated Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Deployment.
            </summary>
            <param name="name">
                The name of the Deployment to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the deployment's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DeploymentClientV1.Requests">
            <summary>
                Request templates for the Deployments (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DeploymentClientV1.Requests.Collection">
            <summary>
                A collection-level Deployment (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DeploymentClientV1.Requests.ByName">
            <summary>
                A get-by-name Deployment (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IDeploymentClientV1">
            <summary>
                Represents a client for the Kubernetes Deployments (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Deployment with the specified name.
            </summary>
            <param name="name">
                The name of the Deployment to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the Deployment, or <c>null</c> if no Deployment was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Deployments in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentListV1"/> containing the Deployments.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Deployments.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.Create(KubeClient.Models.DeploymentV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DeploymentV1"/>.
            </summary>
            <param name="newDeployment">
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the Deployment to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the newly-created Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DeploymentV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DeploymentV1"/>.
            </summary>
            <param name="name">
                The name of the target Deployment.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the current state for the updated Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Deployment.
            </summary>
            <param name="name">
                The name of the Deployment to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1"/> representing the deployment's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DeploymentClientV1Beta1">
            <summary>
                A client for the Kubernetes Deployments (v1beta2) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.DeploymentClientV1Beta1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Deployment with the specified name.
            </summary>
            <param name="name">
                The name of the Deployment to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the Deployment, or <c>null</c> if no Deployment was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Deployments in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentListV1Beta1"/> containing the Deployments.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Deployments.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.Create(KubeClient.Models.DeploymentV1Beta1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DeploymentV1Beta1"/>.
            </summary>
            <param name="newDeployment">
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the Deployment to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the newly-created Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DeploymentV1Beta1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DeploymentV1Beta1"/>.
            </summary>
            <param name="name">
                The name of the target Deployment.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the updated Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DeploymentClientV1Beta1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Deployment.
            </summary>
            <param name="name">
                The name of the Deployment to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the deployment's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DeploymentClientV1Beta1.Requests">
            <summary>
                Request templates for the Deployment (v1beta2) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DeploymentClientV1Beta1.Requests.Collection">
            <summary>
                A collection-level Deployment (v1beta2) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DeploymentClientV1Beta1.Requests.ByName">
            <summary>
                A get-by-name Deployment (v1beta2) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IDeploymentClientV1Beta1">
            <summary>
                Represents a client for the Kubernetes Deployments (v1beta2) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Deployment with the specified name.
            </summary>
            <param name="name">
                The name of the Deployment to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the Deployment, or <c>null</c> if no Deployment was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Deployments in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentListV1Beta1"/> containing the Deployments.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Deployments.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Deployments.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.Create(KubeClient.Models.DeploymentV1Beta1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.DeploymentV1Beta1"/>.
            </summary>
            <param name="newDeployment">
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the Deployment to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the newly-created Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.DeploymentV1Beta1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.DeploymentV1Beta1"/>.
            </summary>
            <param name="name">
                The name of the target Deployment.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the current state for the updated Deployment.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDeploymentClientV1Beta1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Deployment.
            </summary>
            <param name="name">
                The name of the Deployment to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.DeploymentV1Beta1"/> representing the deployment's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.DynamicResourceClient">
            <summary>
                A client for dynamic access to Kubernetes resource APIs.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DynamicResourceClient._modelTypeLookup">
            <summary>
                Model CLR types, keyed by resource kind and API version.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.DynamicResourceClient._listModelTypeLookup">
            <summary>
                Model CLR types, keyed by resource kind and API version.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.DynamicResourceClient"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="P:KubeClient.ResourceClients.DynamicResourceClient.ApiMetadata">
            <summary>
                Metadata for Kubernetes resource APIs.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieve a single resource by name.
            </summary>
            <param name="name">
                The resource name.
            </param>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resource.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the operation.
            </param>
            <returns>
                The resource, or <c>null</c> if the resource was not found.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                List resources.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the operation.
            </param>
            <returns>
                The resource list (can be cast to <see cref="T:KubeClient.Models.KubeResourceListV1`1"/> for access to individual resources).
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.Patch(System.String,System.String,System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument,System.String,System.Threading.CancellationToken)">
            <summary>
                Perform a JSON patch operation on a Kubernetes resource.
            </summary>
            <param name="name">
                The resource name.
            </param>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="patch">
                A <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument"/> representing the patch operation(s) to perform.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.Create``1(``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Create a Kubernetes resource.
            </summary>
            <typeparam name="TResource">
                The type of resource to create.
            </typeparam>
            <param name="resource">
                A <typeparamref name="TResource"/> representing the resource to create.
            </param>
            <param name="isNamespaced">
                Is the resource type commonly namespaced?
                
                In other words, does the resource's API path contain a "{namespace}" segment?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the newly-created resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.Apply``1(``0,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Update a Kubernetes resource using a server-side apply operation.
            </summary>
            <typeparam name="TResource">
                The type of resource to update.
            </typeparam>
            <param name="resource">
                A <typeparamref name="TResource"/> representing the resource to update.
            </param>
            <param name="fieldManager">
                The name of the field manager to use when performing the server-side apply.
            </param>
            <param name="force">
                Allow the field manager to take ownership of fields if required?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.ApplyYaml(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
                Update a Kubernetes resource using a server-side apply operation with the specified YAML.
            </summary>
            <param name="name">
                The resource name.
            </param>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="yaml">
                A string containing the resource YAML.
            </param>
            <param name="fieldManager">
                The name of the field manager to use when performing the server-side apply.
            </param>
            <param name="force">
                Allow the field manager to take ownership of fields if required?
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.Delete(System.String,System.String,System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified resource.
            </summary>
            <param name="name">
                The name of the resource to delete.
            </param>
            <param name="kind">
                The kind of resource to delete.
            </param>
            <param name="apiVersion">
                The API version of the resource to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the resource's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.EnsureApiMetadata(System.Threading.CancellationToken)">
            <summary>
                Ensure that the API metadata cache is populated.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the operation.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.GetApiPath(System.String,System.String,System.Boolean)">
            <summary>
                Get the primary path for the specified Kubernetes resource API.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="namespaced">
                Require a path with Kubernetes namespace support?
            </param>
            <returns>
                The resource API path.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.GetModelType(System.String,System.String)">
            <summary>
                Get the CLR <see cref="T:System.Type"/> of the model that corresponds to the specified Kubernetes resource type.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <returns>
                The model <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.DynamicResourceClient.GetListModelType(System.String,System.String)">
            <summary>
                Get the CLR <see cref="T:System.Type"/> of the list model that corresponds to the specified Kubernetes resource type.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <returns>
                The model <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.IDynamicResourceClient">
            <summary>
                Represents a client for dynamic access to Kubernetes resource APIs.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.IDynamicResourceClient.ApiMetadata">
            <summary>
                Metadata for Kubernetes resource APIs.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieve a single resource by name.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="name">
                The resource name.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resource.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the operation.
            </param>
            <returns>
                The resource, or <c>null</c> if the resource was not found.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                List resources.
            </summary>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the operation.
            </param>
            <returns>
                The resource list (can be cast to <see cref="T:KubeClient.Models.KubeResourceListV1`1"/> for access to individual resources).
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.Create``1(``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Create a Kubernetes resource.
            </summary>
            <typeparam name="TResource">
                The type of resource to create.
            </typeparam>
            <param name="resource">
                A <typeparamref name="TResource"/> representing the resource to create.
            </param>
            <param name="isNamespaced">
                Is the resource namespaced?
                
                In other words, does the resource's API path contain a "{namespace}" segment?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.Patch(System.String,System.String,System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument,System.String,System.Threading.CancellationToken)">
            <summary>
                Perform a JSON patch operation on a Kubernetes resource.
            </summary>
            <param name="name">
                The resource name.
            </param>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="patch">
                A <see cref="T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument"/> representing the patch operation(s) to perform.
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.Apply``1(``0,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Update a Kubernetes resource using a server-side apply operation.
            </summary>
            <typeparam name="TResource">
                The type of resource to update.
            </typeparam>
            <param name="resource">
                A <typeparamref name="TResource"/> representing the resource to update.
            </param>
            <param name="fieldManager">
                The name of the field manager to use when performing the server-side apply.
            </param>
            <param name="force">
                Allow the field manager to take ownership of fields if required?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.ApplyYaml(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
                Update a Kubernetes resource using a server-side apply operation with the specified YAML.
            </summary>
            <param name="name">
                The resource name.
            </param>
            <param name="kind">
                The resource kind.
            </param>
            <param name="apiVersion">
                The resource API version.
            </param>
            <param name="yaml">
                A string containing the resource YAML.
            </param>
            <param name="fieldManager">
                The name of the field manager to use when performing the server-side apply.
            </param>
            <param name="force">
                Allow the field manager to take ownership of fields if required?
            </param>
            <param name="kubeNamespace">
                The (optional) name of a Kubernetes namespace containing the resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IDynamicResourceClient.Delete(System.String,System.String,System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified resource.
            </summary>
            <param name="name">
                The name of the resource to delete.
            </param>
            <param name="kind">
                The kind of resource to delete.
            </param>
            <param name="apiVersion">
                The API version of the resource to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.KubeResourceV1"/> representing the resource's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.EventClientV1">
            <summary>
                A client for the Kubernetes Events (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.EventClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.EventClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.EventClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Event with the specified name.
            </summary>
            <param name="name">
                The name of the Event to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.EventV1"/> representing the current state for the Event, or <c>null</c> if no Event was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.EventClientV1.List(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Events in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Events.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Events.
            </param>
            <param name="resourceVersion">
                An optional Kubernetes resource version (<seealso cref="P:KubeClient.Models.ObjectMetaV1.ResourceVersion"/>) indicating that only events for newer versions should be returned.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.EventListV1"/> containing the events.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.EventClientV1.WatchAll(System.String,System.String,System.String,System.String)">
            <summary>
                Watch for events relating to Events.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Events.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Events.
            </param>
            <param name="resourceVersion">
                An optional Kubernetes resource version (<seealso cref="P:KubeClient.Models.ObjectMetaV1.ResourceVersion"/>) indicating that only events for newer versions should be returned.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.EventClientV1.Requests">
            <summary>
                Request templates for the Event (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.EventClientV1.Requests.Collection">
            <summary>
                A collection-level Event (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.EventClientV1.Requests.ByName">
            <summary>
                A get-by-name Event (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.EventClientV1.Requests.WatchCollection">
            <summary>
                A collection-level Event watch (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IEventClientV1">
            <summary>
                Represents a client for the Kubernetes Events (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IEventClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Event with the specified name.
            </summary>
            <param name="name">
                The name of the Event to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.EventV1"/> representing the current state for the Event, or <c>null</c> if no Event was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IEventClientV1.List(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Events in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Events.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Events.
            </param>
            <param name="resourceVersion">
                An optional Kubernetes resource version (<seealso cref="P:KubeClient.Models.ObjectMetaV1.ResourceVersion"/>) indicating that only events for newer versions should be returned.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.EventListV1"/> containing the events.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IEventClientV1.WatchAll(System.String,System.String,System.String,System.String)">
            <summary>
                Watch for events relating to Events.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Events.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Events.
            </param>
            <param name="resourceVersion">
                An optional Kubernetes resource version (<seealso cref="P:KubeClient.Models.ObjectMetaV1.ResourceVersion"/>) indicating that only events for newer versions should be returned.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.HttpExtensions">
            <summary>
                Extension methods for HTTPlease types.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.HttpExtensions.KubeResourceV1TypeInfo">
            <summary>
            The CLR <see cref="T:System.Type"/> representing <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsStatusV1Async(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.Net.HttpStatusCode[])">
            <summary>
                Read response content as a <see cref="T:KubeClient.Models.StatusV1"/>.
            </summary>
            <param name="response">
                A <see cref="T:System.Threading.Tasks.Task`1"/> representing the HTTP response.
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsStatusV1Async(System.Net.Http.HttpResponseMessage,System.Net.HttpStatusCode[])">
            <summary>
                Read response content as a <see cref="T:KubeClient.Models.StatusV1"/>.
            </summary>
            <param name="response">
                The HTTP response.
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsObjectV1Async``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.Net.HttpStatusCode[])">
            <summary>
                Read response content as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <param name="response">
                The HTTP response.
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsResourceOrStatusV1``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.String,System.Net.HttpStatusCode[])">
            <summary>
                Read response content as either a <see cref="T:KubeClient.Models.StatusV1"/> or a <typeparamref name="TResource"/> resource.<see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <typeparam name="TResource">
                The expected resource type.
            </typeparam>
            <param name="response">
                The HTTP response.
            </param>
            <param name="operationDescription">
                A short description of the operation represented by the request (used in exception message if request was not successful).
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsResourceOrStatusV1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.Type,System.String,System.Net.HttpStatusCode[])">
            <summary>
                Read response content as either a <see cref="T:KubeClient.Models.StatusV1"/> or a resource model derived from <see cref="T:KubeClient.Models.KubeResourceV1"/>.
            </summary>
            <param name="response">
                The HTTP response.
            </param>
            <param name="modelType">
                The CLR <see cref="T:System.Type"/> representing the model for the resource.
            </param>
            <param name="operationDescription">
                A short description of the operation represented by the request (used in exception message if request was not successful).
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.ReadContentAsObjectV1Async``1(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage},System.String,System.Net.HttpStatusCode[])">
            <summary>
                Read response content as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </summary>
            <param name="response">
                The HTTP response.
            </param>
            <param name="operationDescription">
                A short description of the operation represented by the request (used in exception message if request was not successful).
            </param>
            <param name="successStatusCodes">
                Optional <see cref="T:System.Net.HttpStatusCode"/>s that should be treated as representing a successful response.
            </param>
            <returns>
                The response content, as a <see cref="T:KubeClient.Models.KubeObjectV1"/>.
            </returns>
            <exception cref="T:HTTPlease.HttpRequestException`1">
                The response status code was unexpected or did not represent success.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                No formatters were configured for the request, or an appropriate formatter could not be found in the request's list of formatters.
            </exception>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.GetJsonSerializer(System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a <see cref="T:Newtonsoft.Json.JsonSerializer"/> using settings from the <see cref="T:HTTPlease.Formatters.IFormatter"/>s
            configured for the <paramref name="response"/>.
            Falls back to <see cref="P:KubeClient.ResourceClients.KubeResourceClient.SerializerSettings"/> if there is none.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.HttpExtensions.GetJsonSerializerSettings(System.Collections.Generic.IEnumerable{HTTPlease.Formatters.IFormatter})">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> from a set of <paramref name="formatters"/>.
            Falls back to <see cref="P:KubeClient.ResourceClients.KubeResourceClient.SerializerSettings"/> if there is none.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IKubeResourceClient">
            <summary>
                A client for a specific Kubernetes resource API.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.IKubeResourceClient.KubeClient">
            <summary>
                The Kubernetes API client.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IngressClientV1Beta1">
            <summary>
                A client for the Kubernetes Ingress (v1beta1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.IngressClientV1Beta1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Ingress with the specified name.
            </summary>
            <param name="name">
                The name of the Ingress to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the Ingress, or <c>null</c> if no Ingress was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Ingresses in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Ingresses.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressListV1Beta1"/> containing the Ingresses.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Ingress.
            </summary>
            <param name="name">
                The name of the Ingress to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Ingresses.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Ingresses.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.Create(KubeClient.Models.IngressV1Beta1,System.Threading.CancellationToken)">
            <summary>
                Request creation of an <see cref="T:KubeClient.Models.IngressV1Beta1"/>.
            </summary>
            <param name="newIngress">
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the Ingress to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the newly-created Ingress.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.IngressV1Beta1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of an <see cref="T:KubeClient.Models.IngressV1Beta1"/>.
            </summary>
            <param name="name">
                The name of the target Ingress.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the updated Ingress.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IngressClientV1Beta1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Ingress.
            </summary>
            <param name="name">
                The name of the Ingress to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.IngressClientV1Beta1.Requests">
            <summary>
                Request templates for the Ingress (v1beta1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.IngressClientV1Beta1.Requests.Collection">
            <summary>
                A collection-level Ingress (v1beta1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.IngressClientV1Beta1.Requests.ByName">
            <summary>
                A get-by-name Ingress (v1beta1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.IngressClientV1Beta1.Requests.WatchByName">
            <summary>
                A watch-by-name Ingress (v1beta1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IIngressClientV1Beta1">
            <summary>
                Represents a client for the Kubernetes Ingress (v1beta1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Ingress with the specified name.
            </summary>
            <param name="name">
                The name of the Ingress to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the Ingress, or <c>null</c> if no Ingress was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Ingresses in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Ingresses.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressListV1Beta1"/> containing the Ingresses.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Ingress.
            </summary>
            <param name="name">
                The name of the Ingress to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Ingresses.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Ingresses.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.Create(KubeClient.Models.IngressV1Beta1,System.Threading.CancellationToken)">
            <summary>
                Request creation of an <see cref="T:KubeClient.Models.IngressV1Beta1"/>.
            </summary>
            <param name="newIngress">
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the Ingress to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the newly-created Ingress.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.IngressV1Beta1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of an <see cref="T:KubeClient.Models.IngressV1Beta1"/>.
            </summary>
            <param name="name">
                The name of the target Ingress.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.IngressV1Beta1"/> representing the current state for the updated Ingress.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IIngressClientV1Beta1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Ingress.
            </summary>
            <param name="name">
                The name of the Ingress to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.JobClientV1">
            <summary>
                A client for the Kubernetes Jobs (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.JobClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Job with the specified name.
            </summary>
            <param name="name">
                The name of the Job to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the current state for the Job, or <c>null</c> if no Job was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Jobs in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Jobs.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobListV1"/> containing the jobs.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Job.
            </summary>
            <param name="name">
                The name of the job to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Jobs.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Jobs.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.Create(KubeClient.Models.JobV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.JobV1"/>.
            </summary>
            <param name="newJob">
                A <see cref="T:KubeClient.Models.JobV1"/> representing the Job to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the current state for the newly-created Job.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.JobClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Job.
            </summary>
            <param name="name">
                The name of the Job to delete.
            </param>
            <param name="kubeNamespace">
                The Kubernetes namespace containing the Job to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the job's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.JobClientV1.Requests">
            <summary>
                Request templates for the Job (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.JobClientV1.Requests.Collection">
            <summary>
                A collection-level Job (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.JobClientV1.Requests.ByName">
            <summary>
                A get-by-name Job (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.JobClientV1.Requests.WatchCollection">
            <summary>
                A collection-level Job watch (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.JobClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name Job (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IJobClientV1">
            <summary>
                Represents a client for the Kubernetes Jobs (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Job with the specified name.
            </summary>
            <param name="name">
                The name of the Job to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the current state for the Job, or <c>null</c> if no Job was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Jobs in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Jobs.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobListV1"/> containing the jobs.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Job.
            </summary>
            <param name="name">
                The name of the job to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Jobs.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Jobs.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.Create(KubeClient.Models.JobV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.JobV1"/>.
            </summary>
            <param name="newJob">
                A <see cref="T:KubeClient.Models.JobV1"/> representing the Job to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the current state for the newly-created Job.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IJobClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Job.
            </summary>
            <param name="name">
                The name of the Job to delete.
            </param>
            <param name="kubeNamespace">
                The Kubernetes namespace containing the Job to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.JobV1"/> representing the job's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.KubeResourceClient">
            <summary>
                The base class for Kubernetes resource API clients.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.KubeResourceClient.DefaultStreamingBufferSize">
            <summary>
                The default buffer size to use when streaming data from the Kubernetes API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.KubeResourceClient.PatchMediaType">
            <summary>
                The media type used to indicate that request is a Kubernetes PATCH request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.KubeResourceClient.MergePatchMediaType">
            <summary>
                The media type used to indicate that request is a Kubernetes merge-style PATCH request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.KubeResourceClient.ApplyPatchJsonMediaType">
            <summary>
                The media type used to indicate that request is a Kubernetes server-side-apply PATCH request in JSON format.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.KubeResourceClient.ApplyPatchYamlMediaType">
            <summary>
                The media type used to indicate that request is a Kubernetes server-side-apply PATCH request in YAML format.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.SerializerSettings">
            <summary>
                JSON serialisation settings.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.KubeRequest">
            <summary>
                The factory for Kubernetes API requests.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.KubeResourceClient"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.KubeClient">
            <summary>
                The Kubernetes API client.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.KubeClient#ResourceClients#IKubeResourceClient#KubeClient">
            <summary>
                The Kubernetes API client (for <see cref="T:KubeClient.ResourceClients.IKubeResourceClient"/>).
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.Http">
            <summary>
                The underlying HTTP client.
            </summary>
        </member>
        <member name="P:KubeClient.ResourceClients.KubeResourceClient.LoggerFactory">
            <summary>
                An <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used to create loggers for client components.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.GetSingleResource``1(HTTPlease.HttpRequest,System.Threading.CancellationToken)">
            <summary>
                Get a single resource, returning <c>null</c> if it does not exist.
            </summary>
            <typeparam name="TResource">
                The type of resource to retrieve.
            </typeparam>
            <param name="request">
                An <see cref="T:HTTPlease.HttpRequest"/> representing the resource to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the current state for the resource, or <c>null</c> if no resource was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.GetResourceList``1(HTTPlease.HttpRequest,System.Threading.CancellationToken)">
            <summary>
                Get a list of resources.
            </summary>
            <typeparam name="TResourceList">
                The type of resource list to retrieve.
            </typeparam>
            <param name="request">
                An <see cref="T:HTTPlease.HttpRequest"/> representing the resource to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResourceList"/> containing the resources.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.PatchResource``1(System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{``0}},HTTPlease.HttpRequest,System.Threading.CancellationToken)">
            <summary>
                Perform a JSON patch operation on a Kubernetes resource.
            </summary>
            <typeparam name="TResource">
                The target resource type.
            </typeparam>
            <param name="patchAction">
                A delegate that performs customisation of the patch operation.
            </param>
            <param name="request">
                An <see cref="T:HTTPlease.HttpRequest"/> representing the patch request.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.PatchResourceRaw``1(System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument},HTTPlease.HttpRequest,System.Threading.CancellationToken)">
            <summary>
                Perform a JSON patch operation on a Kubernetes resource.
            </summary>
            <typeparam name="TResource">
                The target resource type.
            </typeparam>
            <param name="patchAction">
                A delegate that performs customisation of the patch operation.
            </param>
            <param name="request">
                An <see cref="T:HTTPlease.HttpRequest"/> representing the patch request.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the updated resource.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.DeleteResource``1(HTTPlease.HttpRequest,System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified resource.
            </summary>
            <typeparam name="TResource">
                The type of resource to delete.
            </typeparam>
            <param name="resourceByNameRequestTemplate">
                The HTTP request template for addressing a <typeparamref name="TResource"/> by name.
            </param>
            <param name="name">
                The name of the resource to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the resource's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.DeleteGlobalResource``1(HTTPlease.HttpRequest,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified global (non-namespaced) resource.
            </summary>
            <typeparam name="TResource">
                The type of resource to delete.
            </typeparam>
            <param name="resourceByNameNoNamespaceRequestTemplate">
                The HTTP request template for addressing a non-namespaced <typeparamref name="TResource"/> by name.
            </param>
            <param name="name">
                The name of the resource to delete.
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <typeparamref name="TResource"/> representing the resource's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.ObserveEvents``1(HTTPlease.HttpRequest,System.String)">
            <summary>
                Get an <see cref="T:System.IObservable`1"/> for <see cref="T:KubeClient.Models.IResourceEventV1`1"/>s streamed from an HTTP GET request.
            </summary>
            <typeparam name="TResource">
                The resource type that the events relate to.
            </typeparam>
            <param name="request">
                The <see cref="T:HTTPlease.HttpRequest"/> to execute.
            </param>
            <param name="operationDescription">
                A short description of the operation (used in error messages if the request fails).
            </param>
            <returns>
                The <see cref="T:System.IObservable`1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.ObserveEventsDynamic(HTTPlease.HttpRequest,System.String)">
            <summary>
                Get an <see cref="T:System.IObservable`1"/> for dynamically-typed <see cref="T:KubeClient.Models.IResourceEventV1`1"/>s streamed from an HTTP GET request.
            </summary>
            <param name="request">
                The <see cref="T:HTTPlease.HttpRequest"/> to execute.
            </param>
            <param name="operationDescription">
                A short description of the operation (used in error messages if the request fails).
            </param>
            <returns>
                The <see cref="T:System.IObservable`1"/>.
            </returns>
            <remarks>If you have custom model types you need to deserialise, ensure that their assemblies are added to <see cref="P:KubeClient.KubeClientOptions.ModelTypeAssemblies"/>.</remarks>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.ObserveLines(HTTPlease.HttpRequest,System.String,System.Int32)">
            <summary>
                Get an <see cref="T:System.IObservable`1"/> for lines streamed from an HTTP GET request.
            </summary>
            <param name="request">
                The <see cref="T:HTTPlease.HttpRequest"/> to execute.
            </param>
            <param name="operationDescription">
                A short description of the operation (used in error messages if the request fails).
            </param>
            <param name="bufferSize">
                The buffer size to use when streaming data.
            
                Default is 2048 bytes.
            </param>
            <returns>
                The <see cref="T:System.IObservable`1"/>.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.KubeResourceClient.CheckForEventError(System.String,System.String)">
            <summary>
                Check if an error was encountered in an event stream.
            </summary>
            <param name="line">
                The current line in the event stream.
            </param>
            <param name="operationDescription">
                A short description of the operation being performed (used in exception message if an error is encountered).
            </param>
        </member>
        <member name="T:KubeClient.ResourceClients.NamespaceClientV1">
            <summary>
                A client for the Kubernetes Namespaces (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.NamespaceClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Namespace with the specified name.
            </summary>
            <param name="name">
                The name of the Namespace to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the current state for the Namespace, or <c>null</c> if no Namespace was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Namespaces in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Namespaces.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceListV1"/> containing the Namespaces.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.Watch(System.String)">
            <summary>
                Watch for events relating to a specific Namespace.
            </summary>
            <param name="name">
                The name of the Namespace to watch.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.Create(KubeClient.Models.NamespaceV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NamespaceV1"/>.
            </summary>
            <param name="newNamespace">
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the Namespace to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the current state for the newly-created Namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NamespaceClientV1.Delete(System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Namespace.
            </summary>
            <param name="name">
                The name of the Namespace to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the namespace's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.NamespaceClientV1.Requests">
            <summary>
                Request templates for the Namespace (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NamespaceClientV1.Requests.Collection">
            <summary>
                A collection-level Namespace (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NamespaceClientV1.Requests.ByName">
            <summary>
                A get-by-name Namespace (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NamespaceClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name Namespace (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.INamespaceClientV1">
            <summary>
                Represents a client for the Kubernetes Namespaces (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.INamespaceClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Namespace with the specified name.
            </summary>
            <param name="name">
                The name of the Namespace to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the current state for the Namespace, or <c>null</c> if no Namespace was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INamespaceClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Namespaces in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Namespaces.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceListV1"/> containing the Namespaces.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INamespaceClientV1.Watch(System.String)">
            <summary>
                Watch for events relating to a specific Namespace.
            </summary>
            <param name="name">
                The name of the Namespace to watch.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INamespaceClientV1.Create(KubeClient.Models.NamespaceV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NamespaceV1"/>.
            </summary>
            <param name="newNamespace">
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the Namespace to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the current state for the newly-created Namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INamespaceClientV1.Delete(System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Namespace.
            </summary>
            <param name="name">
                The name of the Namespace to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NamespaceV1"/> representing the namespace's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.NetworkPolicyClientV1">
            <summary>
                A client for the Kubernetes NetworkPolicy resources (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.NetworkPolicyClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the NetworkPolicy with the specified name.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the current state for the NetworkPolicy, or <c>null</c> if no NetworkPolicy was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all NetworkPolicy resources in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the NetworkPolicy resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyListV1"/> containing the NetworkPolicys.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific NetworkPolicy.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to NetworkPolicy resources.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the NetworkPolicy resources.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.Create(KubeClient.Models.NetworkPolicyV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NetworkPolicyV1"/>.
            </summary>
            <param name="newNetworkPolicy">
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the NetworkPolicy to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the current state for the newly-created NetworkPolicy.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NetworkPolicyClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified NetworkPolicy.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to delete.
            </param>
            <param name="kubeNamespace">
                The Kubernetes namespace containing the NetworkPolicy to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the NetworkPolicy's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.NetworkPolicyClientV1.Requests">
            <summary>
                Request templates for the NetworkPolicy (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NetworkPolicyClientV1.Requests.Collection">
            <summary>
                A collection-level NetworkPolicy (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NetworkPolicyClientV1.Requests.ByName">
            <summary>
                A get-by-name NetworkPolicy (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NetworkPolicyClientV1.Requests.WatchCollection">
            <summary>
                A collection-level NetworkPolicy watch (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NetworkPolicyClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name NetworkPolicy (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.INetworkPolicyClientV1">
            <summary>
                Represents a client for the Kubernetes NetworkPolicy resources (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the NetworkPolicy with the specified name.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the current state for the NetworkPolicy, or <c>null</c> if no NetworkPolicy was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all NetworkPolicy resources in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the NetworkPolicy resources.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyListV1"/> containing the NetworkPolicys.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific NetworkPolicy.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to NetworkPolicy resources.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the NetworkPolicy resources.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.Create(KubeClient.Models.NetworkPolicyV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NetworkPolicyV1"/>.
            </summary>
            <param name="newNetworkPolicy">
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the NetworkPolicy to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the current state for the newly-created NetworkPolicy.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INetworkPolicyClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified NetworkPolicy.
            </summary>
            <param name="name">
                The name of the NetworkPolicy to delete.
            </param>
            <param name="kubeNamespace">
                The Kubernetes namespace containing the NetworkPolicy to delete.
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NetworkPolicyV1"/> representing the NetworkPolicy's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.NodeClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.NodeClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Node with the specified name.
            </summary>
            <param name="name">
                The name of the Node to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the current state for the Node, or <c>null</c> if no Node was found with the specified name.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Nodes, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Nodes.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeListV1"/> containing the Nodes.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.WatchAll(System.String)">
            <summary>
                Watch for events relating to Nodes.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Nodes.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.Create(KubeClient.Models.NodeV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NodeV1"/>.
            </summary>
            <param name="newNode">
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the Node to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the current state for the newly-created Node.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.NodeClientV1.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Node.
            </summary>
            <param name="name">
                The name of the Node to delete.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.NodeClientV1.Requests">
            <summary>
                Request templates for the Nodes (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NodeClientV1.Requests.Collection">
            <summary>
                A collection-level Node (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.NodeClientV1.Requests.ByName">
            <summary>
                A get-by-name Node (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.INodeClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.INodeClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Node with the specified name.
            </summary>
            <param name="name">
                The name of the Node to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the current state for the Node, or <c>null</c> if no Node was found with the specified name.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INodeClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Nodes, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Nodes.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeListV1"/> containing the Nodes.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INodeClientV1.WatchAll(System.String)">
            <summary>
                Watch for events relating to Nodes.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Nodes.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INodeClientV1.Create(KubeClient.Models.NodeV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.NodeV1"/>.
            </summary>
            <param name="newNode">
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the Node to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.NodeV1"/> representing the current state for the newly-created Node.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.INodeClientV1.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Node.
            </summary>
            <param name="name">
                The name of the Node to delete.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PersistentVolumeClaimClientV1">
            <summary>
                A client for the Kubernetes PersistentVolumeClaims (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.PersistentVolumeClaimClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the PersistentVolumeClaim with the specified name.
            </summary>
            <param name="name">
                The name of the PersistentVolumeClaim to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the current state for the PersistentVolumeClaim, or <c>null</c> if no PersistentVolumeClaim was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all PersistentVolumeClaims in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumeClaims.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimListV1"/> containing the PersistentVolumeClaims.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Create(KubeClient.Models.PersistentVolumeClaimV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/>.
            </summary>
            <param name="newPersistentVolumeClaim">
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the PersistentVolumeClaim to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the current state for the newly-created PersistentVolumeClaim.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified PersistentVolumeClaim.
            </summary>
            <param name="name">
                The name of the PersistentVolumeClaim to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how (or if) dependent resources should be deleted.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the persistent volume claim's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Requests">
            <summary>
                Request templates for the PersistentVolumeClaim (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Requests.Collection">
            <summary>
                A collection-level PersistentVolumeClaim (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PersistentVolumeClaimClientV1.Requests.ByName">
            <summary>
                A get-by-name PersistentVolumeClaim (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IPersistentVolumeClaimClientV1">
            <summary>
                A client for the Kubernetes PersistentVolumeClaims (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClaimClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the PersistentVolumeClaim with the specified name.
            </summary>
            <param name="name">
                The name of the PersistentVolumeClaim to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the current state for the PersistentVolumeClaim, or <c>null</c> if no PersistentVolumeClaim was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClaimClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all PersistentVolumeClaims in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumeClaims.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimListV1"/> containing the PersistentVolumeClaims.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClaimClientV1.Create(KubeClient.Models.PersistentVolumeClaimV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/>.
            </summary>
            <param name="newPersistentVolumeClaim">
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the PersistentVolumeClaim to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the current state for the newly-created PersistentVolumeClaim.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClaimClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified PersistentVolumeClaim.
            </summary>
            <param name="name">
                The name of the PersistentVolumeClaim to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how (or if) dependent resources should be deleted.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeClaimV1"/> representing the persistent volume claim's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PersistentVolumeClientV1">
            <summary>
                A client for the Kubernetes PersistentVolumes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.PersistentVolumeClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the PersistentVolume with the specified name.
            </summary>
            <param name="name">
                The name of the PersistentVolume to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the current state for the PersistentVolume, or <c>null</c> if no PersistentVolume was found with the specified name.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all PersistentVolumes, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumes.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeListV1"/> containing the PersistentVolumes.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.WatchAll(System.String)">
            <summary>
                Watch for events relating to PersistentVolumes.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumes.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.Create(KubeClient.Models.PersistentVolumeV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PersistentVolumeV1"/>.
            </summary>
            <param name="newPersistentVolume">
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the PersistentVolume to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the current state for the newly-created PersistentVolume.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PersistentVolumeClientV1.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified PersistentVolume.
            </summary>
            <param name="name">
                The name of the PersistentVolume to delete.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PersistentVolumeClientV1.Requests">
            <summary>
                Request templates for the PersistentVolumes (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PersistentVolumeClientV1.Requests.Collection">
            <summary>
                A collection-level PersistentVolume (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PersistentVolumeClientV1.Requests.ByName">
            <summary>
                A get-by-name PersistentVolume (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IPersistentVolumeClientV1">
            <summary>
                A client for the Kubernetes PersistentVolumes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClientV1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
                Get the PersistentVolume with the specified name.
            </summary>
            <param name="name">
                The name of the PersistentVolume to retrieve.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the current state for the PersistentVolume, or <c>null</c> if no PersistentVolume was found with the specified name.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClientV1.List(System.String,System.Threading.CancellationToken)">
            <summary>
                Get all PersistentVolumes, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumes.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeListV1"/> containing the PersistentVolumes.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClientV1.WatchAll(System.String)">
            <summary>
                Watch for events relating to PersistentVolumes.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the PersistentVolumes.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClientV1.Create(KubeClient.Models.PersistentVolumeV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PersistentVolumeV1"/>.
            </summary>
            <param name="newPersistentVolume">
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the PersistentVolume to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PersistentVolumeV1"/> representing the current state for the newly-created PersistentVolume.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPersistentVolumeClientV1.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified PersistentVolume.
            </summary>
            <param name="name">
                The name of the PersistentVolume to delete.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PodClientV1">
            <summary>
                A client for the Kubernetes Pods (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.PodClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the Pod to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the current state for the Pod, or <c>null</c> if no Pod was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Pods in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Pods.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Pods.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodListV1"/> containing the Pods.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.WatchAll(System.String,System.String,System.String)">
            <summary>
                Watch for events relating to Pods.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Pods.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Pods.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.Logs(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Get the combined logs for the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the target Pod.
            </param>
            <param name="containerName">
                The name of the container.
            
                Not required if the pod only has a single container.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="limitBytes">
                Limit the number of bytes returned (optional).
            </param>
            <param name="tailLines">
                The number of lines from the end of the log to show (optional).
            
                If not specified, logs are since from the creation of the container.
            </param>
            <param name="previous">
                Return previous terminated container logs (defaults to <c>false</c>)?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A string containing the logs.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.StreamLogs(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Stream the combined logs for the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the target Pod.
            </param>
            <param name="containerName">
                The name of the container.
            
                Not required if the pod only has a single container.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="limitBytes">
                Limit the number of bytes returned (optional).
            </param>
            <param name="tailLines">
                The number of lines from the end of the log to show (optional).
            
                If not specified, logs are since from the creation of the container.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> sequence of lines from the log.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.Create(KubeClient.Models.PodV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PodV1"/>.
            </summary>
            <param name="newPod">
                A <see cref="T:KubeClient.Models.PodV1"/> representing the Pod to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the current state for the newly-created Pod.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.PodClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Pod.
            </summary>
            <param name="name">
                The name of the Pod to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the pod's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.PodClientV1.Requests">
            <summary>
                Request templates for the Pods (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PodClientV1.Requests.Collection">
            <summary>
                A collection-level Pod (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PodClientV1.Requests.ByName">
            <summary>
                A get-by-name Pod (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.PodClientV1.Requests.Logs">
            <summary>
                A get-logs Pod (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IPodClientV1">
            <summary>
                Represents a client for the Kubernetes Pods (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the Pod to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the current state for the Pod, or <c>null</c> if no Pod was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Pods in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Pods.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Pods.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodListV1"/> containing the Pods.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.WatchAll(System.String,System.String,System.String)">
            <summary>
                Watch for events relating to Pods.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Pods.
            </param>
            <param name="fieldSelector">
                An optional Kubernetes field selector expression used to filter the Pods.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.Logs(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Get the combined logs for the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the target Pod.
            </param>
            <param name="containerName">
                The name of the container.
            
                Not required if the pod only has a single container.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="limitBytes">
                Limit the number of bytes returned (optional).
            </param>
            <param name="tailLines">
                The number of lines from the end of the log to show (optional).
            
                If not specified, logs are since from the creation of the container.
            </param>
            <param name="previous">
                Return previous terminated container logs (defaults to <c>false</c>)?
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A string containing the logs.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.StreamLogs(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Stream the combined logs for the Pod with the specified name.
            </summary>
            <param name="name">
                The name of the target Pod.
            </param>
            <param name="containerName">
                The name of the container.
            
                Not required if the pod only has a single container.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="limitBytes">
                Limit the number of bytes returned (optional).
            </param>
            <param name="tailLines">
                The number of lines from the end of the log to show (optional).
            
                If not specified, logs are since from the creation of the container.
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> sequence of lines from the log.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.Create(KubeClient.Models.PodV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.PodV1"/>.
            </summary>
            <param name="newPod">
                A <see cref="T:KubeClient.Models.PodV1"/> representing the Pod to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the current state for the newly-created Pod.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IPodClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Pod.
            </summary>
            <param name="name">
                The name of the Pod to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                A <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.PodV1"/> representing the pod's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/> indicating the operation result.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ReplicaSetClientV1">
            <summary>
                A client for the Kubernetes ReplicaSets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.ReplicaSetClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ReplicaSet with the specified name.
            </summary>
            <param name="name">
                The name of the ReplicaSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the ReplicaSet, or <c>null</c> if no ReplicaSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ReplicaSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicaSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetListV1"/> containing the ReplicaSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ReplicaSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicaSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.Create(KubeClient.Models.ReplicaSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ReplicaSetV1"/>.
            </summary>
            <param name="newReplicaSet">
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the ReplicaSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the newly-created ReplicaSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ReplicaSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ReplicaSetV1"/>.
            </summary>
            <param name="name">
                The name of the target ReplicaSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the updated ReplicaSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicaSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ReplicaSet.
            </summary>
            <param name="name">
                The name of the ReplicaSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the replica set's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ReplicaSetClientV1.Requests">
            <summary>
                Request templates for the ReplicaSet (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ReplicaSetClientV1.Requests.Collection">
            <summary>
                A collection-level ReplicaSet (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ReplicaSetClientV1.Requests.ByName">
            <summary>
                A get-by-name ReplicaSet (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IReplicaSetClientV1">
            <summary>
                A client for the Kubernetes ReplicaSets (v1beta1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ReplicaSet with the specified name.
            </summary>
            <param name="name">
                The name of the ReplicaSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the ReplicaSet, or <c>null</c> if no ReplicaSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ReplicaSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicaSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetListV1"/> containing the ReplicaSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ReplicaSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicaSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.Create(KubeClient.Models.ReplicaSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ReplicaSetV1"/>.
            </summary>
            <param name="newReplicaSet">
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the ReplicaSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the newly-created ReplicaSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ReplicaSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ReplicaSetV1"/>.
            </summary>
            <param name="name">
                The name of the target ReplicaSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the current state for the updated ReplicaSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicaSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ReplicaSet.
            </summary>
            <param name="name">
                The name of the ReplicaSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicaSetV1"/> representing the replica set's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ReplicationControllerClientV1">
            <summary>
                A client for the Kubernetes ReplicationControllers (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.ReplicationControllerClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ReplicationController with the specified name.
            </summary>
            <param name="name">
                The name of the ReplicationController to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the ReplicationController, or <c>null</c> if no ReplicationController was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ReplicationControllers in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicationControllers.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerListV1"/> containing the ReplicationControllers.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ReplicationControllers.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicationControllers.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.Create(KubeClient.Models.ReplicationControllerV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ReplicationControllerV1"/>.
            </summary>
            <param name="newController">
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the ReplicationController to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the newly-created ReplicationController.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ReplicationControllerV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ReplicationControllerV1"/>.
            </summary>
            <param name="name">
                The name of the target ReplicationController.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the updated ReplicationController.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ReplicationControllerClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ReplicationController.
            </summary>
            <param name="name">
                The name of the ReplicationController to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the replication controller's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ReplicationControllerClientV1.Requests">
            <summary>
                Request templates for the ReplicationController (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ReplicationControllerClientV1.Requests.Collection">
            <summary>
                A collection-level ReplicationController (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ReplicationControllerClientV1.Requests.ByName">
            <summary>
                A get-by-name ReplicationController (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IReplicationControllerClientV1">
            <summary>
                A client for the Kubernetes ReplicationControllers (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ReplicationController with the specified name.
            </summary>
            <param name="name">
                The name of the ReplicationController to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the ReplicationController, or <c>null</c> if no ReplicationController was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ReplicationControllers in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicationControllers.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerListV1"/> containing the ReplicationControllers.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to ReplicationControllers.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ReplicationControllers.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.Create(KubeClient.Models.ReplicationControllerV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ReplicationControllerV1"/>.
            </summary>
            <param name="newReplicationController">
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the ReplicationController to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the newly-created ReplicationController.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ReplicationControllerV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ReplicationControllerV1"/>.
            </summary>
            <param name="name">
                The name of the target ReplicationController.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the current state for the updated ReplicationController.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IReplicationControllerClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ReplicationController.
            </summary>
            <param name="name">
                The name of the ReplicationController to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ReplicationControllerV1"/> representing the replication controller's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.RoleBindingClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.RoleBindingClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the RoleBinding with the specified name.
            </summary>
            <param name="name">
                The name of the RoleBinding to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the RoleBinding, or <c>null</c> if no RoleBinding was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all RoleBindings in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the RoleBindings.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingListV1"/> containing the role bindings.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific RoleBinding.
            </summary>
            <param name="name">
                The name of the RoleBinding to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.Create(KubeClient.Models.RoleBindingV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.RoleBindingV1"/>.
            </summary>
            <param name="newRoleBinding">
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the RoleBinding to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the newly-created RoleBinding.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.RoleBindingV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.RoleBindingV1"/>.
            </summary>
            <param name="name">
                The name of the target RoleBinding.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the updated RoleBinding.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleBindingClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified RoleBinding.
            </summary>
            <param name="name">
                The name of the RoleBinding to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.RoleBindingClientV1.Requests">
            <summary>
                Request templates for the RoleBinding (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleBindingClientV1.Requests.Collection">
            <summary>
                A collection-level RoleBinding (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleBindingClientV1.Requests.ByName">
            <summary>
                A get-by-name RoleBinding (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleBindingClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name RoleBinding (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IRoleBindingClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the RoleBinding with the specified name.
            </summary>
            <param name="name">
                The name of the RoleBinding to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the RoleBinding, or <c>null</c> if no RoleBinding was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all RoleBindings in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the RoleBindings.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingListV1"/> containing the RoleBindings.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific RoleBinding.
            </summary>
            <param name="name">
                The name of the RoleBinding to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.Create(KubeClient.Models.RoleBindingV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.RoleBindingV1"/>.
            </summary>
            <param name="newRoleBinding">
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the RoleBinding to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the newly-created RoleBinding.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.RoleBindingV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.RoleBindingV1"/>.
            </summary>
            <param name="name">
                The name of the target RoleBinding.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleBindingV1"/> representing the current state for the updated RoleBinding.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleBindingClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified RoleBinding.
            </summary>
            <param name="name">
                The name of the RoleBinding to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.RoleClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.RoleClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Role with the specified name.
            </summary>
            <param name="name">
                The name of the Role to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the Role, or <c>null</c> if no Role was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Roles in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Roles.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleListV1"/> containing the roles.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Role.
            </summary>
            <param name="name">
                The name of the Role to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.Create(KubeClient.Models.RoleV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.RoleV1"/>.
            </summary>
            <param name="newRole">
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the Role to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the newly-created Role.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.RoleV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.RoleV1"/>.
            </summary>
            <param name="name">
                The name of the target Role.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the updated Role.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.RoleClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Role.
            </summary>
            <param name="name">
                The name of the Role to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.RoleClientV1.Requests">
            <summary>
                Request templates for the Role (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleClientV1.Requests.Collection">
            <summary>
                A collection-level Role (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleClientV1.Requests.ByName">
            <summary>
                A get-by-name Role (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.RoleClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name Role (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IRoleClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Role with the specified name.
            </summary>
            <param name="name">
                The name of the Role to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the Role, or <c>null</c> if no Role was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Roles in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Roles.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleListV1"/> containing the Roles.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Role.
            </summary>
            <param name="name">
                The name of the Role to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.Create(KubeClient.Models.RoleV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.RoleV1"/>.
            </summary>
            <param name="newRole">
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the Role to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the newly-created Role.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.RoleV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.RoleV1"/>.
            </summary>
            <param name="name">
                The name of the target Role.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.RoleV1"/> representing the current state for the updated Role.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IRoleClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Role.
            </summary>
            <param name="name">
                The name of the Role to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.SecretClientV1">
            <summary>
                A client for the Kubernetes Secrets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.SecretClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Secret with the specified name.
            </summary>
            <param name="name">
                The name of the Secret to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the Secret, or <c>null</c> if no Secret was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Secrets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Secrets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretListV1"/> containing the secrets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Secret.
            </summary>
            <param name="name">
                The name of the Secret to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Secrets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Secrets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.Create(KubeClient.Models.SecretV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.SecretV1"/>.
            </summary>
            <param name="newSecret">
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the Secret to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the newly-created Secret.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.SecretV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.SecretV1"/>.
            </summary>
            <param name="name">
                The name of the target Secret.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the updated Secret.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.SecretClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Secret.
            </summary>
            <param name="name">
                The name of the Secret to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.SecretClientV1.Requests">
            <summary>
                Request templates for the Secret (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.SecretClientV1.Requests.Collection">
            <summary>
                A collection-level Secret (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.SecretClientV1.Requests.ByName">
            <summary>
                A get-by-name Secret (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.SecretClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name Secret (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.ISecretClientV1">
            <summary>
                Represents a client for the Kubernetes Secrets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Secret with the specified name.
            </summary>
            <param name="name">
                The name of the Secret to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the Secret, or <c>null</c> if no Secret was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Secrets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Secrets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretListV1"/> containing the Secrets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Secret.
            </summary>
            <param name="name">
                The name of the Secret to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Secrets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Secrets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.Create(KubeClient.Models.SecretV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.SecretV1"/>.
            </summary>
            <param name="newSecret">
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the Secret to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the newly-created Secret.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.SecretV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.SecretV1"/>.
            </summary>
            <param name="name">
                The name of the target Secret.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.SecretV1"/> representing the current state for the updated Secret.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ISecretClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Secret.
            </summary>
            <param name="name">
                The name of the Secret to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ServiceAccountClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.ServiceAccountClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ServiceAccount with the specified name.
            </summary>
            <param name="name">
                The name of the ServiceAccount to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the ServiceAccount, or <c>null</c> if no ServiceAccount was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ServiceAccounts in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ServiceAccounts.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountListV1"/> containing the service accounts.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific ServiceAccount.
            </summary>
            <param name="name">
                The name of the ServiceAccount to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.Create(KubeClient.Models.ServiceAccountV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ServiceAccountV1"/>.
            </summary>
            <param name="newServiceAccount">
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the ServiceAccount to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the newly-created ServiceAccount.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ServiceAccountV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ServiceAccountV1"/>.
            </summary>
            <param name="name">
                The name of the target ServiceAccount.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the updated ServiceAccount.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceAccountClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ServiceAccount.
            </summary>
            <param name="name">
                The name of the ServiceAccount to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ServiceAccountClientV1.Requests">
            <summary>
                Request templates for the ServiceAccount (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceAccountClientV1.Requests.Collection">
            <summary>
                A collection-level ServiceAccount (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceAccountClientV1.Requests.ByName">
            <summary>
                A get-by-name ServiceAccount (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceAccountClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name ServiceAccount (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IServiceAccountClientV1">
            <summary>
                A client for the Kubernetes Nodes (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the ServiceAccount with the specified name.
            </summary>
            <param name="name">
                The name of the ServiceAccount to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the ServiceAccount, or <c>null</c> if no ServiceAccount was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all ServiceAccounts in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the ServiceAccounts.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountListV1"/> containing the ServiceAccounts.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific ServiceAccount.
            </summary>
            <param name="name">
                The name of the ServiceAccount to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.Create(KubeClient.Models.ServiceAccountV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ServiceAccountV1"/>.
            </summary>
            <param name="newServiceAccount">
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the ServiceAccount to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the newly-created ServiceAccount.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ServiceAccountV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ServiceAccountV1"/>.
            </summary>
            <param name="name">
                The name of the target ServiceAccount.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceAccountV1"/> representing the current state for the updated ServiceAccount.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceAccountClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified ServiceAccount.
            </summary>
            <param name="name">
                The name of the ServiceAccount to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ServiceClientV1">
            <summary>
                A client for the Kubernetes Services (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.ServiceClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Service with the specified name.
            </summary>
            <param name="name">
                The name of the Service to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the Service, or <c>null</c> if no Service was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Services in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Services.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceListV1"/> containing the Services.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Service.
            </summary>
            <param name="name">
                The name of the Service to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to Services.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Services.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.Create(KubeClient.Models.ServiceV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ServiceV1"/>.
            </summary>
            <param name="newService">
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the Service to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the newly-created Service.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ServiceV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ServiceV1"/>.
            </summary>
            <param name="name">
                The name of the target Service.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the updated Service.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.ServiceClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Service.
            </summary>
            <param name="name">
                The name of the Service to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.ServiceClientV1.Requests">
            <summary>
                Request templates for the Service (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceClientV1.Requests.Collection">
            <summary>
                A collection-level Service (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceClientV1.Requests.ByName">
            <summary>
                A get-by-name Service (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.ServiceClientV1.Requests.WatchByName">
            <summary>
                A watch-by-name Service (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IServiceClientV1">
            <summary>
                Represents a client for the Kubernetes Services (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the Service with the specified name.
            </summary>
            <param name="name">
                The name of the Service to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the Service, or <c>null</c> if no Service was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all Services in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the Services.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceListV1"/> containing the Services.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.Watch(System.String,System.String)">
            <summary>
                Watch for events relating to a specific Service.
            </summary>
            <param name="name">
                The name of the Service to watch.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.Create(KubeClient.Models.ServiceV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.ServiceV1"/>.
            </summary>
            <param name="newService">
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the Service to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the newly-created Service.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.ServiceV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.ServiceV1"/>.
            </summary>
            <param name="name">
                The name of the target Service.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.ServiceV1"/> representing the current state for the updated Service.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IServiceClientV1.Delete(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified Service.
            </summary>
            <param name="name">
                The name of the Service to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                An <see cref="T:KubeClient.Models.StatusV1"/> indicating the result of the request.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.StatefulSetClientV1">
            <summary>
                A client for the Kubernetes StatefulSet (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.#ctor(KubeClient.IKubeApiClient)">
            <summary>
                Create a new <see cref="T:KubeClient.ResourceClients.StatefulSetClientV1"/>.
            </summary>
            <param name="client">
                The Kubernetes API client.
            </param>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the StatefulSet with the specified name.
            </summary>
            <param name="name">
                The name of the StatefulSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the StatefulSet, or <c>null</c> if no StatefulSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all StatefulSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the StatefulSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetListV1"/> containing the StatefulSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to StatefulSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the StatefulSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.Create(KubeClient.Models.StatefulSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.StatefulSetV1"/>.
            </summary>
            <param name="newStatefulSet">
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the StatefulSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the newly-created StatefulSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.StatefulSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.StatefulSetV1"/>.
            </summary>
            <param name="name">
                The name of the target StatefulSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the updated StatefulSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.StatefulSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified StatefulSet.
            </summary>
            <param name="name">
                The name of the StatefulSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the StatefulSet's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.ResourceClients.StatefulSetClientV1.Requests">
            <summary>
                Request templates for the StatefulSets (v1) API.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.StatefulSetClientV1.Requests.Collection">
            <summary>
                A collection-level StatefulSet (v1) request.
            </summary>
        </member>
        <member name="F:KubeClient.ResourceClients.StatefulSetClientV1.Requests.ByName">
            <summary>
                A get-by-name StatefulSet (v1) request.
            </summary>
        </member>
        <member name="T:KubeClient.ResourceClients.IStatefulSetClientV1">
            <summary>
                Represents a client for the Kubernetes StatefulSets (v1) API.
            </summary>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get the StatefulSet with the specified name.
            </summary>
            <param name="name">
                The name of the StatefulSet to retrieve.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the StatefulSet, or <c>null</c> if no StatefulSet was found with the specified name and namespace.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Get all StatefulSets in the specified namespace, optionally matching a label selector.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the StatefulSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetListV1"/> containing the StatefulSets.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.WatchAll(System.String,System.String)">
            <summary>
                Watch for events relating to StatefulSets.
            </summary>
            <param name="labelSelector">
                An optional Kubernetes label selector expression used to filter the StatefulSets.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <returns>
                An <see cref="T:System.IObservable`1"/> representing the event stream.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.Create(KubeClient.Models.StatefulSetV1,System.Threading.CancellationToken)">
            <summary>
                Request creation of a <see cref="T:KubeClient.Models.StatefulSetV1"/>.
            </summary>
            <param name="newStatefulSet">
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the StatefulSet to create.
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the newly-created StatefulSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.Update(System.String,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KubeClient.Models.StatefulSetV1}},System.String,System.Threading.CancellationToken)">
            <summary>
                Request update (PATCH) of a <see cref="T:KubeClient.Models.StatefulSetV1"/>.
            </summary>
            <param name="name">
                The name of the target StatefulSet.
            </param>
            <param name="patchAction">
                A delegate that customises the patch operation.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the current state for the updated StatefulSet.
            </returns>
        </member>
        <member name="M:KubeClient.ResourceClients.IStatefulSetClientV1.Delete(System.String,System.String,System.Nullable{KubeClient.Models.DeletePropagationPolicy},System.Threading.CancellationToken)">
            <summary>
                Request deletion of the specified StatefulSet.
            </summary>
            <param name="name">
                The name of the StatefulSet to delete.
            </param>
            <param name="kubeNamespace">
                The target Kubernetes namespace (defaults to <see cref="P:KubeClient.KubeApiClient.DefaultNamespace"/>).
            </param>
            <param name="propagationPolicy">
                An optional <see cref="T:KubeClient.Models.DeletePropagationPolicy"/> value indicating how child resources should be deleted (if at all).
            </param>
            <param name="cancellationToken">
                An optional <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the request.
            </param>
            <returns>
                A <see cref="T:KubeClient.Models.StatefulSetV1"/> representing the StatefulSet's most recent state before it was deleted, if <paramref name="propagationPolicy"/> is <see cref="F:KubeClient.Models.DeletePropagationPolicy.Foreground"/>; otherwise, a <see cref="T:KubeClient.Models.StatusV1"/>.
            </returns>
        </member>
        <member name="T:KubeClient.Utilities.ProcessHelper">
            <summary>
                Helper methods for working with a <see cref="T:System.Diagnostics.Process"/>.
            </summary>
        </member>
        <member name="M:KubeClient.Utilities.ProcessHelper.WaitForExitAsync(System.Diagnostics.Process)">
            <summary>
                Asynchronously wait for the process to exit.
            </summary>
            <param name="process">
                The target <see cref="T:System.Diagnostics.Process"/>.
            </param>
            <returns>
                The process exit code.
            </returns>
        </member>
        <member name="M:KubeClient.Utilities.ProcessHelper.WaitForExitAsync(System.Diagnostics.Process,System.Threading.CancellationToken)">
            <summary>
                Asynchronously wait for the process to exit.
            </summary>
            <param name="process">
                The target <see cref="T:System.Diagnostics.Process"/>.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the wait.
            </param>
            <returns>
                The process exit code.
            </returns>
        </member>
        <member name="M:KubeClient.Utilities.ProcessHelper.WaitForExitAsync(System.Diagnostics.Process,System.Threading.CancellationToken,System.Boolean)">
            <summary>
                Asynchronously wait for the process to exit.
            </summary>
            <param name="process">
                The target <see cref="T:System.Diagnostics.Process"/>.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the wait.
            </param>
            <param name="killIfCancelled">
                Kill the process if the <paramref name="cancellationToken"/> is cancelled?
            </param>
            <returns>
                The process exit code.
            </returns>
        </member>
    </members>
</doc>
